{"version":3,"sources":["assets/script/logic/ui/prefab/UIRankLayer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6EAAwE;AACxE,uDAAkD;AAClD,uDAAkD;AAClD,mEAA8D;AAExD,IAAA,KAA8B,EAAE,CAAC,UAAU,EAAzC,OAAO,aAAA,EAAE,IAAI,UAAA,EAAE,QAAQ,cAAkB,CAAC;AAIlD;IAAyC,+BAAM;IAA/C;QAAA,qEAuDC;QAtDA,QAAE,GAAmB,IAAI,CAAC;QAO1B,cAAQ,GAAgB,EAAE,CAAC;;IA+C5B,CAAC;oBAvDoB,WAAW;IAS/B,8BAAQ,GAAR;QAAA,iBA6BC;QA5BA,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,wBAAc,CAAC,CAAC;QACjD,aAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5B,gBAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,wBAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAChF,MAAc,CAAC,WAAW,EAAE;aAC5B,IAAI,CAAC,UAAA,GAAG;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;YAC5B,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE;gBACjB,MAAc,CAAC,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC5C,MAAc,CAAC,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;gBAE7C,EAAE,CAAC,YAAY,CAAC,UAAU,CAAE,MAAc,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,OAAO;oBACrE,IAAI,GAAG,EAAE;wBACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;wBAChB,OAAO;qBACP;oBACD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;oBAC/B,IAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,OAAuB,CAAC,CAAC;oBAChE,WAAW,CAAC,MAAM,EAAE,CAAC;oBACrB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,IAAI;wBACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;oBAChC,CAAC,CAAC,CAAA;gBACH,CAAC,CAAC,CAAC;aACH;QAEF,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,GAAG;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAA;IACH,CAAC;IAED,4BAAM,GAAN;QACC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,4BAAM,GAAN;IAEA,CAAC;IAED,6BAAO,GAAP;IAEA,CAAC;IAED,6BAAO,GAAP;QACC,gBAAM,CAAC,OAAO,CAAC,aAAW,CAAC,CAAC;IAC7B,CAAC;;IAnDgB,qBAAS,GAAG,WAAW,CAAC;IACxB,qBAAS,GAAG,aAAa,CAAC;IAE7B,oBAAQ,GAAgB,IAAI,CAAC;IAE3C;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;iDACL;IARP,WAAW;QAF/B,OAAO;QACP,IAAI,CAAC,uBAAuB,CAAC;OACT,WAAW,CAuD/B;IAAD,kBAAC;CAvDD,AAuDC,CAvDwC,gBAAM,GAuD9C;kBAvDoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["import auto_rankLayer from \"../../../data/autoui/prefab/auto_rankLayer\";\nimport UIBase from \"../../../framework/ui/UIBase\";\nimport UIHelp from \"../../../framework/ui/UIHelp\";\nimport GameDataCenter from \"../../../userData/GameDataCenter\";\n\nconst { ccclass, menu, property } = cc._decorator;\n\n@ccclass\n@menu(\"UI/prefab/UIRankLayer\")\nexport default class UIRankLayer extends UIBase {\n\tui: auto_rankLayer = null;\n\n\tprotected static prefabUrl = \"rankLayer\";\n\tprotected static className = \"UIRankLayer\";\n\n\tpublic static instance: UIRankLayer = null;\n\t@property({ type: [cc.Sprite] })\n\ticonsSpr: cc.Sprite[] = [];\n\tonUILoad() {\n\t\tthis.ui = this.node.addComponent(auto_rankLayer);\n\t\tUIRankLayer.instance = this;\n\t\tUIHelp.SetSpriteFrame(this.ui.touxiangshiyi, GameDataCenter.accountModel.avatar);\n\t\t(window as any).GetGameInfo()\n\t\t.then(res => {\n\t\t\tconsole.log(res, '获取游戏信息成功')\n\t\t\tif (res.code == 0) {\n\t\t\t\t(window as any).currencyIcon = res.data.icon;\n\t\t\t\t(window as any).currencyName = res.data.coin;\n\n\t\t\t\tcc.assetManager.loadRemote((window as any).currencyIcon, (err, texture) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.log(err)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(texture, 'texture')\n\t\t\t\t\tconst spriteFrame = new cc.SpriteFrame(texture as cc.Texture2D);\n\t\t\t\t\tspriteFrame.addRef();\n\t\t\t\t\tthis.iconsSpr.forEach(item => {\n\t\t\t\t\t\titem.spriteFrame = spriteFrame;\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}\n\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err, '获取游戏信息失败')\n\t\t})\n\t}\n\n\tonShow() {\n\t\tthis.onRegisterEvent(this.ui.btn_back, this.onClose);\n\t}\n\n\tonHide() {\n\n\t}\n\n\tonStart() {\n\n\t}\n\n\tonClose() {\n\t\tUIHelp.CloseUI(UIRankLayer);\n\t}\n}"]}