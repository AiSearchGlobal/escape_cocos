{"version":3,"sources":["assets/script/framework/ui/UIBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import EventMng from \"../manager/EventMng\";\nimport { audioCnf, AudioMng } from \"../manager/AudioMng\";\n\nexport interface UIClass<T extends UIBase> {\n    new(): T;\n    getUrl(): string;\n    getName(): string;\n}\n\ninterface RegisterEvent {\n    callback: Function,\n    target?: any,\n    playAudio?: boolean,\n}\n\n\nconst PREFAB_UI_DIR = 'prefab/';\n\nconst { ccclass, property } = cc._decorator;\nimport VMParent from \"../component/VMParent\"\nimport { Log } from \"../../utils/Log\";\n@ccclass\nexport default abstract class UIBase extends VMParent {\n    protected static prefabUrl;\n    protected static className;\n\n    @property(cc.Node)\n    maskNode: cc.Node = null;\n\n    @property(cc.Node)\n    alertNode: cc.Node = null;\n\n    protected mTag: any;\n    public get tags(): any {\n        return this.mTag;\n    }\n    public set tags(value: any) {\n        this.mTag = value;\n    }\n\n    /**\n     * 得到prefab的路径，相对于resources目录\n     */\n    public static getUrl(): string {\n        return PREFAB_UI_DIR + this.prefabUrl;\n    }\n\n    /**\n     * 类名，用于给UI命名\n     */\n    public static getName(): string {\n        return this.className;\n    }\n\n    /**通知事件列表 */\n    private _notifyEventList: Map<string, Function>;\n    /**点击事件列表 */\n    private _registerEventList: Map<string, any>;\n\n    /* ----------------------------- 以下方法不能在子类重写 ----------------------------- */\n    /**初始化函数，在onLoad之前被调用，params为打开ui是传入的不定参数数组 */\n    init(params) {\n        this.onInit(params);\n    }\n\n    /**onLoad 会在组件被首次加载的时候被回调。且优先于任何start */\n    onLoad() {\n        super.onLoad();\n        this._notifyEventList = new Map<string, Function>();\n        this._registerEventList = new Map<string, cc.Node>();\n\n        this.onUILoad();\n    }\n\n    onDestroy() {\n        super.onDestroy();\n        this.onUIDestroy();\n    }\n\n    onEnable() {\n        this.onShow();\n    }\n\n    onDisable() {\n        this.onHide();\n\n        let self = this;\n        this._notifyEventList.forEach((f, key) => {\n            EventMng.off(key, f, self);\n        }, this);\n        this._notifyEventList.clear();\n\n        this._registerEventList.forEach((f, key) => {\n            f[\"node\"].off(f[\"type\"]);\n        }, this);\n        this._registerEventList.clear();\n    }\n\n    /**注册notice事件，disable的时候会自动移除 */\n    initEvent(eventName: string, cb: Function) {\n        EventMng.on(eventName, cb, this);\n        this._notifyEventList.set(eventName, cb);\n    }\n\n    private touchEvent(event) {\n        event.stopPropagation();\n    }\n\n    start() {\n        if (this.maskNode) {\n            let opacity = this.maskNode.opacity;\n            this.maskNode.opacity = 0;\n            cc.tween(this.maskNode).to(0.3, { opacity: opacity }).start();\n        }\n\n        if (this.alertNode) {\n            this.alertNode.scale = 0;\n            this.alertNode.opacity = 0;\n            cc.tween(this.alertNode).to(0.3, { opacity: 255 }).start();\n            cc.tween(this.alertNode).to(0.3, { scale: 1.2 }).to(0.1, { scale: 1 }).start();\n        }\n        \n        this.onStart();\n    }\n\n    update(dt) {\n        this.onUpdate(dt);\n    }\n    /* ---------------------------------------------------------------------------------- */\n\n\n    onInit(params) {\n\n    }\n\n    onUILoad() {\n\n    }\n\n    onUIDestroy() {\n\n    }\n\n    onShow() {\n\n    }\n\n    onHide() {\n\n    }\n\n    onStart() {\n\n    }\n\n    onUpdate(dt) {\n\n    }\n\n    onClose() {\n\n    }\n\n\n    /**\n     * 注册touch事件\n     * @param node \n     * @param callback \n     * @param target \n     * @param playAudio 是否播放音效，默认播放\n     */\n\n    onRegisterEvent(node: cc.Node, callback, audioclip = 'ui_click', playAudio = true) {\n        var btn = node.getComponent(cc.Button);\n        var toggle = node.getComponent(cc.Toggle);\n        var self = this;\n\n        if (!node) {\n            Log.error(\"no node\");\n            return;\n        }\n\n        if (btn) {\n            btn.node.on(\"click\", () => {\n                if (playAudio && audioCnf.click) {\n                    AudioMng.getInstance().playSFX(audioclip);\n                }\n\n                callback.call(self, btn);\n            }, self);\n\n            this._registerEventList.set(node.uuid, { node: node, type: \"click\" });\n        } else if (toggle) {\n            toggle.node.on(\"toggle\", () => {\n                if (playAudio && audioCnf.click) {\n                    AudioMng.getInstance().playSFX(audioclip);\n                }\n\n                callback.call(self, toggle);\n            }, self);\n\n            this._registerEventList.set(node.uuid, { node: node, type: \"toggle\" });\n        } else {\n            Log.error(\"not btn or toggle\");\n        }\n    }\n}"]}