{"version":3,"sources":["assets/script/framework/behavior/BhvGroupToggle.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property, menu} = cc._decorator;\n\nenum PARAM_TYPE {\n    CHILDREN_INDEX,\n    CHILDREN_NAME\n}\n\n\n\n/**\n * 群体事件，适合绑定节点组的回调信息\n * 将该组件的所处节点的 所有子节点，绑定相同的回调对象 \n */\n@ccclass\n@menu(\"添加特殊行为/Input/Toggle Group(一组Toggle控制)\")\nexport default class BhvGroupToggle extends cc.Component {\n\n    @property({\n        type:cc.Enum(cc.Toggle.Transition)\n    })\n    transition:cc.Button.Transition = cc.Toggle.Transition.NONE;\n\n    @property({visible:function(){return this.transition === cc.Toggle.Transition.COLOR}})\n    hoverColor:cc.Color = cc.color(255,255,255);\n\n    @property({visible:function(){return this.transition === cc.Toggle.Transition.COLOR}})\n    normalColor:cc.Color = cc.color(214,214,214);\n\n    @property({visible:function(){return this.transition === cc.Toggle.Transition.COLOR}})\n    pressedColor:cc.Color = cc.color(211,211,211);\n\n    @property({visible:function(){return this.transition === cc.Toggle.Transition.COLOR}})\n    disabledColor:cc.Color = cc.color(124,124,124);\n\n    @property({\n        type:cc.SpriteFrame,\n        visible:function(){return this.transition === cc.Toggle.Transition.SPRITE}\n    })\n    normalSprite: cc.SpriteFrame = null;\n\n    @property({\n        type:cc.SpriteFrame,\n        visible:function(){return this.transition === cc.Toggle.Transition.SPRITE}\n    })\n    pressedSprite: cc.SpriteFrame = null;\t\n\n    @property({\n        type:cc.SpriteFrame,\n        visible:function(){return this.transition === cc.Toggle.Transition.SPRITE}\n    })\n    hoverSprite: cc.SpriteFrame = null;\t\t\n\n    @property({\n        type:cc.SpriteFrame,\n        visible:function(){return this.transition === cc.Toggle.Transition.SPRITE}\n    })\n    disabledSprite: cc.SpriteFrame = null;\t\n\n    @property({visible:function(){return this.transition === cc.Toggle.Transition.SCALE||this.transition === cc.Toggle.Transition.COLOR}})\n    duration:number = 1.0;\n\n    @property({visible:function(){return this.transition === cc.Toggle.Transition.SCALE}})\n    zoomScale:number = 1.1;\n\n    @property({\n        type:cc.Enum(PARAM_TYPE)\n    })\n    paramType:PARAM_TYPE = PARAM_TYPE.CHILDREN_INDEX;\n    \n    @property([cc.Component.EventHandler])\n    touchEvents: cc.Component.EventHandler[] = [];\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        \n        this.node.children.forEach((node,nodeIndex) => {\n            let comp = node.getComponent(cc.Toggle);\n            if(!comp){\n                comp = node.addComponent(cc.Toggle);\n            }\n\n            //同步属性\n\n            comp.target = node;\n            comp.transition = this.transition;\n            comp.zoomScale = this.zoomScale;\n\n            comp.disabledSprite  = this.disabledSprite;\n            comp.hoverSprite = this.hoverSprite;\n            comp.normalSprite = this.normalSprite;\n            comp.pressedSprite = this.pressedSprite;\n\n            comp.hoverColor = this.hoverColor;\n            comp.normalColor = this.normalColor;\n            comp.pressedColor = this.pressedColor;\n            comp.disabledColor = this.disabledColor;\n\n            //绑定回调事件\n\n            this.touchEvents.forEach((event) => {\n                //克隆数据，每个节点获取的都是不同的回调\n                let hd = new cc.Component.EventHandler();//copy对象\n                hd.target = event.target;\n                hd.handler = event.handler;\n                hd.component = event.component;\n                hd['_componentId'] = event['_componentId'];\n                \n                if(this.paramType === PARAM_TYPE.CHILDREN_INDEX){\n                    hd.customEventData = nodeIndex.toString();\n                }else{\n                    hd.customEventData = node.name;\n                }\n                comp.clickEvents.push(hd);\n            })\n        });\n\n    }\n\n    // update (dt) {}\n}\n"]}