{"version":3,"sources":["assets/script/framework/adapter/define/interface.ts"],"names":[],"mappings":"","file":"","sourceRoot":"/","sourcesContent":["import { Layer, WrapMode } from \"./enum\"\nexport interface ILike {\n    x: number\n    y: number\n}\nexport interface IModel<T> {\n    /** 用户自定义数据，可以自由修改，修改后调用 update来更新当前数据(如果当前数据在可视范围内) */\n    data: T\n    /** 布局元素 */\n    element: IElement\n    /** 更新当前数据 */\n    update: () => void\n    // 以下内容不需要用户修改\n    /** model索引 用户不能修改 */\n    index: number\n    /** 数据特征码  */\n    code: string\n    /** 数据尺寸，用户不能修改*/\n    size: ILike\n    /** 布局用的虚拟尺寸，用户不能修改 */\n    layoutSize: ILike\n    /** 数据缩放，用户不能修改*/\n    scale: ILike\n    /** 布局用的虚拟坐标，用户不能修改 */\n    position: ILike\n    /** 数据锚点，用户不能修改 */\n    anchorPoint: ILike\n}\nexport interface IElement {\n    /**\n    * 前换行，当前元素相对于前一个元素的换行模式，默认值 Wrap\n    */\n    wrapBeforeMode: WrapMode\n    /**\n     * 后换行，下一个元素相对于自己的换行模式，默认值 Nowrap\n     */\n    wrapAfterMode: WrapMode\n    /**\n     * 忽略布局，使其不受Layout控制\n     */\n    ignoreLayout: boolean\n    /**\n     * 仅 ignoreLayout = true 时有效，\n     * 作用：当忽略布局时是否保留其位置，如果为true则会保留\n     * 默认为 false 当 ignoreLayout = true 时其位置会被后面的元素填满\n     */\n    placeholder: boolean\n    /**\n     * 最小尺寸，如果同时设置了preferredSize则取最大值（只会影响滑动反方向）\n     */\n    minSize: ILike\n    /**\n     * 首选尺寸，如果同时设置了minSize则取最大值（只会影响滑动反方向）\n     */\n    preferredSize: ILike\n    /**\n     * flex,和CSS flex一样的作用（只会影响滑动反方向）\n     */\n    flexibleSize: ILike\n    /** \n     * 指定当前数据的层级，如果未设置，使用最低层 Lowest\n     */\n    layer: Layer\n    /**\n     * 固定到顶部\n     */\n    fixed: boolean\n    /**\n     * 开启fixed时有效，固定时顶部的偏移量\n     */\n    fixedOffset: number\n    /**\n     * 开启fixed时有效，与下一个设置了fixed的item的间距\n     */\n    fixedSpacing: number\n    update: () => void\n}"]}