{"version":3,"sources":["assets/script/framework/lib/xxtea.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export class xxtea {\n    private constructor() { }\n    private static instance: xxtea;\n    private _protoBufRoot;\n    static getInstance(): xxtea {\n        if (!xxtea.instance) {\n            xxtea.instance = new xxtea();\n            xxtea.instance.initInstance();\n        }\n        return this.instance;\n    }\n    //init function\n    private initInstance() {\n    }\n\n\n    btoa(str) {\n        var base64EncodeChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n        // return function (str) {\n        var buf, i, j, len, r, l, c;\n        i = j = 0;\n        len = str.length;\n        r = len % 3;\n        len = len - r;\n        l = (len / 3) << 2;\n        if (r > 0) {\n            l += 4;\n        }\n        buf = new Array(l);\n\n        while (i < len) {\n            c = str.charCodeAt(i++) << 16 |\n                str.charCodeAt(i++) << 8 |\n                str.charCodeAt(i++);\n            buf[j++] = base64EncodeChars[c >> 18] +\n                base64EncodeChars[c >> 12 & 0x3f] +\n                base64EncodeChars[c >> 6 & 0x3f] +\n                base64EncodeChars[c & 0x3f];\n        }\n        if (r == 1) {\n            c = str.charCodeAt(i++);\n            buf[j++] = base64EncodeChars[c >> 2] +\n                base64EncodeChars[(c & 0x03) << 4] +\n                \"==\";\n        }\n        else if (r == 2) {\n            c = str.charCodeAt(i++) << 8 |\n                str.charCodeAt(i++);\n            buf[j++] = base64EncodeChars[c >> 10] +\n                base64EncodeChars[c >> 4 & 0x3f] +\n                base64EncodeChars[(c & 0x0f) << 2] +\n                \"=\";\n        }\n        return buf.join('');\n        // };\n    };\n\n    atob(str) {\n        var base64DecodeChars = [\n            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,\n            52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,\n            -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n            15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n            -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n            41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1\n        ];\n        // return function (str) {\n        var c1, c2, c3, c4;\n        var i, j, len, r, l, out;\n\n        len = str.length;\n        if (len % 4 !== 0) {\n            return '';\n        }\n        if (/[^ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\\+\\/\\=]/.test(str)) {\n            return '';\n        }\n        if (str.charAt(len - 2) == '=') {\n            r = 1;\n        }\n        else if (str.charAt(len - 1) == '=') {\n            r = 2;\n        }\n        else {\n            r = 0;\n        }\n        l = len;\n        if (r > 0) {\n            l -= 4;\n        }\n        l = (l >> 2) * 3 + r;\n        out = new Array(l);\n\n        i = j = 0;\n        while (i < len) {\n            // c1\n            c1 = base64DecodeChars[str.charCodeAt(i++)];\n            if (c1 == -1) break;\n\n            // c2\n            c2 = base64DecodeChars[str.charCodeAt(i++)];\n            if (c2 == -1) break;\n\n            out[j++] = String.fromCharCode((c1 << 2) | ((c2 & 0x30) >> 4));\n\n            // c3\n            c3 = base64DecodeChars[str.charCodeAt(i++)];\n            if (c3 == -1) break;\n\n            out[j++] = String.fromCharCode(((c2 & 0x0f) << 4) | ((c3 & 0x3c) >> 2));\n\n            // c4\n            c4 = base64DecodeChars[str.charCodeAt(i++)];\n            if (c4 == -1) break;\n\n            out[j++] = String.fromCharCode(((c3 & 0x03) << 6) | c4);\n        }\n        return out.join('');\n        // };\n    };\n\n    private DELTA = 0x9E3779B9;\n\n    toBinaryString(v, includeLength) {\n        var length = v.length;\n        var n = length << 2;\n        if (includeLength) {\n            var m = v[length - 1];\n            n -= 4;\n            if ((m < n - 3) || (m > n)) {\n                return null;\n            }\n            n = m;\n        }\n        for (var i = 0; i < length; i++) {\n            v[i] = String.fromCharCode(\n                v[i] & 0xFF,\n                v[i] >>> 8 & 0xFF,\n                v[i] >>> 16 & 0xFF,\n                v[i] >>> 24 & 0xFF\n            );\n        }\n        var result = v.join('');\n        if (includeLength) {\n            return result.substring(0, n);\n        }\n        return result;\n    }\n\n    toUint32Array(bs, includeLength) {\n        var length = bs.length;\n        var n = length >> 2;\n        if ((length & 3) !== 0) {\n            ++n;\n        }\n        var v;\n        if (includeLength) {\n            v = new Array(n + 1);\n            v[n] = length;\n        }\n        else {\n            v = new Array(n);\n        }\n        for (var i = 0; i < length; ++i) {\n            v[i >> 2] |= bs.charCodeAt(i) << ((i & 3) << 3);\n        }\n        return v;\n    }\n\n    int32(i) {\n        return i & 0xFFFFFFFF;\n    }\n\n    mx(sum, y, z, p, e, k) {\n        return ((z >>> 5 ^ y << 2) + (y >>> 3 ^ z << 4)) ^ ((sum ^ y) + (k[p & 3 ^ e] ^ z));\n    }\n\n    fixk(k) {\n        if (k.length < 4) k.length = 4;\n        return k;\n    }\n\n    encryptUint32Array(v, k) {\n        var length = v.length;\n        var n = length - 1;\n        var y, z, sum, e, p, q;\n        z = v[n];\n        sum = 0;\n        for (q = Math.floor(6 + 52 / length) | 0; q > 0; --q) {\n            sum = this.int32(sum + this.DELTA);\n            e = sum >>> 2 & 3;\n            for (p = 0; p < n; ++p) {\n                y = v[p + 1];\n                z = v[p] = this.int32(v[p] + this.mx(sum, y, z, p, e, k));\n            }\n            y = v[0];\n            z = v[n] = this.int32(v[n] + this.mx(sum, y, z, n, e, k));\n        }\n        return v;\n    }\n\n    decryptUint32Array(v, k) {\n        var length = v.length;\n        var n = length - 1;\n        var y, z, sum, e, p, q;\n        y = v[0];\n        q = Math.floor(6 + 52 / length);\n        for (sum = this.int32(q * this.DELTA); sum !== 0; sum = this.int32(sum - this.DELTA)) {\n            e = sum >>> 2 & 3;\n            for (p = n; p > 0; --p) {\n                z = v[p - 1];\n                y = v[p] = this.int32(v[p] - this.mx(sum, y, z, p, e, k));\n            }\n            z = v[n];\n            y = v[0] = this.int32(v[0] - this.mx(sum, y, z, 0, e, k));\n        }\n        return v;\n    }\n\n    utf8Encode(str) {\n        if (/^[\\x00-\\x7f]*$/.test(str)) {\n            return str;\n        }\n        var buf = [];\n        var n = str.length;\n        for (var i = 0, j = 0; i < n; ++i, ++j) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit < 0x80) {\n                buf[j] = str.charAt(i);\n            }\n            else if (codeUnit < 0x800) {\n                buf[j] = String.fromCharCode(0xC0 | (codeUnit >> 6),\n                    0x80 | (codeUnit & 0x3F));\n            }\n            else if (codeUnit < 0xD800 || codeUnit > 0xDFFF) {\n                buf[j] = String.fromCharCode(0xE0 | (codeUnit >> 12),\n                    0x80 | ((codeUnit >> 6) & 0x3F),\n                    0x80 | (codeUnit & 0x3F));\n            }\n            else {\n                if (i + 1 < n) {\n                    var nextCodeUnit = str.charCodeAt(i + 1);\n                    if (codeUnit < 0xDC00 && 0xDC00 <= nextCodeUnit && nextCodeUnit <= 0xDFFF) {\n                        var rune = (((codeUnit & 0x03FF) << 10) | (nextCodeUnit & 0x03FF)) + 0x010000;\n                        buf[j] = String.fromCharCode(0xF0 | ((rune >> 18) & 0x3F),\n                            0x80 | ((rune >> 12) & 0x3F),\n                            0x80 | ((rune >> 6) & 0x3F),\n                            0x80 | (rune & 0x3F));\n                        ++i;\n                        continue;\n                    }\n                }\n                throw new Error('Malformed string');\n            }\n        }\n        return buf.join('');\n    }\n\n    utf8DecodeShortString(bs, n) {\n        var charCodes = new Array(n);\n        var i = 0, off = 0;\n        for (var len = bs.length; i < n && off < len; i++) {\n            var unit = bs.charCodeAt(off++);\n            switch (unit >> 4) {\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                    charCodes[i] = unit;\n                    break;\n                case 12:\n                case 13:\n                    if (off < len) {\n                        charCodes[i] = ((unit & 0x1F) << 6) |\n                            (bs.charCodeAt(off++) & 0x3F);\n                    }\n                    else {\n                        throw new Error('Unfinished UTF-8 octet sequence');\n                    }\n                    break;\n                case 14:\n                    if (off + 1 < len) {\n                        charCodes[i] = ((unit & 0x0F) << 12) |\n                            ((bs.charCodeAt(off++) & 0x3F) << 6) |\n                            (bs.charCodeAt(off++) & 0x3F);\n                    }\n                    else {\n                        throw new Error('Unfinished UTF-8 octet sequence');\n                    }\n                    break;\n                case 15:\n                    if (off + 2 < len) {\n                        var rune = (((unit & 0x07) << 18) |\n                            ((bs.charCodeAt(off++) & 0x3F) << 12) |\n                            ((bs.charCodeAt(off++) & 0x3F) << 6) |\n                            (bs.charCodeAt(off++) & 0x3F)) - 0x10000;\n                        if (0 <= rune && rune <= 0xFFFFF) {\n                            charCodes[i++] = (((rune >> 10) & 0x03FF) | 0xD800);\n                            charCodes[i] = ((rune & 0x03FF) | 0xDC00);\n                        }\n                        else {\n                            throw new Error('Character outside valid Unicode range: 0x' + rune.toString(16));\n                        }\n                    }\n                    else {\n                        throw new Error('Unfinished UTF-8 octet sequence');\n                    }\n                    break;\n                default:\n                    throw new Error('Bad UTF-8 encoding 0x' + unit.toString(16));\n            }\n        }\n        if (i < n) {\n            charCodes.length = i;\n        }\n        return String.fromCharCode.apply(String, charCodes);\n    }\n\n    utf8DecodeLongString(bs, n) {\n        var buf = [];\n        var charCodes = new Array(0x8000);\n        var i = 0, off = 0;\n        for (var len = bs.length; i < n && off < len; i++) {\n            var unit = bs.charCodeAt(off++);\n            switch (unit >> 4) {\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                    charCodes[i] = unit;\n                    break;\n                case 12:\n                case 13:\n                    if (off < len) {\n                        charCodes[i] = ((unit & 0x1F) << 6) |\n                            (bs.charCodeAt(off++) & 0x3F);\n                    }\n                    else {\n                        throw new Error('Unfinished UTF-8 octet sequence');\n                    }\n                    break;\n                case 14:\n                    if (off + 1 < len) {\n                        charCodes[i] = ((unit & 0x0F) << 12) |\n                            ((bs.charCodeAt(off++) & 0x3F) << 6) |\n                            (bs.charCodeAt(off++) & 0x3F);\n                    }\n                    else {\n                        throw new Error('Unfinished UTF-8 octet sequence');\n                    }\n                    break;\n                case 15:\n                    if (off + 2 < len) {\n                        var rune = (((unit & 0x07) << 18) |\n                            ((bs.charCodeAt(off++) & 0x3F) << 12) |\n                            ((bs.charCodeAt(off++) & 0x3F) << 6) |\n                            (bs.charCodeAt(off++) & 0x3F)) - 0x10000;\n                        if (0 <= rune && rune <= 0xFFFFF) {\n                            charCodes[i++] = (((rune >> 10) & 0x03FF) | 0xD800);\n                            charCodes[i] = ((rune & 0x03FF) | 0xDC00);\n                        }\n                        else {\n                            throw new Error('Character outside valid Unicode range: 0x' + rune.toString(16));\n                        }\n                    }\n                    else {\n                        throw new Error('Unfinished UTF-8 octet sequence');\n                    }\n                    break;\n                default:\n                    throw new Error('Bad UTF-8 encoding 0x' + unit.toString(16));\n            }\n            if (i >= 0x7FFF - 1) {\n                var size = i + 1;\n                charCodes.length = size;\n                buf[buf.length] = String.fromCharCode.apply(String, charCodes);\n                n -= size;\n                i = -1;\n            }\n        }\n        if (i > 0) {\n            charCodes.length = i;\n            buf[buf.length] = String.fromCharCode.apply(String, charCodes);\n        }\n        return buf.join('');\n    }\n\n    // n is UTF16 length\n    utf8Decode(bs, n?) {\n        if (n === undefined || n === null || (n < 0)) n = bs.length;\n        if (n === 0) return '';\n        if (/^[\\x00-\\x7f]*$/.test(bs) || !(/^[\\x00-\\xff]*$/.test(bs))) {\n            if (n === bs.length) return bs;\n            return bs.substr(0, n);\n        }\n        return ((n < 0x7FFF) ?\n            this.utf8DecodeShortString(bs, n) :\n            this.utf8DecodeLongString(bs, n));\n    }\n\n    encrypt(data, key) {\n        if (data === undefined || data === null || data.length === 0) {\n            return data;\n        }\n        data = this.utf8Encode(data);\n        key = this.utf8Encode(key);\n        return this.toBinaryString(this.encryptUint32Array(this.toUint32Array(data, true), this.fixk(this.toUint32Array(key, false))), false);\n    }\n\n    encryptToBase64(data, key) {\n        return this.btoa(this.encrypt(data, key));\n    }\n\n    decrypt(data, key) {\n        if (data === undefined || data === null || data.length === 0) {\n            return data;\n        }\n        key = this.utf8Encode(key);\n        return this.utf8Decode(this.toBinaryString(this.decryptUint32Array(this.toUint32Array(data, false), this.fixk(this.toUint32Array(key, false))), true));\n    }\n\n    decryptFromBase64(data, key) {\n        if (data === undefined || data === null || data.length === 0) {\n            return data;\n        }\n        return this.decrypt(this.atob(data), key);\n    }\n    strToHexCharCode(str) {\n\n        var i = 0, l = str.length, chr, hex = ''\n\n        for (i; i < l; ++i) {\n\n            chr = str.charCodeAt(i).toString(16)\n\n            hex += chr.length < 2 ? '0' + chr : chr\n\n        }\n        return hex\n    }\n}\n"]}