{"version":3,"sources":["assets/script/framework/adapter/manager/ScrollManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// import { UITransform, Widget, _decorator, Node, cc.Event.EventTouch, Vec3, instantiate, cc.Event.EventMouse, macro, easing, NodeEventType, Label, sp, Graphics, Color } from 'cc';\nimport { Manager } from '../abstract/Manager';\nimport { ScrollAdapter } from '../abstract/ScrollAdapter';\nimport { ADAPTER_DEBUG_CONTENT, DEBUG_DRAW_LIND_WIDTH, DEBUG_DRAW_FILL_COLOR, DEBUG_DRAW_BORDER_COLOR } from '../define/debug';\nimport { AlwaysScroll, Layer, MovementType, NestedDirection, Orientation, ScrollDirection, TouchMode } from '../define/enum';\nimport { ILike } from '../define/interface';\nimport { Helper } from '../help/helper';\nimport { ViewManager } from './ViewManager';\nconst { ccclass, property } = cc._decorator;\nconst _tempPosition = new cc.Vec3()\nexport const ADAPTER = '__ADAPTER__'\ninterface IScrollHandle {\n    stop?: Function\n    change?: Function\n    deltaTime: number\n    duration: number\n    current: number\n    from: number\n    to: number,\n}\nenum Event {\n    /** 滚动中 */\n    ON_SCROLL,\n\n    /** 更新滚动百分比 */\n    ON_UPDATE_PERCENTAGE,\n\n    /** 当View 尺寸变化时 */\n    ON_VIEW_SIZE_CHANGED,\n\n    /** 当自动滚动即将停止时 */\n    ON_ABOUT_TO_STOP,\n\n    /** 当滚动开始时 */\n    ON_SCROLL_START,\n\n    /** 当滚动抬起时 */\n    ON_SCROLL_END,\n\n    /** 当滚动取消时 */\n    ON_SCROLL_CANCEL,\n\n    /** 当主轴方向改变时 */\n    ON_CHANGED_ORIENTATION,\n\n    /** 当滚动到指定单行索引之前 */\n    ON_SCROLL_TO_GROUPINDEX_BEFOR,\n\n    /** 当滚动到指定单行索引之后 */\n    ON_SCROLL_TO_GROUPINDEX_AFTER,\n\n    /** 当滚动到指定数据索引之后 */\n    ON_SCROLL_TO_MODELINDEX_BEFOR,\n\n    /** 当滚动到指定数据索引之后 */\n    ON_SCROLL_TO_MODELINDEX_AFTER,\n}\n@ccclass('ScrollManager')\nexport class ScrollManager extends Manager {\n    public static Event = Event\n    @property() private _view: cc.Node = null\n    @property({ type: cc.Node }) get view() { return this._view }\n    set view(value: cc.Node) {\n        this._view = value\n    }\n    @property() private _content: cc.Node = null\n    @property({ type: cc.Node }) get content() { return this._content }\n    private set content(value: cc.Node) {\n        this._content = value\n    }\n    @property({ type: Orientation }) private _orientation: Orientation = Orientation.Vertical\n    @property({ type: Orientation }) get orientation() { return this._orientation }\n    set orientation(value: Orientation) {\n        if (value == this._orientation) return\n        this._orientation = value\n        this.emit(Event.ON_CHANGED_ORIENTATION)\n    }\n    @property({\n        type: TouchMode,\n        tooltip: `Auto: 当内容撑满可视区域或开启ReleaseManager时允许拖动\n        AlwaysAllow: 任何情况下都可以拖动，即使没有任何元素\n        Disabled: 任何情况下都禁用拖动\n        `\n    }) touchMode: TouchMode = TouchMode.Auto\n    @property({ type: MovementType }) movementType: MovementType = MovementType.Elastic\n    @property({\n        range: [0, 1], slide: true, step: 0.001,\n        visible: function () { return this.movementType == MovementType.Elastic }\n    }) elasticity: number = 0.1\n    @property() inertia: boolean = true\n    @property({\n        range: [0, 1], slide: true, step: 0.001,\n        visible: function () { return this.inertia }\n    }) decelerationRate: number = 0.135\n    // TODO 鼠标滚轮暂时不做，感觉不是必要功能\n    // @property scrollSensitivity: number = 0.01 \n    @property({\n        tooltip: \"当滚动速度小于这个值时，会发送ON_ABOUT_TO_STOP广播\"\n    }) aboutToStopVelocity: number = 100\n    @property({\n        tooltip: \"取消子节点的Button点击事件\"\n    }) cancelInnerEvents: boolean = true\n    @property({\n        range: [0, 0.5], slide: true, step: 0.001,\n        visible: function () { return this.inertia },\n        tooltip: `嵌套时，当子元素的ScrollView拖动方向和当前拖动方向相同时，使用当前阈值进行计算由谁来处理拖动\n        无特殊需求时，默认值即可`\n    }) nestedMinThreshold: number = 0.001\n    @property({\n        range: [0.5, 1], slide: true, step: 0.001,\n        visible: function () { return this.inertia },\n        tooltip: `嵌套时，当子元素的ScrollView拖动方向和当前拖动方向相同时，使用当前阈值进行计算由谁来处理拖动\n        无特殊需求时，默认值即可`\n    }) nestedMaxThreshold: number = 0.999\n    private __debug_graphics: cc.Graphics\n    private _boundaryOffset: number = 0\n    private _viewWidget: cc.Widget = null\n    private _parentAdapter: ScrollAdapter\n    private _layerLowest: cc.Node\n    private _layerMedium: cc.Node\n    private _layerHighest: cc.Node\n    private _percentage: number = 0\n    private _velocity: number = 0\n    private _dragging: boolean = false\n    private _scrolling: boolean = false\n    private _isCanceledEvent: boolean = false\n    private _contentStartPosition: cc.Vec2 = new cc.Vec2()\n    private _prevContentPosition: cc.Vec2 = new cc.Vec2()\n    private _nestedDirection: NestedDirection = NestedDirection.Both\n    private _parentTouch: boolean = false\n    private _stopCheckNested: boolean = false\n    private _scrollHandlePercentage: IScrollHandle = null\n    private _scrollHandlePosition: IScrollHandle = null\n    private _isEmitAboutToStop: boolean = false\n    private _isMyEventAndMoved: boolean = false\n    private _scrollDirection: ScrollDirection = ScrollDirection.None\n    private _laseScrollDirection: ScrollDirection = ScrollDirection.None\n    private _touchEvent: cc.Event.EventTouch = null\n    private get _viewMin() { return -this.adapter.mainAxisSize }\n    private get _viewMax() { return this.adapter.mainAxisSize }\n    private get _defaultMin() { return this.adapter.multiplier == 1 ? -this.adapter.mainAxisSize : 0 }\n    private get _defaultMax() { return this.adapter.multiplier == 1 ? 0 : this.adapter.mainAxisSize }\n    public get isMyEventAndMoved() { return this._isMyEventAndMoved }\n    public get velocity() { return this._velocity }\n    public get scrollDirection() { return this._scrollDirection }\n    public get laseScrollDirection() { return this._laseScrollDirection }\n    public get percentage() { return this._percentage }\n    public get dragging() { return this._dragging }\n    public get boundaryOffset() { return this._boundaryOffset }\n    public get parentAdapter() { return this._parentAdapter }\n    public get canAutoScroll() {\n        return !this.dragging && this.adapter.viewManager.virtualSize > this.adapter.mainAxisSize\n    }\n    public get canTouch() {\n        if (this.touchMode == TouchMode.AlwaysAllow) {\n            return true\n        }\n        if (this.touchMode == TouchMode.Disabled) {\n            return false\n        }\n        if (this.adapter.centerManager.enabled) {\n            return true\n        }\n        if (this.adapter.releaseManager.enabled) {\n            return true\n        }\n        return this.adapter.viewManager.virtualSize > this.adapter.mainAxisSize\n    }\n    public get contentPosition() {\n        return this.content.position[this.adapter.mainAxis]\n    }\n    protected onInit(): void {\n        this._initView()\n        this._initContent()\n        this._parentAdapter = this.adapter.getParentAdapter(this.adapter.node.parent)\n        this.view[ADAPTER] = true\n        this.adapter.viewManager.on(ViewManager.Event.ON_UPDATE_VIEWS, this._onUpdateViews, this)\n        this.adapter.viewManager.on(ViewManager.Event.ON_CHANGED_VIRTUALSIZE, this._onChangedVirtualSize, this)\n        this.adapter.viewManager.on(ViewManager.Event.ON_CHANGED_OVERFLOWHEADER, this._onChangedOverflowHeader, this)\n        this.adapter.viewManager.on(ViewManager.Event.ON_RESET_ALL_STATE, this._onResetAllState, this)\n        this.adapter.viewManager.on(ViewManager.Event.ON_CLEARVIEWS, this._onResetAllState, this)\n        this.adapter.node.on(cc.Node.EventType.SIZE_CHANGED, this._onAdapterSizeChanged, this)\n        this.view.on(cc.Node.EventType.SIZE_CHANGED, this._onViewSizeChanged, this)\n        this._registerTouchEvent()\n        this.__createDebug()\n        this.adapter.scheduleOnce(() => {\n            this._updatePercentage()\n        })\n    }\n    private _initView() {\n        if (!this.view) {\n            throw Error(\"ScrollManager view 参数为空！\")\n        }\n        var anchorPoint = { x: 0.5, y: 0.5 }\n        anchorPoint[this.adapter.mainAxis] = this.adapter.mainAxisAnchorPoint\n        this.view.setAnchorPoint(anchorPoint.x, anchorPoint.y)\n        var widget = this.view.getComponent(cc.Widget)\n        if (!widget) {\n            widget = this.view.addComponent(cc.Widget)\n            widget.isAlignLeft = widget.isAlignRight = widget.isAlignTop = widget.isAlignBottom = true\n            widget.left = widget.right = widget.top = widget.bottom = 0\n        }\n        widget.updateAlignment()\n        this._viewWidget = widget\n    }\n    private __createDebug() {\n        if (ADAPTER_DEBUG_CONTENT) {\n            var obj = new cc.Node(\"__DEBUG_CONTENT_RECT__\")\n            obj.parent = this.view\n            // obj.layer = this.view.node.layer\n            this.__debug_graphics = obj.addComponent(cc.Graphics)\n            this.__debug_graphics.lineWidth = DEBUG_DRAW_LIND_WIDTH\n            this.__debug_graphics.fillColor = DEBUG_DRAW_FILL_COLOR\n            this.__debug_graphics.strokeColor = DEBUG_DRAW_BORDER_COLOR\n        }\n    }\n    private __drawDebug() {\n        if (!this.__debug_graphics) return\n        this.__debug_graphics.clear()\n        var mainAxis = this.adapter.mainAxis\n        var crossAxis = this.adapter.crossAxis\n        var multiplier = this.adapter.multiplier\n        var position = { x: 0, y: 0 }\n        var size = { x: 0, y: 0 }\n        size[mainAxis] = this.adapter.viewManager.virtualSize\n        size[crossAxis] = this.adapter.crossAxisSize\n        position[mainAxis] = this.contentPosition - (size[mainAxis] * this.content.getAnchorPoint()[mainAxis]) * multiplier\n        position[mainAxis] += this.adapter.viewManager.overflowHeader\n        position[crossAxis] -= size[crossAxis] * this.view.getAnchorPoint()[crossAxis]\n        this.__debug_graphics.fillRect(position.x, position.y, size.x, size.y)\n        this.__debug_graphics.stroke()\n    }\n    private _initContent() {\n        if (!this.content) {\n            throw Error(\"ScrollManager content 参数为空！\")\n        }\n        this.content.setAnchorPoint(this.view.getAnchorPoint())\n        var size = { x: 0, y: 0 }\n        size[this.adapter.crossAxis] = Helper.sizeToVec(this.view.getContentSize())[this.adapter.crossAxis]\n        this.content.setContentSize(size.x, size.y)\n        if (!this._layerLowest) {\n            this._layerLowest = new cc.Node(\"_layerLowest\")\n            this._layerMedium = new cc.Node(\"_layerMedium\")\n            this._layerHighest = new cc.Node(\"_layerHighest\")\n            this.content.addChild(this._layerLowest)\n            this.content.addChild(this._layerMedium)\n            this.content.addChild(this._layerHighest)\n        }\n        this._updateContentPosition({ x: 0, y: 0 })\n    }\n    private _registerTouchEvent() {\n        this.view.on(cc.Node.EventType.TOUCH_START, this._onTouchStart, this, true)\n        this.view.on(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this, true)\n        this.view.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this, true)\n        this.view.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this, true)\n    }\n    private _bubbleToParent(event: cc.Event.EventTouch | cc.Event.EventMouse) {\n        if (!this._parentAdapter) return\n        this._parentAdapter.scrollManager.view.dispatchEvent(event)\n    }\n    private _emitCancelEvent(event: cc.Event.EventTouch) {\n        if (this._isCanceledEvent) return\n        const deltaMove = event.getLocation()\n        deltaMove.subSelf(event.getStartLocation())\n        if (this.cancelInnerEvents && deltaMove.mag() > 7) {\n            if (event.target !== this.view) {\n                this._simulateEvent(event, cc.Node.EventType.MOUSE_LEAVE)\n                this._simulateEvent(event, cc.Node.EventType.TOUCH_CANCEL)\n                this._isCanceledEvent = true\n            }\n        }\n    }\n    private _simulateEvent(event: cc.Event.EventTouch, type: string, isSimulate: boolean = true) {\n        if (!event) return\n        const _event: any = new cc.Event.EventTouch(event.getTouches(), event.bubbles)\n        var target = event.target as Node\n        _event.type = type\n        _event.touch = event.touch\n        _event.simulate = isSimulate\n        target.dispatchEvent(_event)\n    }\n    private _onUpdateViews() {\n        this._velocity = 0\n        this._updatePercentage()\n    }\n    private _onChangedVirtualSize() {\n        this._updatePercentage()\n        if (this._scrollHandlePosition != null && this._scrollHandlePosition.change != null) {\n            this._scrollHandlePosition.change()\n        }\n    }\n    private _onChangedOverflowHeader(overflowHeader: number) {\n        this.__drawDebug()\n    }\n    private _onResetAllState() {\n        this._velocity = 0\n        this._scrolling = false\n        this._dragging = false\n        this._isMyEventAndMoved = false\n        this._scrollDirection = ScrollDirection.None\n        this._percentage = 0\n        this._isEmitAboutToStop = false\n        this._boundaryOffset = 0\n        this._isCanceledEvent = false\n        this._parentTouch = false\n        this._stopCheckNested = false\n        this._scrollDirection = ScrollDirection.None\n        this._touchEvent = null\n        this.stopScroll()\n        this._initView()\n        this._initContent()\n    }\n    /** 当adapter尺寸改变时 更新 view 尺寸 这里手动更新的原因是Widget不会自动更新 ...  */\n    private _onAdapterSizeChanged() {\n        this._viewWidget.updateAlignment()\n    }\n    /** 当view尺寸改变时 */\n    private _onViewSizeChanged() {\n        this.emit(Event.ON_VIEW_SIZE_CHANGED)\n    }\n    /** 是否由我来处理触摸事件 */\n    private _isMyEvent(event: cc.Event.EventTouch, useCaptures: cc.Node[]) {\n        if (event.eventPhase == cc.Event.EventTouch.AT_TARGET || !useCaptures || useCaptures[0] == this.view && !event.target[ADAPTER]) {\n            return true\n        }\n        return false\n    }\n    private _onTouchStart(event: cc.Event.EventTouch, useCaptures: cc.Node[]) {\n        this._velocity = 0\n        this._dragging = true\n        this._isMyEventAndMoved = false\n        this._isCanceledEvent = false\n        this._parentTouch = false\n        this._stopCheckNested = false\n        this._isEmitAboutToStop = false\n        this._scrollDirection = ScrollDirection.None\n        this._contentStartPosition.set(this.content.position)\n        this._touchEvent = event\n        this.stopScroll()\n        this._calcNestedDirection()\n        this.emit(Event.ON_SCROLL_START)\n    }\n    private _onTouchEnd(event: cc.Event.EventTouch, useCaptures: cc.Node[]) {\n        this._dragging = false\n        this._touchEvent = null\n        this.emit(Event.ON_SCROLL_END, event)\n    }\n    private _onTouchCancel(event: cc.Event.EventTouch, useCaptures: cc.Node[]) {\n        if ((event as any).simulate) {\n            return\n        }\n        this._dragging = false\n        this._touchEvent = null\n        this.emit(Event.ON_SCROLL_CANCEL, event)\n    }\n    private _onTouchMove(event: cc.Event.EventTouch, useCaptures: cc.Node[]) {\n        if (!this._isMyEvent(event, useCaptures)) {\n            return\n        }\n        // 取消Button事件\n        this._emitCancelEvent(event)\n        // 如果已经确定不能移动，直接抛给上层\n        if (this._parentTouch || !this.canTouch) {\n            return this._bubbleToParent(event)\n        }\n        // if (!this._touchEvent && this.adapter.centerManager.enabled) return\n        if (!this._touchEvent) return\n        var mainAxis = this.adapter.mainAxis\n        var location = event.getLocation()\n        var startLocation = event.getStartLocation()\n        var pointerDelta = location.sub(startLocation)\n        if (pointerDelta.equals(cc.v2())) {\n            return\n        }\n        var position = { x: 0, y: 0 }\n        position[mainAxis] = this._contentStartPosition[mainAxis] + pointerDelta[mainAxis]\n        var delta = position[mainAxis] - this.contentPosition\n        var offset = this.calcOffset(delta)\n        var axis = this.adapter.isHorizontal ? -1 : 1\n        position[mainAxis] += axis * offset\n        if (this.movementType == MovementType.Elastic && offset != 0) {\n            position[mainAxis] -= axis * this._rubberDelta(offset, this.adapter.mainAxisSize)\n        }\n        // 这里判断是否移动了 如果移动了 则停止向上传播\n        this._checkNested(event, position, this._parentAdapter)\n        if (this._parentTouch) {\n            this._bubbleToParent(event)\n        } else {\n            this._isMyEventAndMoved = true\n            this._updateContentPosition(position)\n        }\n    }\n    private _calcNestedDirection() {\n        if (!this._parentAdapter) return\n        if (this.percentage <= this.nestedMinThreshold && !this.adapter.viewManager.loopHeader) {\n            this._nestedDirection = this.adapter.multiplier == 1 ? NestedDirection.Footer : NestedDirection.Header\n        } else if (this.percentage >= this.nestedMaxThreshold && !this.adapter.viewManager.loopFooter) {\n            this._nestedDirection = this.adapter.multiplier == 1 ? NestedDirection.Header : NestedDirection.Footer\n        } else {\n            this._nestedDirection = NestedDirection.Both\n        }\n    }\n    /** 当嵌套时 根据当前滑动方向 决定谁可以滑动，（自己 或 父级Adapter） */\n    private _checkNested(event: cc.Event.EventTouch | cc.Event.EventMouse, position: ILike, adapter: ScrollAdapter) {\n        if (!adapter || this._stopCheckNested) return\n        // 同方向\n        if (this.orientation == adapter.scrollManager.orientation) {\n            var offset = position[this.adapter.mainAxis] - this._contentStartPosition[this.adapter.mainAxis]\n            if (Math.abs(offset) <= 0.1) {\n                return\n            }\n            if (this._nestedDirection == NestedDirection.Footer) {\n                if (offset < 0) {\n                    this._parentTouch = true\n                }\n            } else if (this._nestedDirection == NestedDirection.Header) {\n                if (offset > 0) {\n                    this._parentTouch = true\n                }\n            }\n        } else {\n            // 反方向\n            var xOffset = 0, yOffset = 0\n            if (event instanceof cc.Event.EventTouch) {\n                var start = event.getStartLocation()\n                var curre = event.getLocation()\n                xOffset = Math.abs(start.x - curre.x)\n                yOffset = Math.abs(start.y - curre.y)\n            } else {\n                xOffset = Math.abs(event.getScrollX())\n                yOffset = Math.abs(event.getScrollY())\n            }\n            if (xOffset == yOffset) return\n            if (xOffset > yOffset) {\n                if (this.adapter.isVertical) {\n                    this._parentTouch = true\n                }\n            } else if (yOffset > xOffset) {\n                if (this.adapter.isHorizontal) {\n                    this._parentTouch = true\n                }\n            }\n        }\n        if (!this._parentTouch && adapter.scrollManager.parentAdapter) {\n            return this._checkNested(event, position, adapter.scrollManager.parentAdapter)\n        }\n        this._stopCheckNested = true\n    }\n    /** 更新content坐标 */\n    private _updateContentPosition(position: ILike, updatePercentage: boolean = true) {\n        this._updateScrollDirection(position)\n        this.content.setPosition(position.x, position.y)\n        this.emit(Event.ON_SCROLL, this._scrollDirection)\n        // 这里顺序很重要 必须先发送滚动事件，然后再更新进度，否则可能内容还没有填充时 计算 this._calcOffset 会有偏移\n        if (updatePercentage) {\n            this._updatePercentage()\n        } else {\n            this.__drawDebug()\n        }\n    }\n    /** 缓存当前content坐标 */\n    private _updatePrevContentPosition() {\n        this._prevContentPosition.set(this.content.position)\n    }\n    /**\n     * 更新进度 难啃的骨头马勒戈壁\n     */\n    private _calcPercentage(contentPosition: number, offset: number) {\n        var hiddenSize = this.internal_getHiddenSize()\n        var loopHeader = this.adapter.viewManager.loopHeader\n        var loopFooter = this.adapter.viewManager.loopFooter\n        var multiplier = this.adapter.multiplier\n        var overflowHeader = this.adapter.viewManager.overflowHeader\n        var position = contentPosition * multiplier\n        if (this.adapter.isHorizontal) {\n            position -= offset * multiplier\n        } else {\n            position += offset * multiplier\n        }\n        if (loopFooter) {\n            hiddenSize += this.adapter.viewManager.spacing\n            position += (overflowHeader + hiddenSize * multiplier) * multiplier\n            if (this.adapter.centerManager.enabled) {\n                position += this.adapter.centerManager.getContainerOffset()\n            } else {\n                position += this.adapter.paddingHeader\n            }\n            position += 1\n            position = position % hiddenSize\n        } else if (loopHeader) {\n            position += this.adapter.mainAxisSize - 1\n            if (this.adapter.centerManager.enabled) {\n                position -= this.adapter.centerManager.getContainerOffset()\n            } else {\n                position -= this.adapter.paddingFooter\n            }\n            position += (overflowHeader + hiddenSize * multiplier) * multiplier\n            var ok = contentPosition * -multiplier > overflowHeader * multiplier\n            if (ok) {\n                position += this.adapter.viewManager.spacing\n            }\n            position = position % hiddenSize\n        } else {\n            position += overflowHeader * multiplier\n            if (this.adapter.centerManager.enabled) {\n                position += this.adapter.centerManager.getContainerOffset()\n            } else {\n                position += this.adapter.paddingHeader\n            }\n            if (position > hiddenSize) {\n                position = hiddenSize\n            }\n        }\n        return position / hiddenSize\n    }\n    private _updatePercentage() {\n        var offset = this.calcOffset()\n        if (this.adapter.viewManager.virtualSize <= this.adapter.mainAxisSize) {\n            this._percentage = 0\n        } else {\n            this._percentage = this._calcPercentage(this.contentPosition, offset)\n        }\n        this.emit(Event.ON_UPDATE_PERCENTAGE, this._percentage, offset)\n        this.__drawDebug()\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_disableTouchTarget(node: cc.Node) {\n        // if (this.adapter.pageViewManager.enabled) return\n        if (this._touchEvent && this._touchEvent.target.uuid == node.uuid) {\n            var event = this._touchEvent\n            this._simulateEvent(event, cc.Node.EventType.TOUCH_CANCEL, false)\n            this._simulateEvent(event, cc.Node.EventType.MOUSE_LEAVE, false)\n            this._touchEvent = null\n        }\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_getHiddenSize() {\n        var loopHeader = this.adapter.viewManager.loopHeader\n        var loopFooter = this.adapter.viewManager.loopFooter\n        var hiddenSize = this.adapter.viewManager.virtualSize\n        if (!loopHeader && !loopFooter && !this.adapter.centerManager.enabled) {\n            hiddenSize -= this.adapter.mainAxisSize\n            hiddenSize += this.adapter.mainAxisPadding\n        }\n        return hiddenSize\n    }\n\n    private _getContentMinBoundaryOffset(delta: number, position: number) {\n        if (!this.adapter.viewManager.header || !this.adapter.centerManager.enabled && this.adapter.viewManager.virtualSize <= this.adapter.mainAxisSize) {\n            if (this.adapter.isHorizontal) {\n                return position + this._defaultMax + delta\n            } else {\n                return position + this._defaultMin + delta\n            }\n        }\n        return this.adapter.viewManager.min + delta\n    }\n    private _getContentMaxBoundaryOffset(delta: number, position: number) {\n        if (!this.adapter.viewManager.header || !this.adapter.centerManager.enabled && this.adapter.viewManager.virtualSize <= this.adapter.mainAxisSize) {\n            if (this.adapter.isHorizontal) {\n                return position + this._defaultMin + delta\n            } else {\n                return position + this._defaultMax + delta\n            }\n        }\n        return this.adapter.viewManager.max + delta\n    }\n    private _getMaxBoundaryOffset(max: number) {\n        var viewMax = this._viewMax\n        if (this.adapter.isHorizontal) {\n            return this.adapter.isArrangeAxisStart ? max : viewMax + max\n        } else {\n            return this.adapter.isArrangeAxisStart ? -max : viewMax - max\n        }\n    }\n    private _getMinBoundaryOffset(min: number) {\n        var viewMin = this._viewMin\n        if (this.adapter.isHorizontal) {\n            return this.adapter.isArrangeAxisStart ? viewMin + min : min\n        } else {\n            return this.adapter.isArrangeAxisStart ? viewMin - min : -min\n        }\n    }\n    private _rubberDelta(overStretching: number, viewSize: number): number {\n        return (1 - (1 / ((Math.abs(overStretching) * 0.55 / viewSize) + 1))) * viewSize * Math.sign(overStretching)\n    }\n    private _calcElastic(deltaTime: number, offset: number, out: cc.Vec3) {\n        var mainAxis = this.adapter.mainAxis\n        var smoothTime = this.elasticity\n        if (this._scrolling) {\n            smoothTime *= 3\n        }\n        var axis = this.adapter.isHorizontal ? -1 : 1\n        var { velocity, position } = Helper.smoothDamp(\n            this.contentPosition,\n            this.contentPosition + axis * offset,\n            this._velocity,\n            smoothTime,\n            Helper.Infinity,\n            deltaTime\n        )\n        if (Math.abs(velocity) < 1) {\n            velocity = 0\n        }\n        this._velocity = velocity\n        out[mainAxis] = position\n    }\n    private _calcInertia(deltaTime: number, out: cc.Vec3) {\n        this._velocity *= Math.pow(this.decelerationRate, deltaTime)\n        if (Math.abs(this._velocity) < 1) {\n            this._velocity = 0\n        }\n        out[this.adapter.mainAxis] += this._velocity * deltaTime\n    }\n    private _calcClamped(out: cc.Vec3) {\n        var mainAxis = this.adapter.mainAxis\n        var boundary = out[mainAxis] - this.contentPosition\n        var offset = this.calcOffset(boundary)\n        if (this.adapter.isHorizontal) {\n            out[mainAxis] -= offset\n        } else {\n            out[mainAxis] += offset\n        }\n    }\n    private _updateScrollDirection(position: ILike) {\n        var delta = position[this.adapter.mainAxis] - this.contentPosition\n        if (delta == 0) {\n            this._scrollDirection = ScrollDirection.None\n            return\n        }\n        if (this.adapter.isHorizontal) {\n            this._scrollDirection = delta > 0 ? ScrollDirection.Right : ScrollDirection.Left\n        } else {\n            this._scrollDirection = delta > 0 ? ScrollDirection.Up : ScrollDirection.Down\n        }\n        this._laseScrollDirection = this._scrollDirection\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_setContentPosition(mainPosition: number, updatePercentage: boolean = true) {\n        var position = { x: 0, y: 0 }\n        position[this.adapter.mainAxis] = mainPosition\n        this._updateContentPosition(position, updatePercentage)\n    }\n    test = false\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_lateUpdate(deltaTime: number) {\n        if (this.test) return\n        this._autoScrolling(deltaTime)\n        this._scrollHandler(deltaTime, this._scrollHandlePosition, this._scrollPositionHandler.bind(this))\n        this._scrollHandler(deltaTime, this._scrollHandlePercentage, this._scrollPercentageHandler.bind(this))\n    }\n    private _autoScrolling(deltaTime: number) {\n        var offset = this.calcOffset()\n        this._boundaryOffset = offset\n        if (!this._dragging && (offset != 0 || this._velocity != 0)) {\n            this.content.getPosition(_tempPosition)\n            if (this.movementType == MovementType.Elastic && offset != 0) {\n                this._calcElastic(deltaTime, offset, _tempPosition)\n            } else if (this.inertia) {\n                this._calcInertia(deltaTime, _tempPosition)\n            } else {\n                this._velocity = 0\n            }\n            if (this.movementType == MovementType.Clamped) {\n                this._calcClamped(_tempPosition)\n            }\n            this._updateContentPosition(_tempPosition)\n        }\n        if (this._dragging && this.inertia) {\n            var newVelocity = (this.contentPosition - this._prevContentPosition[this.adapter.mainAxis]) / deltaTime\n            this._velocity = Helper.lerp(this._velocity, newVelocity, deltaTime * 10)\n        }\n        if (!this._prevContentPosition.equals(this.content.position)) {\n            this._updatePrevContentPosition()\n        }\n        if (!this._isEmitAboutToStop && !this._dragging && Math.abs(this._velocity) <= this.aboutToStopVelocity) {\n            if (!this._scrollHandlePercentage && !this._scrollHandlePosition) {\n                this.emit(Event.ON_ABOUT_TO_STOP, this._velocity)\n                this._isEmitAboutToStop = true\n            }\n        }\n        this._scrolling = false\n    }\n    private _scrollHandler(deltaTime: number, info: IScrollHandle, handler: Function) {\n        if (info == null) return\n        info.deltaTime += deltaTime\n        var time = info.deltaTime / (info.duration > cc.macro.FLT_EPSILON ? info.duration : cc.macro.FLT_EPSILON)\n        time = Helper.clamp01(time)\n        var easingTime = cc.easing.quintOut(time)\n        info.current = Helper.progress(info.from, info.to, info.current, easingTime)\n        handler(info, time)\n    }\n    private _scrollPercentageHandler(info: IScrollHandle, time: number) {\n        var old = this.percentage\n        this.setPercentage(info.current)\n        if (time == 1 || old == this.percentage) {\n            var stop = true\n            if (this._scrollHandlePercentage.stop) {\n                stop = this._scrollHandlePercentage.stop()\n            }\n            if (stop) {\n                this._scrollHandlePercentage = null\n            }\n        }\n    }\n    private _scrollPositionHandler(info: IScrollHandle, time: number) {\n        var position = { x: 0, y: 0 }\n        position[this.adapter.mainAxis] = info.current\n        this._setAutoScroll(position)\n        if (time == 1 || Math.abs(this.contentPosition - info.to) <= 0.0001) {\n            if (this._scrollHandlePosition.stop) {\n                this._scrollHandlePosition.stop()\n            }\n            this._scrollHandlePosition = null\n        }\n    }\n    private _setAutoScroll(position: ILike) {\n        const handler = (target: ILike) => {\n            this._updateContentPosition(target)\n            this._updatePrevContentPosition()\n            this._velocity = 0\n        }\n        handler(position)\n        var offset = this.calcOffset()\n        if (offset != 0) {\n            var direction = this.adapter.isHorizontal ? -1 : 1\n            position[this.adapter.mainAxis] += offset * direction\n            handler(position)\n            return false\n        }\n        return true\n    }\n    private _scrollToPosition(duration: number, getPosition: () => number, onStop: Function): boolean {\n        if (!this.canAutoScroll) {\n            return false\n        }\n        var position = getPosition()\n        if (position == null || Math.abs(this.contentPosition - position) < cc.macro.FLT_EPSILON) {\n            return false\n        }\n        this._scrollHandlePercentage = null\n        this._scrollHandlePosition = {\n            current: 0,\n            from: this.contentPosition,\n            to: position,\n            deltaTime: 0,\n            duration: Math.max(0, duration),\n            change: () => {\n                position = getPosition()\n                this._scrollHandlePosition.to = position\n            },\n            stop: () => {\n                onStop()\n            }\n        }\n        return true\n    }\n    // public \n    public getLayerNode(layer: Layer): cc.Node {\n        switch (layer) {\n            case Layer.Medium:\n                return this._layerMedium\n            case Layer.Highest:\n                return this._layerHighest\n            default:\n                return this._layerLowest\n        }\n    }\n    /**\n     * 滚动到数据索引位置   \n     * @param duration 滚动时长\n     * @param index 数据索引\n     * @param alwaysScroll 滚动方向，默认 AlwaysScroll.Auto\n     */\n    public scrollToModelIndex(duration: number, index: number, alwaysScroll?: AlwaysScroll) {\n        var groupIndex = this.adapter.viewManager.getGroupIndexByModelIndex(index)\n        if (-1 == groupIndex) return\n        var priorityCheckExists = false\n        var ok = this._scrollToPosition(duration, () => {\n            var position = this.adapter.centerManager.getPositionByGroupIndex(groupIndex, alwaysScroll, priorityCheckExists)\n            priorityCheckExists = true\n            return position\n        }, () => {\n            this.emit(Event.ON_SCROLL_TO_MODELINDEX_AFTER, index)\n        })\n        if (ok) {\n            this.emit(Event.ON_SCROLL_TO_MODELINDEX_BEFOR, index)\n        }\n    }\n    /**\n     * 滚动到指定单行索引位置\n     * @param duration 滚动时长\n     * @param index 单行索引\n     * @param alwaysScroll 滚动方向，默认 AlwaysScroll.Auto\n     */\n    public scrollToGroupIndex(duration: number, index: number, alwaysScroll?: AlwaysScroll) {\n        var priorityCheckExists = false\n        var ok = this._scrollToPosition(duration, () => {\n            var position = this.adapter.centerManager.getPositionByGroupIndex(index, alwaysScroll, priorityCheckExists)\n            priorityCheckExists = true\n            return position\n        }, () => {\n            this.emit(Event.ON_SCROLL_TO_GROUPINDEX_AFTER, index)\n        })\n        if (ok) {\n            this.emit(Event.ON_SCROLL_TO_GROUPINDEX_BEFOR, index)\n        }\n    }\n    /**\n     * 滚动到数据头部\n     * @param duration 滚动时间\n     */\n    public scrollToHeader(duration: number) {\n        this.scrollToGroupIndex(duration, 0)\n    }\n    /**\n     * 滚动到数据尾部\n     * @param duration 滚动时间 \n     */\n    public scrollToFooter(duration: number) {\n        this.scrollToGroupIndex(duration, this.adapter.viewManager.groupLength - 1)\n    }\n    /**\n     * 滚动到指定百分比位置\n     * 注意！如果你的item在滚动过程中会实时修改主轴尺寸，则不建议使用百分比来定位，请使用索引定位滚动 scrollToGroupIndex\n     * 这是因为在滚动时如果主轴尺寸变化会改变运行时百分比，导致某些情况下可能永远也无法达到你指定的百分比位置\n     * 如果你的item不会在滚动过程中改变主轴尺寸，那么请随意使用，不会有任何问题\n     * @param duration 滚动时长\n     * @param percentage 百分比 0-1\n     */\n    public scrollToPercentage(duration: number, percentage: number) {\n        if (!this.canAutoScroll) {\n            return false\n        }\n        if (Math.abs(this._percentage - percentage) < 0.001) {\n            return\n        }\n        percentage = Helper.clamp01(percentage)\n        duration = Math.max(0, duration)\n        this._scrollHandlePercentage = null\n        this._scrollHandlePercentage = {\n            deltaTime: 0,\n            duration: duration,\n            current: 0,\n            from: this._percentage,\n            to: percentage,\n        }\n    }\n    public stopVelocity() {\n        this._velocity = 0\n    }\n    /** 停止所有自动滚动 */\n    public stopScroll() {\n        this._scrollHandlePosition = null\n        this._scrollHandlePercentage = null\n        this.stopVelocity()\n    }\n    public setPercentage(percentage: number) {\n        var hiddenSize = this.internal_getHiddenSize()\n        var position = { x: 0, y: 0 }\n        var total = 0\n        var old = null\n        // TODO 最大循环100次 防止死循环\n        while (/** true **/ total < 100) {\n            total++\n            var cross = this._percentage - percentage\n            if (old != null && this._percentage === old) {\n                break\n            }\n            if (Math.abs(cross) < cc.macro.FLT_EPSILON) {\n                break\n            }\n            old = this._percentage\n            var target = this.contentPosition - cross * this.adapter.multiplier * hiddenSize\n            position[this.adapter.mainAxis] = target\n            var ok = this._setAutoScroll(position)\n            if (!ok) {\n                break\n            }\n        }\n        if (total == 100) {\n            console.warn(\"循环次数已达最大值，尽量不要在滚动过程中频繁修改尺寸\")\n        }\n    }\n    /** 计算overflow偏移量 */\n    public calcOffset(delta: number = 0, position: number = this.contentPosition) {\n        var offset = 0\n        if (this.movementType == MovementType.Unrestricted) {\n            return offset\n        }\n        var max = this._getContentMaxBoundaryOffset(delta, position)\n        var min = this._getContentMinBoundaryOffset(delta, position)\n        var maxOffset = this._getMaxBoundaryOffset(max)\n        var minOffset = this._getMinBoundaryOffset(min)\n        if (!this.adapter.centerManager.enabled && this.adapter.viewManager.virtualSize > this.adapter.mainAxisSize) {\n            if (this.adapter.isVertical) {\n                maxOffset -= this.adapter.viewManager.top\n                minOffset += this.adapter.viewManager.bottom\n            } else {\n                maxOffset -= this.adapter.viewManager.left\n                minOffset += this.adapter.viewManager.right\n            }\n        }\n        var minExpand = 0, maxExpand = 0\n        if (this.adapter.centerManager.enabled && this.adapter.viewManager.groupLength > 0) {\n            maxExpand = this.adapter.centerManager.max\n            minExpand = this.adapter.centerManager.min\n        } else {\n            var magneticOffset = this.adapter.viewManager.getMagneticOffset()\n            maxOffset -= magneticOffset\n            minOffset -= magneticOffset\n        }\n        if (this.adapter.releaseManager.enabled) {\n            maxExpand = Math.max(maxExpand, this.adapter.releaseManager.max)\n            minExpand = Math.max(minExpand, this.adapter.releaseManager.min)\n        }\n        maxOffset -= maxExpand\n        minOffset += minExpand\n        if (minOffset < -0.001) {\n            offset = minOffset\n        } else if (maxOffset > 0.001) {\n            offset = maxOffset\n        }\n        return offset\n    }\n}"]}