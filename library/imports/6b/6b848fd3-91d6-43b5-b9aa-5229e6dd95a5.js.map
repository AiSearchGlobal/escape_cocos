{"version":3,"sources":["assets/script/framework/component/VMCompsEdit.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Log } from \"../../utils/Log\";\n\n\nconst { ccclass, property, executeInEditMode, menu,help } = cc._decorator;\n\nenum ACTION_MODE {\n    SEARCH_COMPONENT,\n    ENABLE_COMPONENT,\n    REPLACE_WATCH_PATH,\n    DELETE_COMPONENT\n}\n\n\n/**\n * 用于搜索的MV 组件列表，挂载在父节点后，\n * 会遍历搜索下面的所有MV组件, 并且显示其观察值的路径\n */\n@ccclass\n@executeInEditMode\n@menu('ModelViewer/Edit-Comps (快速组件操作)')\n@help('https://github.com/wsssheep/cocos_creator_mvvm_tools/blob/master/docs/VMCompsEdit.md')\nexport default class MVCompsEdit extends cc.Component {\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    @property({\n        type:[cc.String]\n    })\n    findList:string[] = [\"VMBase\",\"VMParent\"];\n\n    \n    @property({\n        type:cc.Enum(ACTION_MODE)\n    })\n    actionType:ACTION_MODE = ACTION_MODE.SEARCH_COMPONENT;\n \n    @property({\n        tooltip:'勾选后,会自动查找 find list 中填写的组件',\n        visible:function(){return this.actionType === ACTION_MODE.SEARCH_COMPONENT}\n    })\n    public get findTrigger(){\n        return false;\n    }\n    public set findTrigger(v:boolean) {\n        this.setComponents(0);\n    }\n\n    @property({\n        tooltip:'勾选后,会批量激活 find list 中填写的组件',\n        visible:function(){return this.actionType === ACTION_MODE.ENABLE_COMPONENT}\n    })\n    public get enableTrigger(){\n        return false;\n    }\n    public set enableTrigger(v:boolean) {\n        this.setComponents(1);\n    }\n\n    @property({\n        tooltip:'勾选后,会批量关闭 find list 中填写的组件',\n        visible:function(){return this.actionType === ACTION_MODE.ENABLE_COMPONENT}\n    })\n    public get disableTrigger(){\n        return false;\n    }\n    public set disableTrigger(v:boolean) {\n        this.setComponents(2);\n    }\n\n    @property({\n        tooltip:'允许删除节点的组件,确定需要移除请勾选,防止误操作',\n        visible:function(){return this.actionType === ACTION_MODE.DELETE_COMPONENT}\n    })\n    allowDelete:boolean = false;\n\n    @property({\n        tooltip:'勾选后,会批量删除 find list 中填写的组件',\n        displayName:'[ X DELETE X ]',\n        visible:function(){return this.allowDelete && this.actionType === ACTION_MODE.DELETE_COMPONENT}\n    })\n    public get deleteTrigger(){\n        return false;\n    }\n    public set deleteTrigger(v:boolean) {\n        this.setComponents(3);\n    }\n\n    @property({\n        tooltip:'勾选后,会批量替换掉指定的路径',\n        visible:function(){return  this.actionType === ACTION_MODE.REPLACE_WATCH_PATH}\n    })\n    public get replaceTrigger(){\n        return false;\n    }\n    public set replaceTrigger(v:boolean) {\n        this.setComponents(4);\n    }\n\n    @property({\n        tooltip:'匹配的路径,匹配规则: 搜索开头为 game的路径',\n        visible:function(){return  this.actionType === ACTION_MODE.REPLACE_WATCH_PATH}\n    })\n    targetPath:string = 'game';\n\n    @property({\n        tooltip:'替换的路径,将匹配到的路径替换',\n        visible:function(){return  this.actionType === ACTION_MODE.REPLACE_WATCH_PATH}\n    })\n    replacePath:string = '*';\n\n\n    @property({\n        tooltip:'是否搜集绑定VM组件的节点?',\n        visible:function(){return this.actionType === ACTION_MODE.SEARCH_COMPONENT}\n    })\n    canCollectNodes:boolean = false;\n\n    @property({\n        type:[cc.Node],\n        readonly:true,\n        tooltip:'收集到绑定了VM组件相关的节点，可以自己跳转过去',\n        visible:function(){return this.canCollectNodes && this.actionType === ACTION_MODE.SEARCH_COMPONENT}\n    })\n    collectNodes:cc.Node[] = [];\n\n    onLoad(){\n        //不要把脚本挂载运行时的提示\n        if(!CC_EDITOR){\n          let path = this.getNodePath(this.node);\n          Log.error('you forget delete MVEditFinder,[path]',path);\n        }\n    }\n\n\n    setComponents(state:number){\n        let array = this.findList;\n        let title = '搜索到当前节点下面的组件';\n        switch (state) {\n            case 0: title = '搜索到当前节点下面的组件';break;\n            case 1: title = '激活以下节点的组件';break;\n            case 2: title = '关闭以下节点的组件';break;\n            case 3: title = '删除以下节点的组件';break;\n            case 4: title = '替换以下节点的路径';break;\n        \n            default:\n                break;\n        }\n        cc.log(title)\n        cc.log('______________________')\n\n        array.forEach(name => {\n            this.searchComponent(name,state)\n        })\n\n        cc.log('______________________')\n    }\n\n    /**\n     * \n     * @param className \n     * @param state 0-查找节点组件 1-激活节点组件 2-关闭节点组件 3-移除节点组件\n     */\n    searchComponent(className: string, state:number = 0) {\n        /**收集节点清空 */\n        this.collectNodes = []; \n\n        let comps = this.node.getComponentsInChildren(className);\n        if (comps == null || comps.length < 1) return;\n        cc.log('[' + className + ']:');\n        comps.forEach(v => {\n            let ext ='';\n\n            if(state<=3){\n                //区分模板模式路径\n                if(v.templateMode===true){\n                    ext = v.watchPathArr?':[Path:' + v.watchPathArr.join('|') + ']' :'' \n                }else{\n                    ext = v.watchPath?':[Path:' + v.watchPath + ']' :'' \n                }\n            }\n\n            cc.log(this.getNodePath(v.node) + ext);\n            switch (state) {\n                case 0://寻找组件\n                    if(this.canCollectNodes){\n                        if(this.collectNodes.indexOf(v.node) === -1){\n                            this.collectNodes.push(v.node);\n                        }\n                    }\n                    break;\n                case 1://激活组件\n                    v.enabled = true;\n                    break;\n                case 2://关闭组件\n                    v.enabled = false;\n                    break;\n                case 3://删除组件\n                    v.node.removeComponent(v);\n                    break;\n                case 4://替换指定路径\n\n                    let targetPath = this.targetPath;\n                    let replacePath = this.replacePath;\n                    if(v.templateMode===true){\n                       for (let i = 0; i < v.watchPathArr.length; i++) {\n                           const path = v.watchPathArr[i];\n                           v.watchPathArr[i] = this.replaceNodePath(path,targetPath,replacePath);\n                       }\n                    }else{\n                        v.watchPath = this.replaceNodePath(v.watchPath,targetPath,replacePath);\n                    }\n\n            \n                default:\n                    break;\n            }\n        });\n    }\n\n    replaceNodePath(path:string,search:string,replace:string){\n        let pathArr = path.split('.');\n        let searchArr = search.split('.');\n        let replaceArr = replace.split('.')\n\n        let match = true;\n        for (let i = 0; i < searchArr.length; i++) {\n            //未匹配上\n            if(pathArr[i] !== searchArr[i]){\n                match = false;\n                break;\n            }\n            \n        }\n\n        //匹配成功准备替换路径\n        if(match === true){\n            for (let i = 0; i < replaceArr.length; i++) {\n                pathArr[i] =  replaceArr[i];\n            }\n            cc.log(' 路径更新:',path,'>>>',pathArr.join('.'))\n        }\n        \n\n        return pathArr.join('.');\n\n\n    }\n\n    getNodePath(node: cc.Node) {\n        let parent = node;\n        let array = [];\n        while (parent) {\n            let p = parent.getParent();\n            if (p) {\n                array.push(parent.name);\n                parent = p;\n            } else {\n                break;\n            }\n\n        }\n\n        return array.reverse().join('/');\n    }\n\n\n\n    // update (dt) {}\n}\n"]}