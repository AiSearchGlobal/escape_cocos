{"version":3,"sources":["assets/script/framework/adapter/abstract/View.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ADAPTER_DEBUG_VIEW, DEBUG_DRAW_LIND_WIDTH, DEBUG_DRAW_LINE_COLOR } from '../define/debug';\nimport { Layer, WrapMode } from '../define/enum';\nimport { IElement, IModel, ILike } from '../define/interface';\nimport { Helper } from '../help/helper';\nimport { LayoutManager } from '../manager/LayoutManager';\nimport { ScrollManager } from '../manager/ScrollManager';\nimport { ViewManager } from '../manager/ViewManager';\nimport { Group } from './Group';\nimport { Holder } from './Holder';\nimport { ScrollAdapter } from './ScrollAdapter';\nconst { ccclass, property } = cc._decorator;\n// @ccclass\nexport abstract class View<T = any, A extends ScrollAdapter = ScrollAdapter<T>> {\n    protected abstract onVisible(): void\n    protected abstract onDisable(): void\n    private __debug_graphics: cc.Graphics\n    private _adapter: A\n    private _total: number = 0\n    private _innerSize: number = 0\n    private _group: Group<T, A> = null\n    private _holderList: Holder<T, A>[] = []\n    private _tempHolderList: { holder: Holder, model: IModel<T>, isNew: boolean }[] = []\n    private _isOverflowFixed: boolean\n    public get isOverflowFixed() { return this._isOverflowFixed }\n    public get adapter() { return this._adapter }\n    public get group() { return this._group }\n    public get holderList() { return this._holderList }\n    public get index() {\n        if (!this.group) return -1\n        return this.group.index\n    }\n    constructor(adapter: A) {\n        this._adapter = adapter\n        this.internal_reset()\n        this.__createDebug()\n    }\n    private __createDebug() {\n        if (ADAPTER_DEBUG_VIEW) {\n            var obj = new cc.Node(\"__DEBUG_VIEW_RECT__\")\n            obj.parent = this.adapter.scrollManager.content\n            // obj.layer = this.adapter.scrollManager.content.node.layer\n            this.__debug_graphics = obj.addComponent(cc.Graphics)\n            this.__debug_graphics.lineWidth = DEBUG_DRAW_LIND_WIDTH\n            this.__debug_graphics.strokeColor = DEBUG_DRAW_LINE_COLOR\n        }\n    }\n    private __drawDebug() {\n        if (!this.__debug_graphics || !this.group) return\n        this.__debug_graphics.clear()\n        // if (this.index != 0) return\n        var mainAxis = this.adapter.mainAxis\n        var crossAxis = this.adapter.crossAxis\n        var position = { x: 0, y: 0 }\n        var size = { x: this.group.size.x, y: this.group.size.y }\n        var anchor = { x: this.group.anchorPoint.x, y: this.group.anchorPoint.y }\n        position[mainAxis] = this.group.position[mainAxis] - size[mainAxis] * anchor[mainAxis]\n        position[mainAxis] += DEBUG_DRAW_LIND_WIDTH * 0.5\n        position[crossAxis] = this.group.position[crossAxis] - size[crossAxis] * (1 - anchor[crossAxis])\n        position[crossAxis] += DEBUG_DRAW_LIND_WIDTH * 0.5\n        size[mainAxis] -= DEBUG_DRAW_LIND_WIDTH\n        size[crossAxis] -= DEBUG_DRAW_LIND_WIDTH\n        this.__debug_graphics.roundRect(position.x, position.y, size.x, size.y, 2)\n        this.__debug_graphics.stroke()\n    }\n\n    public getFixedHolders(): Holder<T, A>[] {\n        if (!this.group.isFixed) return []\n        var list: Holder<T, A>[] = []\n        var length = this.holderList.length\n        for (let i = 0; i < length; i++) {\n            const holder: Holder<T, A> = this.holderList[i];\n            if (holder.model.element.fixed) {\n                list.push(holder)\n            }\n        }\n        return list\n    }\n\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_isWrap(model: IModel<T>, group: Group<T>): boolean {\n        var wrap = false\n        var prev = group && group.models[group.models.length - 1]\n        if (prev) { //当前view为空 所以无论什么设置都不换行\n            switch (model.element.wrapBeforeMode) {\n                case WrapMode.Wrap:\n                    wrap = true\n                    break\n                case WrapMode.Nowrap:\n                    // 判断前一个是否允许在其后排列\n                    wrap = prev.element.wrapAfterMode == WrapMode.Wrap\n                    break\n                case WrapMode.Auto:\n                    wrap = prev.element.wrapAfterMode == WrapMode.Wrap\n                    if (!wrap) { //前一个允许排列其后，计算是否已填满\n                        wrap = this._calculateInnerSize(model, group)\n                    }\n                    break\n            }\n        }\n        return wrap\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_reset() {\n        this._group = null\n        this._innerSize = 0\n        this._total = 0\n        this._holderList.length = 0\n        this._isOverflowFixed = true\n        this._tempHolderList.length = 0\n        if (this.__debug_graphics) {\n            this.__debug_graphics.clear()\n        }\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_push(model: IModel<T>) {\n        this._total++\n        var mainAxis = this.adapter.mainAxis\n        var crossAxis = this.adapter.crossAxis\n        if (!model.element.ignoreLayout || model.element.ignoreLayout && model.element.placeholder) {\n            if (this._innerSize != 0) {\n                this._innerSize += this.adapter.layoutManager.spacing\n            }\n            this._innerSize += model.size[crossAxis]\n        }\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_recycleHolders(done: (holder: Holder) => void) {\n        for (let i = 0; i < this._holderList.length; i++) {\n            const holder = this._holderList[i];\n            holder.internal_disable()\n            done(holder)\n        }\n        this._holderList.length = 0\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_preVisible(group: Group<T, A>, findHolder?: (model: IModel<T>) => Holder<T, A>) {\n        this._group = group\n        this._createHolders(findHolder)\n        return this\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_visible() {\n        this.register()\n        for (let i = 0; i < this._tempHolderList.length; i++) {\n            const { holder, model, isNew } = this._tempHolderList[i];\n            holder.internal_visible(this, model, isNew)\n        }\n        this._tempHolderList.length = 0\n        this.adapter.layoutManager.layout(this.group)\n        this.onVisible()\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_disable() {\n        this.adapter.layoutManager.unLayout(this.index)\n        this.unregister()\n        this.onDisable()\n        this.internal_reset()\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_holderChanged(isMainAxisEqual: boolean) {\n        var layoutSelf = true\n        var mainAxis = this.adapter.mainAxis\n        var oldMainAxisSize = this.group.size[mainAxis]\n        if (!isMainAxisEqual) {\n            var size = 0\n            for (let i = 0; i < this.group.models.length; i++) {\n                const model = this.group.models[i];\n                var mainAxisSize = model.size[mainAxis]\n                if (this.adapter.isVertical && this.adapter.layoutManager.controlScaleHeight\n                    || this.adapter.isHorizontal && this.adapter.layoutManager.controlScaleWidth) {\n                    mainAxisSize *= model.scale[mainAxis]\n                }\n                size = Math.max(size, mainAxisSize)\n            }\n            if (!Helper.approximately(this.group.size[mainAxis], size)) {\n                this.group.oldSize[mainAxis] = this.group.size[mainAxis]\n                this.group.size[mainAxis] = size\n                layoutSelf = false\n            }\n        }\n        if (layoutSelf) {\n            // 交叉轴改变 不影响主轴 只布局自己\n            this.adapter.layoutManager.layout(this.group)\n        } else {\n            // 主轴改变 交给viewManager来重新计算所有受影响的view\n            this.adapter.viewManager.internal_viewChanged(this, oldMainAxisSize)\n        }\n    }\n    private register() {\n        this.adapter.viewManager.on(ViewManager.Event.ON_SCROLL, this._onScroll, this)\n        this.adapter.viewManager.on(ViewManager.Event.ON_LATEUPDATE, this._onLateUpdate, this)\n        this.adapter.layoutManager.on(LayoutManager.Event.ON_LAYOUT_COMPLATED, this._onLayoutComplated, this)\n        this.adapter.layoutManager.on(LayoutManager.Event.ON_CHANGED_LAYOUT_STATE, this._onChangedLayoutState, this)\n    }\n    private unregister() {\n        this.adapter.viewManager.off(ViewManager.Event.ON_SCROLL, this._onScroll, this)\n        this.adapter.viewManager.off(ViewManager.Event.ON_LATEUPDATE, this._onLateUpdate, this)\n        this.adapter.layoutManager.off(LayoutManager.Event.ON_LAYOUT_COMPLATED, this._onLayoutComplated, this)\n        this.adapter.layoutManager.off(LayoutManager.Event.ON_CHANGED_LAYOUT_STATE, this._onChangedLayoutState, this)\n    }\n    private _createHolders(findHolder?: (model: IModel<T>) => Holder<T, A>) {\n        var mainAxis = this.adapter.mainAxis\n        this._tempHolderList.length = 0\n        for (let i = 0; i < this.group.models.length; i++) {\n            const model = this.group.models[i];\n            var isNew = false\n            var holder = findHolder && findHolder(model)\n            if (!holder) {\n                holder = this.adapter.viewManager.internal_getHolder(model) as any\n                isNew = true\n            }\n            // 处理开启了延迟布局时导致的当前帧position=0的情况 预先设置一个默认值\n            model.position[mainAxis] = this.group.position[mainAxis]\n            this._holderList.push(holder)\n            this._tempHolderList.push({ holder, model, isNew })\n        }\n    }\n    private _calculateInnerSize(model: IModel<T>, group: Group<T>) {\n        if (this._total == 0) return false\n        var size = model.size[this.adapter.crossAxis]\n        return this._innerSize + size + this.adapter.layoutManager.spacing > group.size[this.adapter.crossAxis]\n    }\n    private _onLayoutComplated(complatedIndexs: number[]) {\n        if (complatedIndexs.indexOf(this.index) != -1) {\n            for (let i = 0; i < this.holderList.length; i++) {\n                const holder = this.holderList[i];\n                holder.internal_layout()\n            }\n            if (this.group.isFixed) {\n                this._calcFixedPosition()\n            }\n        }\n    }\n    private _calcFixedPosition() {\n        var length = this._holderList.length\n        var mainAxis = this.adapter.mainAxis\n        for (let i = 0; i < length; i++) {\n            const holder = this._holderList[i]\n            if (!holder.element.fixed) continue\n            var position = { x: holder.model.position.x, y: holder.model.position.y }\n            var relativeOffset = 0\n            var boundary = this._getModelBoundary(holder.model)\n            if (this._isNeedFixed(boundary)) {\n                position[mainAxis] -= boundary\n                var holderList = this.adapter.viewManager.getNextFixedHolders(this.index)\n                relativeOffset = this._getRelativeNextHolderOffset(holder, holderList)\n            }\n            position[mainAxis] += relativeOffset * this.adapter.multiplier\n            if (position[mainAxis] != holder.node.position[mainAxis]) {\n                holder.node.setPosition(position.x, position.y)\n            }\n        }\n    }\n    /** 当布局参数改变时 重新计算布局 */\n    private _onChangedLayoutState() {\n        this.adapter.layoutManager.layout(this.group)\n    }\n    private _onScroll() {\n        if (!this.group.isFixed || this._holderList.length == 0) return\n        this._calcFixedPosition()\n    }\n    private _onLateUpdate(deltaTime: number) {\n        if (ADAPTER_DEBUG_VIEW && this.group) {\n            this.__drawDebug()\n        }\n    }\n    private _isNeedFixed(boundary: number) {\n        return this.adapter.multiplier == 1 ? boundary >= 0 : boundary <= 0\n    }\n    private _getModelBoundary(model: IModel<T>) {\n        var fixedOffset = Helper.isNumber(model.element.fixedOffset) ? model.element.fixedOffset : 0\n        return this.adapter.multiplier == 1\n            ? this._getModelHeaderBoundary(model) + fixedOffset\n            : this._getModelFooterBoundary(model) - fixedOffset\n    }\n    private _getModelHeaderBoundary(model: IModel<T>) {\n        var mainAxis = this.adapter.mainAxis\n        return model.position[mainAxis]\n            + model.size[mainAxis]\n            * (1 - model.anchorPoint[mainAxis])\n            * model.scale[mainAxis]\n            + this.adapter.scrollManager.contentPosition\n    }\n    private _getModelFooterBoundary(model: IModel<T>) {\n        var mainAxis = this.adapter.mainAxis\n        return model.position[mainAxis]\n            - model.size[mainAxis]\n            * model.anchorPoint[mainAxis]\n            * model.scale[mainAxis]\n            + this.adapter.scrollManager.contentPosition\n    }\n    private _getModelSizeWithSpacing(model: IModel<T>) {\n        var mainAxis = this.adapter.mainAxis\n        var fixedOffset = Helper.isNumber(model.element.fixedOffset) ? model.element.fixedOffset : 0\n        var spacing = Helper.isNumber(model.element.fixedSpacing) ? model.element.fixedSpacing : this.adapter.viewManager.spacing\n        return model.size[mainAxis] * model.scale[mainAxis] + fixedOffset + spacing\n    }\n    private _getReatureRelativeBoundary(model: IModel<T>, offset: number) {\n        var boundary = this.adapter.multiplier == 1\n            ? this._getModelHeaderBoundary(model)\n            : this._getModelFooterBoundary(model)\n        var value = this.adapter.multiplier == 1\n            ? boundary + offset\n            : offset - boundary\n        return Math.min(value, offset)\n    }\n    private _getRelativeNextHolderOffset(currentHolder: Holder, holderList: Holder[]) {\n        var length = holderList.length\n        var crossAxis = this.adapter.crossAxis\n        var sizeSpacing = this._getModelSizeWithSpacing(currentHolder.model)\n        var relativeOffset = 0\n        for (let i = 0; i < length; i++) {\n            const holder = holderList[i];\n            var offset = this._getReatureRelativeBoundary(holder.model, sizeSpacing)\n            var sameScale = currentHolder.model.scale[crossAxis] == holder.model.scale[crossAxis]\n            var sameSize = currentHolder.model.size[crossAxis] == holder.model.size[crossAxis]\n            if (currentHolder.fixedIndex == holder.fixedIndex && sameScale && sameSize) {\n                relativeOffset = offset > 0 ? offset : 0\n                break\n            }\n            if (offset > 0) {\n                relativeOffset = Math.max(relativeOffset, offset)\n            }\n        }\n        return relativeOffset\n    }\n}\n\n\n\n\n"]}