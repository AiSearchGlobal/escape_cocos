{"version":3,"sources":["assets/script/framework/manager/UIMng.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import UIBase, { UIClass } from \"../ui/UIBase\";\nimport { ViewZorder } from \"../const/ViewZorder\";\nimport { Log } from \"../../utils/Log\";\nimport UIComTips from \"../../logic/ui/comPop/UIComTips\";\n\nexport class UIMng {\n    private static instance: UIMng;\n\n    private uiList: UIBase[] = [];\n    private comTips: UIBase = null;\n\n    public static getInstance(): UIMng {\n        if (this.instance == null) {\n            this.instance = new UIMng();\n        }\n        return this.instance;\n    }\n\n    private constructor() {\n\n    }\n\n    /**\n     * 打开UI\n     * @param uiClass \n     * @param zOrder \n     * @param callback 打开完毕回调函数\n     * @param onProgress 打开过程进度函数\n     * @param args 传入到UI的参数\n     */\n    public openUI<T extends UIBase>(uiClass: UIClass<T>, zOrder: number = ViewZorder.UI, callback?: Function, onProgress?: Function, ...args: any[]) {\n        if (this.getUI(uiClass)) {\n            Log.error(`UIMng OpenUI 1: ui ${uiClass.getName()} is already exist, please check`);\n            return;\n        }\n        cc.loader.loadRes(uiClass.getUrl(), (completedCount: number, totalCount: number, item: any) => {\n            onProgress && onProgress(completedCount, totalCount, item);\n        }, (error, prefab) => {\n            if (error) {\n                Log.error(`UIMng OpenUI: load ui error: ${error}`);\n                return;\n            }\n            if (this.getUI(uiClass)) {\n                Log.error(`UIMng OpenUI 2: ui ${uiClass.getName()} is already exist, please check`);\n                return;\n            }\n\n            let uiNode: cc.Node = cc.instantiate(prefab);\n            let ui = uiNode.getComponent(uiClass) as UIBase;\n            if (!ui) {\n                Log.error(`${uiClass.getUrl()}没有绑定UI脚本!!!`);\n                return;\n            }\n            ui.init(args);\n            // let uiRoot = cc.director.getScene().getChildByName('UIRoot');\n            let uiRoot = cc.director.getScene();\n            if (!uiRoot) {\n                Log.error(`当前场景${cc.director.getScene().name}Canvas!!!`);\n                return;\n            }\n            uiNode.parent = uiRoot;\n            uiNode.zIndex = zOrder;\n\n            if(zOrder == ViewZorder.UI){\n                this.hideAllUI();\n            }\n            if(uiNode.getComponent(UIComTips)){\n                this.comTips = ui;\n            }else{\n                this.uiList.push(ui);\n            }\n            // this.uiList.push(ui);\n            ui.tags = uiClass;\n\n            callback && callback(ui);\n        });\n    }\n\n\n    /**\n     * 清除依赖资源\n     * @param prefabUrl \n     */\n    private clearDependsRes(prefabUrl) {\n        let deps = cc.loader.getDependsRecursively(prefabUrl);\n        // Log.log(`UIMng clearDependsRes: release ${prefabUrl} depends resources `, deps);\n        deps.forEach((item) => {\n            // todo：排除公共资源，然后清理\n            // if (item.indexOf('common') === -1) {\n            //     cc.loader.release(item);\n            // }\n        });\n    }\n\n    public closeUI<T extends UIBase>(uiClass: UIClass<T>) {\n        for (let i = 0; i < this.uiList.length; ++i) {\n            if (this.uiList[i].tags === uiClass) {\n                var isUI = this.uiList[i].node.zIndex == ViewZorder.UI\n                if (cc.isValid(this.uiList[i].node)) {\n                    this.uiList[i].node.destroy();\n                    this.clearDependsRes(uiClass.getUrl());\n                }\n                this.uiList.splice(i, 1);\n                if(isUI && this.uiList.length && this.uiList[this.uiList.length-1].node.zIndex == ViewZorder.UI){\n                    this.uiList[this.uiList.length-1].node.active = true;\n                }\n                \n                return;\n            }\n        }\n    }\n\n    public closeAllUI() {\n        if (this.uiList.length == 0) {\n            return;\n        }\n        this.closeUI(this.uiList[0].tags);\n        while (this.uiList.length > 0) {\n            this.closeUI(this.uiList[0].tags);\n        }\n    }\n\n    public hideAllUI() {\n        if (this.uiList.length == 0) {\n            return;\n        }\n\n        for (let i = 0; i < this.uiList.length; ++i) {\n            if (cc.isValid(this.uiList[i].node) && this.uiList[i].node.zIndex == ViewZorder.UI) {\n                this.uiList[i].node.active = false;\n            }\n        }\n    }\n\n    public showUI<T extends UIBase>(uiClass: UIClass<T>, callback?: Function) {\n        let ui = this.getUI(uiClass);\n        if (!ui) {\n            Log.error(`UIMng showUI: ui ${uiClass.getName()} not exist`);\n            return;\n        }\n        ui.node.active = true;\n    }\n\n    public hideUI<T extends UIBase>(uiClass: UIClass<T>) {\n        let ui = this.getUI(uiClass);\n        if (ui) {\n            ui.node.active = false;\n        }\n    }\n\n    public getUI<T extends UIBase>(uiClass: UIClass<T>): UIBase {\n        if(uiClass.getName() == \"UIComTips\" && this.comTips?.node?.parent){\n            return this.comTips;\n        }else{\n            for (let i = 0; i < this.uiList.length; ++i) {\n                if (this.uiList[i].tags === uiClass) {\n                    return this.uiList[i];\n                }\n            }\n        }\n        \n        return null;\n    }\n\n    public isShowing<T extends UIBase>(uiClass: UIClass<T>) {\n        let ui = this.getUI(uiClass);\n        if (!ui) {\n            return false;\n        }\n        return ui.node.active;\n    }\n}"]}