{"version":3,"sources":["assets/script/framework/adapter/manager/LayoutManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// import { _decorator, Component, Node } from 'cc';\nimport { Group } from '../abstract/Group';\nimport { Manager } from '../abstract/Manager';\nimport { ChildAlignment, Orientation } from '../define/enum';\nimport { IElement, IModel } from '../define/interface';\nimport { Helper } from '../help/helper';\nconst { ccclass, property } = cc._decorator;\nenum Event {\n    ON_LAYOUT_COMPLATED,\n    ON_CHANGED_LAYOUT_STATE,\n}\n@ccclass('LayoutManager')\nexport class LayoutManager extends Manager {\n    public static Event = Event\n    @property({ type: ChildAlignment }) private _childAlignment: ChildAlignment = ChildAlignment.UpperLeft\n    @property({\n        type: ChildAlignment,\n        tooltip: \"布局元素的对齐方式\"\n    }) public get childAlignment() { return this._childAlignment }\n    public set childAlignment(value: ChildAlignment) {\n        if (value == this._childAlignment) return\n        this._childAlignment = value\n        this.emit(Event.ON_CHANGED_LAYOUT_STATE)\n    }\n\n    @property() private _spacing: number = 0\n    @property({\n        tooltip: \"元素交叉轴布局的间距\"\n    }) get spacing() { return this._spacing }\n    public set spacing(value: number) {\n        if (value == this._spacing) return\n        this._spacing = value\n        this.emit(Event.ON_CHANGED_LAYOUT_STATE)\n    }\n\n    @property() private _reverseArrangement: boolean = false\n    @property({\n        tooltip: \"反转布局\"\n    }) get reverseArrangement() { return this._reverseArrangement }\n    set reverseArrangement(value: boolean) {\n        if (value == this._reverseArrangement) return\n        this._reverseArrangement = value\n        this.emit(Event.ON_CHANGED_LAYOUT_STATE)\n    }\n    @property({\n        tooltip: \"延迟布局，开启后会统一在下一帧布局，建议开启\"\n    }) delayLayout: boolean = true\n    @property() private _forceExpandWidth: boolean = false\n    @(property as any)({\n        group: { id: \"0\", name: \"forceExpand\" },\n        tooltip: \"是否强制布局元素宽度扩展以填充额外的可用空间\"\n    }) get forceExpandWidth() { return this._forceExpandWidth }\n    public set forceExpandWidth(value: boolean) {\n        if (value == this._forceExpandWidth) return\n        this._forceExpandWidth = value\n        this.emit(Event.ON_CHANGED_LAYOUT_STATE)\n    }\n    @property() private _forceExpandHeight: boolean = true\n    @(property as any)({\n        group: { id: \"0\", name: \"forceExpand\" },\n        tooltip: \"是否强制布局元素高度扩展以填充额外的可用空间\"\n    }) get forceExpandHeight() { return this._forceExpandHeight }\n    public set forceExpandHeight(value: boolean) {\n        if (value == this._forceExpandHeight) return\n        this._forceExpandHeight = value\n        this.emit(Event.ON_CHANGED_LAYOUT_STATE)\n    }\n    @property() private _controlSizeWidth: boolean = false\n    @(property as any)({\n        group: { id: \"0\", name: \"controlSize\" },\n        tooltip: \"如果设置为 false，布局只会影响元素的位置，而不会影响宽度，在这种情况下你可以设置元素的宽度\\n如果设置为 true，元素的宽度将由布局根据它们各自的 IElement.minSize、IElement.preferredSize、IElement.flexibleSize自动设置。如果元素的宽度应根据可用空间的大小而变化，应开启此功能。在这种情况下不能直接设置每个元素的宽度，但可以通过控制每个元素的IElement.minSize、IElement.preferredSize、IElement.flexibleSize来进行控制\"\n    }) get controlSizeWidth() { return this._controlSizeWidth }\n    public set controlSizeWidth(value: boolean) {\n        if (value == this._controlSizeWidth) return\n        this._controlSizeWidth = value\n        this.emit(Event.ON_CHANGED_LAYOUT_STATE)\n    }\n    @property() private _controlSizeHeight: boolean = false\n    @(property as any)({\n        group: { id: \"0\", name: \"controlSize\" },\n        tooltip: \"如果设置为 false，布局只会影响元素的位置，而不会影响高度，在这种情况下你可以设置元素的高度\\n如果设置为 true，元素的高度将由布局根据它们各自的 IElement.minSize、IElement.preferredSize、IElement.flexibleSize自动设置。如果元素的高度应根据可用空间的大小而变化，应开启此功能。在这种情况下不能直接设置每个元素的高度，但可以通过控制每个元素的IElement.minSize、IElement.preferredSize、IElement.flexibleSize来进行控制\"\n    }) get controlSizeHeight() { return this._controlSizeHeight }\n    public set controlSizeHeight(value: boolean) {\n        if (value == this._controlSizeHeight) return\n        this._controlSizeHeight = value\n        this.emit(Event.ON_CHANGED_LAYOUT_STATE)\n    }\n    @property() private _controlScaleWidth: boolean = false\n    @(property as any)({\n        group: { id: \"0\", name: \"controlScale\" },\n        tooltip: \"是否使用 x 缩放计算宽度\"\n    }) get controlScaleWidth() { return this._controlScaleWidth }\n    public set controlScaleWidth(value: boolean) {\n        if (value == this._controlScaleWidth) return\n        this._controlScaleWidth = value\n        this.emit(Event.ON_CHANGED_LAYOUT_STATE)\n    }\n    @property() private _controlScaleHeight: boolean = false\n    @(property as any)({\n        group: { id: \"0\", name: \"controlScale\" },\n        tooltip: \"是否使用 y 缩放计算高度\"\n    }) get controlScaleHeight() { return this._controlScaleHeight }\n    public set controlScaleHeight(value: boolean) {\n        if (value == this._controlScaleHeight) return\n        this._controlScaleHeight = value\n        this.emit(Event.ON_CHANGED_LAYOUT_STATE)\n    }\n\n    private _isDirty: boolean = false\n    private _layoutQueue: Group<any>[] = []\n\n    public get top() {\n        if (this.adapter.isVertical) return 0\n        return this.adapter.viewManager.top\n    }\n    public get bottom() {\n        if (this.adapter.isVertical) return 0\n        return this.adapter.viewManager.bottom\n    }\n    public get left() {\n        if (this.adapter.isHorizontal) return 0\n        return this.adapter.viewManager.left\n    }\n    public get right() {\n        if (this.adapter.isHorizontal) return 0\n        return this.adapter.viewManager.right\n    }\n    public get horizontal() {\n        return this.left + this.right\n    }\n    public get vertical() {\n        return this.top + this.bottom\n    }\n    public get isControlMainAxisSize() {\n        return this.adapter.isHorizontal && this.controlSizeWidth || this.adapter.isVertical && this.controlSizeHeight\n    }\n    public get isControlCrossAxisSize() {\n        return this.adapter.isHorizontal && this.controlSizeHeight || this.adapter.isVertical && this.controlSizeWidth\n    }\n    public get isControlCrossAxisScale() {\n        return this.adapter.isHorizontal && this.controlScaleHeight || this.adapter.isVertical && this.controlScaleWidth\n    }\n    protected onInit(): void {\n    }\n    public layout(group: Group<any>) {\n        if (!group) return\n        if (this.delayLayout) {\n            this.unLayout(group.index)\n            this._layoutQueue.push(group)\n            this._isDirty = true\n        } else {\n            this._layoutHandler(group)\n            this.emit(Event.ON_LAYOUT_COMPLATED, [group.index])\n        }\n    }\n    public unLayout(index: number) {\n        var index = this._layoutQueue.findIndex(item => item.index == index)\n        if (-1 != index) {\n            this._layoutQueue.splice(index, 1)\n        }\n    }\n    private _layoutHandler(group: Group<any>) {\n        this._calcAlongAxis(group, Orientation.Horizontal, this.adapter.isHorizontal)\n        this._setChildrenAlongAxis(group, Orientation.Horizontal, this.adapter.isHorizontal)\n        this._calcAlongAxis(group, Orientation.Vertical, this.adapter.isHorizontal)\n        this._setChildrenAlongAxis(group, Orientation.Vertical, this.adapter.isHorizontal)\n    }\n    private _calcAlongAxis(group: Group<any>, axis: Orientation, isVertical: boolean): void {\n        var combinedPadding = (axis == Orientation.Horizontal ? this.horizontal : this.vertical)\n        var controlSize = this._getControlSize(axis)\n        var controlScale = this._getControlScale(axis)\n        var forceExpand = this._getForceExpandSize(axis)\n        var totalMin = combinedPadding\n        var totalPreferred = combinedPadding\n        var totalFlexible = 0\n        var alongOtherAxis = isVertical != (axis == Orientation.Vertical)\n        var layoutList = this._getLayoutList(group.models)\n        for (let i = 0; i < layoutList.length; i++) {\n            const model = layoutList[i];\n            var { min, preferred, flexible } = this._getChildSizes(model, axis, controlSize, forceExpand)\n            if (controlScale) {\n                var scaleFactor = model.scale[this._getAxis(axis)]\n                min *= scaleFactor\n                preferred *= scaleFactor\n                flexible *= scaleFactor\n            }\n            if (alongOtherAxis) {\n                totalMin = Math.max(min + combinedPadding, totalMin)\n                totalPreferred = Math.max(preferred + combinedPadding, totalPreferred)\n                totalFlexible = Math.max(flexible, totalFlexible)\n            } else {\n                totalMin += min + this.spacing\n                totalPreferred += preferred + this.spacing\n                totalFlexible += flexible\n            }\n        }\n        if (!alongOtherAxis && layoutList.length > 0) {\n            totalMin -= this.spacing\n            totalPreferred -= this.spacing\n        }\n        totalPreferred = Math.max(totalMin, totalPreferred)\n        this._setLayoutInputForAxis(group, totalMin, totalPreferred, totalFlexible, axis)\n    }\n    private _getControlSize(axis: Orientation) {\n        return axis == Orientation.Horizontal ? this.controlSizeWidth : this.controlSizeHeight\n    }\n    private _getControlScale(axis: Orientation) {\n        return axis == Orientation.Horizontal ? this.controlScaleWidth : this.controlScaleHeight\n    }\n    private _getForceExpandSize(axis: Orientation) {\n        return axis == Orientation.Horizontal ? this.forceExpandWidth : this.forceExpandHeight\n    }\n    private _setChildrenAlongAxis(group: Group<any>, axis: Orientation, isVertical: boolean): void {\n        var size = group.size[this._getAxis(axis)]\n        var controlSize = this._getControlSize(axis)\n        var controlScale = this._getControlScale(axis)\n        var forceExpand = this._getForceExpandSize(axis)\n        var alignmentOnAxis = this._getAlignmentOnAxis(axis)\n        var layoutList = this._getLayoutList(group.models)\n        var alongOtherAxis = isVertical != (axis == Orientation.Vertical)\n        var startIndex = this.reverseArrangement ? layoutList.length - 1 : 0\n        var endIndex = this.reverseArrangement ? 0 : layoutList.length\n        var increment = this.reverseArrangement ? -1 : 1\n        var key = this._getAxis(axis)\n        if (alongOtherAxis) {\n            var innerSize = size - (axis == Orientation.Horizontal ? this.horizontal : this.vertical)\n            for (var i = startIndex; this.reverseArrangement ? i >= endIndex : i < endIndex; i += increment) {\n                const model = layoutList[i]\n                var { min, preferred, flexible } = this._getChildSizes(model, axis, controlSize, forceExpand)\n                let scaleFactor = controlScale ? model.scale[key] : 1\n                var requiredSpace = Helper.clamp(innerSize, min, flexible > 0 ? size : preferred)\n                var startOffset = this._getStartOffset(group, axis, requiredSpace * scaleFactor)\n                if (controlSize) {\n                    this._setChildAlongAxisWithScale(group, model, axis, startOffset, scaleFactor, requiredSpace)\n                } else {\n                    var offsetInCell = (requiredSpace - model.size[key]) * alignmentOnAxis\n                    offsetInCell *= scaleFactor\n                    this._setChildAlongAxisWithScale(group, model, axis, startOffset + offsetInCell, scaleFactor)\n                }\n            }\n        } else {\n            var pos = (axis == Orientation.Horizontal ? this.left : this.top)\n            var itemFlexibleMultiplier = 0\n            var surplusSpace = size - this._getTotalPreferredSize(group, axis)\n            if (surplusSpace > 0) {\n                if (this._getTotalFlexibleSize(group, axis) == 0) {\n                    pos = this._getStartOffset(group, axis, this._getTotalPreferredSize(group, axis) - (axis == Orientation.Horizontal ? this.horizontal : this.vertical))\n                }\n                else if (this._getTotalFlexibleSize(group, axis) > 0) {\n                    itemFlexibleMultiplier = surplusSpace / this._getTotalFlexibleSize(group, axis)\n                }\n            }\n            var minMaxLerp = 0\n            if (this._getTotalMinSize(group, axis) != this._getTotalPreferredSize(group, axis)) {\n                minMaxLerp = Helper.clamp01((size - this._getTotalMinSize(group, axis)) / (this._getTotalPreferredSize(group, axis) - this._getTotalMinSize(group, axis)))\n            }\n            for (var i = startIndex; this.reverseArrangement ? i >= endIndex : i < endIndex; i += increment) {\n                var model = layoutList[i]\n                var { min, preferred, flexible } = this._getChildSizes(model, axis, controlSize, forceExpand)\n                let scaleFactor = controlScale ? model.scale[key] : 1\n                var childSize = Helper.lerp(min, preferred, minMaxLerp)\n                childSize += flexible * itemFlexibleMultiplier\n                if (controlSize) {\n                    this._setChildAlongAxisWithScale(group, model, axis, pos, scaleFactor, childSize)\n                }\n                else {\n                    var offsetInCell = (childSize - model.size[key]) * alignmentOnAxis\n                    this._setChildAlongAxisWithScale(group, model, axis, pos + offsetInCell, scaleFactor)\n                }\n                pos += childSize * scaleFactor + this.spacing\n            }\n        }\n    }\n    private _setChildAlongAxisWithScale(group: Group<any>, model: IModel<any>, axis: Orientation, pos: number, scaleFactor: number, size?: number) {\n        if (model == null) return\n        const key = this._getAxis(axis)\n        var layoutSize = 0\n        if (!isNaN(size)) {\n            model.layoutSize[key] = size\n            layoutSize = size\n        } else {\n            layoutSize = model.size[key]\n        }\n        var position = { x: model.position.x, y: model.position.y }\n        var value = 0\n        if (axis == Orientation.Horizontal) {\n            value = pos + layoutSize * model.anchorPoint[key] * scaleFactor\n            value -= group.size[key] * group.anchorPoint[key]\n            value += group.position[key]\n        } else {\n            value = -pos - layoutSize * (1 - model.anchorPoint[key]) * scaleFactor\n            value += group.size[key] * (1 - group.anchorPoint[key])\n            value += group.position[key]\n        }\n        position[key] = value\n        model.position = position\n    }\n\n    private _getStartOffset(group: Group<any>, axis: Orientation, requiredSpaceWithoutPadding: number): number {\n        var requiredSpace = requiredSpaceWithoutPadding + (axis == Orientation.Horizontal ? this.horizontal : this.vertical)\n        var availableSpace = group.size[this._getAxis(axis)]\n        var surplusSpace = availableSpace - requiredSpace\n        var alignmentOnAxis = this._getAlignmentOnAxis(axis)\n        return (axis == Orientation.Horizontal ? this.left : this.top) + surplusSpace * alignmentOnAxis\n    }\n    private _setLayoutInputForAxis(group: Group<any>, totalMin: number, totalPreferred: number, totalFlexible: number, axis: Orientation) {\n        var key = this._getAxis(axis)\n        group.totalMinSize[key] = totalMin\n        group.totalPreferredSize[key] = totalPreferred\n        group.totalFlexibleSize[key] = totalFlexible\n    }\n    private _getAxis(axis: Orientation) {\n        return axis == Orientation.Horizontal ? \"x\" : \"y\"\n    }\n    private _getMinSize(element: IElement, axis: Orientation): number {\n        return element.minSize[this._getAxis(axis)]\n    }\n    private _getPreferredSize(element: IElement, axis: Orientation): number {\n        var key = this._getAxis(axis)\n        return Math.max(element.minSize[key], element.preferredSize[key])\n    }\n    private _getFlexibleSize(element: IElement, axis: Orientation): number {\n        return element.flexibleSize[this._getAxis(axis)]\n    }\n    private _getTotalMinSize(group: Group<any>, axis: Orientation): number {\n        return group.totalMinSize[this._getAxis(axis)]\n    }\n    private _getTotalPreferredSize(group: Group<any>, axis: Orientation): number {\n        return group.totalPreferredSize[this._getAxis(axis)]\n    }\n    private _getTotalFlexibleSize(group: Group<any>, axis: Orientation): number {\n        return group.totalFlexibleSize[this._getAxis(axis)]\n    }\n    private _getChildSizes(model: IModel<any>, axis: Orientation, controlSize: boolean, childForceExpand: boolean) {\n        var min, preferred, flexible\n        if (!controlSize) {\n            min = model.size[this._getAxis(axis)]\n            preferred = min\n            flexible = 0\n        }\n        else {\n            min = this._getMinSize(model.element, axis)\n            preferred = this._getPreferredSize(model.element, axis)\n            flexible = this._getFlexibleSize(model.element, axis)\n        }\n        if (childForceExpand) {\n            flexible = Math.max(flexible, 1)\n        }\n        return { min, preferred, flexible }\n    }\n    private _getAlignmentOnAxis(axis: Orientation) {\n        if (axis == Orientation.Horizontal) {\n            return (this.adapter.layoutManager.childAlignment % 3) * 0.5\n        } else {\n            return Math.floor(this.adapter.layoutManager.childAlignment / 3) * 0.5\n        }\n    }\n    private _getLayoutList(models: IModel<any>[]) {\n        var list = []\n        for (let i = 0; i < models.length; i++) {\n            const model = models[i];\n            if (model.element.ignoreLayout) continue\n            list.push(model)\n        }\n        return list\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_lateUpdate(deltaTime: number) {\n        if (this._isDirty) {\n            this._isDirty = false\n            var complatedIndexs = []\n            while (this._layoutQueue.length > 0) {\n                var item = this._layoutQueue.shift()\n                this._layoutHandler(item)\n                complatedIndexs.push(item.index)\n            }\n            if (complatedIndexs.length > 0) {\n                this.emit(Event.ON_LAYOUT_COMPLATED, complatedIndexs)\n            }\n        }\n    }\n}\n\n"]}