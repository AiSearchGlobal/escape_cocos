{"version":3,"sources":["assets/script/framework/adapter/abstract/Holder.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { IElement, IModel } from '../define/interface';\nimport { Helper } from '../help/helper';\nimport { ModelManager } from '../manager/ModelManager';\nimport { ScrollAdapter } from './ScrollAdapter';\nimport { View } from './View';\nconst { ccclass, property } = cc._decorator;\n// @ccclass\nexport abstract class Holder<T = any, A extends ScrollAdapter = ScrollAdapter<T>> {\n    protected abstract onCreated(): void\n    protected abstract onVisible(): void\n    protected abstract onDisable(): void\n    private readonly _node: cc.Node\n    public get node() { return this._node }\n    private readonly _transform: cc.Node\n    public get transform() { return this._transform }\n    private readonly _code: string\n    public get code() { return this._code }\n    private readonly _adapter: A\n    public get adapter() { return this._adapter }\n    private _model: IModel<T>\n    public get model() { return this._model }\n    private _view: View<T, A>\n    public get view() { return this._view }\n    public get data(): T | null { return this._model && this._model.data }\n    private _fixedIndex: number = -1\n    public get fixedIndex() { return this._fixedIndex }\n    private _oldData: T = null\n    public get oldData() { return this._oldData }\n    private _oldElement: IElement = null\n    public get element() { return this._model && this._model.element }\n    public get index() { return this._model && this._model.index }\n    private _isCallCreated: boolean = false\n    private _isLayout: boolean = false\n    constructor(node: cc.Node, code: string, adapter: A) {\n        this._node = node\n        this._code = code\n        this._adapter = adapter\n        this._transform = node\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_visible(view: View<T, A>, model: IModel<T>, isNew: boolean) {\n        this._view = view\n        this._model = model\n        this._oldElement = Object.assign({}, model.element)\n        this._model.element.update = this._updateElement.bind(this)\n        this._oldData = this.data\n        if (!isNew) return\n        this.node.active = true\n        if (!this._isCallCreated) {\n            this._isCallCreated = true\n            this.onCreated()\n        }\n        if (this.element.fixed) {\n            this._fixedIndex = this.view.group.models.findIndex(item => item.index == this.model.index)\n        }\n        this.transform.setContentSize(this.model.size.x, this.model.size.y)\n        this.node.setScale(this.model.scale.x, this.model.scale.y)\n        this._register()\n        this.onVisible()\n        this._model.update = this._updateHandler.bind(this)\n    }\n    private _updateElement() {\n        if (this._oldElement.layer != this.element.layer) {\n            this.node.parent = this.adapter.scrollManager.getLayerNode(this.element.layer)\n            this._oldElement.layer = this.element.layer\n        }\n        if (this._oldElement.wrapAfterMode != this.element.wrapAfterMode ||\n            this._oldElement.wrapBeforeMode != this.element.wrapBeforeMode ||\n            this._oldElement.ignoreLayout != this.element.ignoreLayout ||\n            this.element.ignoreLayout && this._oldElement.placeholder != this.element.placeholder) {\n            this.adapter.viewManager.internal_updateVisibleView(this.model.index)\n            this._oldElement.wrapAfterMode = this.element.wrapAfterMode\n            this._oldElement.wrapBeforeMode = this.element.wrapBeforeMode\n            this._oldElement.ignoreLayout = this.element.ignoreLayout\n            this._oldElement.placeholder = this.element.placeholder\n        }\n    }\n    private _updateHandler() {\n        this._model.update = () => { }\n        this.onVisible()\n        this._model.update = this._updateHandler.bind(this)\n    }\n\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_disable() {\n        this.adapter.scrollManager.internal_disableTouchTarget(this.node)\n        this.onDisable()\n        this._unregister()\n        this._model.update = () => { }\n        this._model.element.update = () => { }\n        this._view = null\n        this._model = null\n        this._fixedIndex = -1\n        this._isLayout = false\n        this._oldData = null\n        this.node.active = false\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_layout() {\n        var size = { x: this.model.size.x, y: this.model.size.y }\n        if (this.adapter.layoutManager.isControlMainAxisSize) {\n            size[this.adapter.mainAxis] = this.model.layoutSize[this.adapter.mainAxis]\n        }\n        if (this.adapter.layoutManager.isControlCrossAxisSize) {\n            size[this.adapter.crossAxis] = this.model.layoutSize[this.adapter.crossAxis]\n        }\n\n        this._isLayout = true\n        this.transform.setContentSize(size.x, size.y)\n        this._isLayout = false\n        this.node.setPosition(this.model.position.x, this.model.position.y)\n    }\n    private _register() {\n        this.node.on(cc.Node.EventType.SIZE_CHANGED, this._onSizeChanged, this)\n        this.node.on(cc.Node.EventType.SCALE_CHANGED, this._onScaleChanged, this)\n        this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this._onAnchorPointChanged, this)\n        this._adapter.modelManager.on(ModelManager.Event.ON_UPDATE, this._updateHandler, this)\n    }\n    private _unregister() {\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this._onSizeChanged, this)\n        this.node.off(cc.Node.EventType.SCALE_CHANGED, this._onScaleChanged, this)\n        this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this._onAnchorPointChanged, this)\n        this._adapter.modelManager.off(ModelManager.Event.ON_UPDATE, this._updateHandler, this)\n    }\n    private _onSizeChanged() {\n        if (this._isLayout) return\n        var isMainAxisEqual = Helper.approximately(this.model.size[this.adapter.mainAxis], Helper.sizeToVec(this.transform.getContentSize())[this.adapter.mainAxis])\n        var isCrossAxisEqual = Helper.approximately(this.model.size[this.adapter.crossAxis], Helper.sizeToVec(this.transform.getContentSize())[this.adapter.crossAxis])\n        this.model.size.x = this.transform.width\n        this.model.size.y = this.transform.height\n        if (isMainAxisEqual && isCrossAxisEqual) {\n            return\n        }\n        this.view.internal_holderChanged(isMainAxisEqual)\n    }\n    private _onScaleChanged(type: any) {\n        // if (type != Node.TransformBit.SCALE) return\n        // 如果未勾选缩放控制 则不关心缩放变化\n        if (!this.adapter.layoutManager.controlScaleWidth && !this.adapter.layoutManager.controlScaleHeight) {\n            return\n        }\n        var isMainAxisEqual = Helper.approximately(this.model.scale[this.adapter.mainAxis], this.node.scale[this.adapter.mainAxis])\n        var isCrossAxisEqual = Helper.approximately(this.model.scale[this.adapter.crossAxis], this.node.scale[this.adapter.crossAxis])\n        this.model.scale.x = this.node.scaleX\n        this.model.scale.y = this.node.scaleY\n        if (isMainAxisEqual && isCrossAxisEqual) {\n            return\n        }\n        this.view.internal_holderChanged(isMainAxisEqual)\n    }\n    private _onAnchorPointChanged() {\n        var isMainAxisEqual = Helper.approximately(this.model.anchorPoint[this.adapter.mainAxis], this.transform.getAnchorPoint()[this.adapter.mainAxis])\n        var isCrossAxisEqual = Helper.approximately(this.model.anchorPoint[this.adapter.crossAxis], this.transform.getAnchorPoint()[this.adapter.crossAxis])\n        this.model.anchorPoint.x = this.transform.anchorX\n        this.model.anchorPoint.y = this.transform.anchorY\n        if (isMainAxisEqual && isCrossAxisEqual) {\n            return\n        }\n        this.view.internal_holderChanged(isMainAxisEqual)\n    }\n}\n\n"]}