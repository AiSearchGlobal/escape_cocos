{"version":3,"sources":["assets/script/framework/adapter/manager/ModelManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// import { _decorator, Component, Node } from 'cc';\nimport { Manager } from '../abstract/Manager';\nimport { Layer, WrapMode } from '../define/enum';\nimport { IModel } from '../define/interface';\nimport { Helper } from '../help/helper';\nconst { ccclass, property } = cc._decorator;\nenum Event {\n    /** 当数据被清空时 */\n    ON_CLEAR,\n    /** 当添加数据时 */\n    ON_INSERT,\n    /** 当删除数据时 */\n    ON_REMOVE,\n    /** 当移动数据时 */\n    ON_MOVE,\n    /** 用户数据发生了改变 */\n    ON_UPDATE,\n    /** 当用户数据列表变化之前 */\n    ON_CHANGE_BEFORE,\n}\n@ccclass('ModelManager')\nexport class ModelManager<T = any> extends Manager {\n    public static Event = Event\n    private readonly _modelList: IModel<T>[] = []\n    private _length: number = 0\n    public get length() { return this._length }\n    public get modelList() { return this._modelList }\n    protected onInit(): void {\n    }\n    public async insert(data: T | T[], insertIndex: number = this.length) {\n        var list = this._toArray(data)\n        insertIndex = Helper.clamp(insertIndex, 0, this.length)\n        this.emit(Event.ON_CHANGE_BEFORE)\n        this._insertHandler(list, insertIndex)\n        this._length = this._modelList.length\n        // console.log(\"插入完成\", this._modelList)\n        if (list.length > 0) {\n            this.emit(Event.ON_INSERT, insertIndex)\n        }\n    }\n    private _insertHandler(list: any[], insertIndex: number) {\n        var index = insertIndex\n        this._length = this._modelList.length\n        var cacheList = []\n        const newModel = (data: T, index: number) => {\n            model = this._getNewModel(data)\n            model.index = index\n            this._modelList.push(model)\n            return model\n        }\n        const action = (data: T) => {\n            var model = this.get(index)\n            if (model) {\n                cacheList.push(this._copyModel(model, {}))\n                model.data = data\n                model.index = index\n                this._initModel(model)\n            } else {\n                let curr = newModel(data, index)\n                this._initModel(curr)\n            }\n            index++\n        }\n        for (let i = 0, len = list.length; i < len; i++) {\n            action(list[i])\n        }\n        for (let i = 0; i < cacheList.length; i++) {\n            const cache = cacheList[i];\n            var idx = index + i\n            if (this.get(idx)) {\n                var model = this.get(idx)\n                cacheList.push(this._copyModel(model, {}))\n                this._copyModel(cache, model)\n            } else {\n                let curr = newModel(cache.data, idx)\n                this._copyModel(cache, curr)\n            }\n        }\n    }\n    public remove(index: number, count: number = 1) {\n        if (count == 0) return\n        if (index < 0 || index >= this.length) return\n        var removeIndex = this.length\n        this.emit(Event.ON_CHANGE_BEFORE)\n        for (let i = index; i < this.length; i++) {\n            var model = this.get(i)\n            var next = this.get(i + count)\n            if (next) {\n                this._copyModel(next, model)\n                model.index = i\n            } else {\n                removeIndex = i\n                break\n            }\n        }\n        this._modelList.splice(removeIndex, this.length)\n        this._length = this._modelList.length\n        console.log(this._modelList)\n        this.emit(Event.ON_REMOVE, index)\n    }\n    public move(startIndex: number, count: number, newIndex: number) {\n        if (startIndex < 0 || count <= 0) return\n        this.emit(Event.ON_CHANGE_BEFORE)\n        var temp = this._modelList.map(item => this._copyModel(item, {}))\n        var moveList = temp.splice(startIndex, count)\n        temp.splice(newIndex, 0, ...moveList)\n        for (let i = 0; i < temp.length; i++) {\n            this._copyModel(temp[i], this._modelList[i])\n        }\n        var index = Math.min(startIndex, newIndex)\n        this.emit(Event.ON_MOVE, index)\n        console.log(\"移动后的数据\", this._modelList)\n    }\n    /**\n     * 更新所有数据\n     */\n    public update() {\n        this.emit(Event.ON_UPDATE)\n    }\n    public clear() {\n        this._modelList.length = 0\n        this._length = 0\n        this.emit(Event.ON_CLEAR)\n    }\n    public has(index: number): boolean {\n        return !!this._modelList[index]\n    }\n    public get(index: number): IModel<T> | null {\n        if (isNaN(index)) return null\n        return this._modelList[index]\n    }\n    public slice(start: number, end: number) {\n        if (this.length == 0) return []\n        return this._modelList.slice(start, end)\n    }\n    private _toArray(data: T | T[]) {\n        if (!data) return []\n        if (data instanceof Array) {\n            return data\n        } else {\n            return [data]\n        }\n    }\n    private _getNewModel(data: T): IModel<T> {\n        var model = {\n            data: data,\n            index: -1,\n            code: null,\n            size: { x: 0, y: 0 },\n            layoutSize: { x: 0, y: 0 },\n            scale: { x: 0, y: 0 },\n            position: { x: 0, y: 0 },\n            anchorPoint: { x: 0, y: 0 },\n            element: {\n                wrapBeforeMode: WrapMode.Wrap,\n                wrapAfterMode: WrapMode.Nowrap,\n                ignoreLayout: false,\n                placeholder: false,\n                minSize: { x: 0, y: 0 },\n                preferredSize: { x: 0, y: 0 },\n                flexibleSize: { x: 0, y: 0 },\n                layer: Layer.Lowest,\n                fixed: false,\n                fixedOffset: 0,\n                fixedSpacing: null,\n                update: () => { }\n            },\n            isValid: true,\n            update: () => { }\n        }\n        return model\n    }\n    private _initModel(model: IModel<T>): void {\n        var prefab = this.adapter.getPrefab(model.data)\n        if (!prefab) {\n            throw Error(\"预制体不能为空\")\n        }\n        var prefab = this.adapter.getPrefab(model.data)\n        if (!prefab) {\n            throw Error(\"预制体不能为空\")\n        }\n        if (prefab instanceof cc.Node) {\n            let transform = prefab\n            model.code = prefab.uuid\n            model.size = { x: transform.width, y: transform.height }\n            model.scale = { x: transform.scaleX, y: transform.scaleY }\n            model.anchorPoint = { x: transform.anchorX, y: transform.anchorY }\n        } else {\n            let transform = prefab.data\n            model.code = prefab.data.uuid\n            model.size = { x: transform.width, y: transform.height }\n            model.scale = { x: transform.scaleX, y: transform.scaleY }\n            model.anchorPoint = { x: transform.anchorX, y: transform.anchorY }\n        }\n        model.layoutSize = { x: 0, y: 0 }\n        model.position = { x: 0, y: 0 }\n        model.element = {\n            wrapBeforeMode: WrapMode.Wrap,\n            wrapAfterMode: WrapMode.Nowrap,\n            ignoreLayout: false,\n            placeholder: false,\n            minSize: { x: 0, y: 0 },\n            preferredSize: { x: 0, y: 0 },\n            flexibleSize: { x: 0, y: 0 },\n            layer: Layer.Lowest,\n            fixed: false,\n            fixedOffset: 0,\n            fixedSpacing: null,\n            update: () => { }\n        }\n        this.adapter.initElement(model.element, model.data)\n    }\n    private _copyModel(source: any, target: any) {\n        source.element.update = () => { }\n        const deep = (obj: any, cacheObj: any) => {\n            for (const key in obj) {\n                const value = obj[key]\n                if (key == \"data\") {\n                    cacheObj[key] = value\n                    continue\n                }\n                if (key == \"index\") continue\n                if (value != null && typeof value == \"object\") {\n                    cacheObj[key] = {}\n                    deep(value, cacheObj[key])\n                } else {\n                    cacheObj[key] = value\n                }\n            }\n        }\n        deep(source, target)\n        return target\n    }\n}\n\n"]}