{"version":3,"sources":["assets/script/framework/virtualList/VirtualLayout.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import VirtualItem from \"./VirtualItem\";\nimport VirtualList, { TemplateType } from \"./VirtualList\";\n\nconst { ccclass, property, disallowMultiple, menu } = cc._decorator;\n\n/**\n * 布局模式\n */\nenum LayoutType {\n    /** 横向 */\n    HORIZONTAL,\n    /** 纵向 */\n    VERTICAL,\n    /** 网格 */\n    GRID\n}\n\n/**\n * 布局轴向，只用于GRID布局。\n */\nenum AxisDirection {\n    HORIZONTAL,\n    VERTICAL\n}\n\n/**\n * 横向排列方向\n */\nenum HorizontalDirection {\n    LEFT_TO_RIGHT,\n    RIGHT_TO_LEFT\n}\n\n/**\n * 纵向排列方向\n */\nenum VerticalDirection {\n    TOP_TO_BOTTOM,\n    BOTTOM_TO_TOP\n}\n\n/**\n * 虚拟列表所需的布局组件\n */\n@ccclass\n@disallowMultiple\nexport default class VirtualLayout extends cc.Component {\n    @property({ type: cc.Enum(LayoutType), tooltip: CC_DEV && '布局模式' })\n    public Type: LayoutType = LayoutType.VERTICAL;\n\n    @property({\n        type: cc.Enum(AxisDirection),\n        tooltip: CC_DEV && 'GRID布局的起始轴方向\\nHORIZONTAL：固定宽度，动态改变高度\\nVERTICAL：固定高度，动态改变宽度',\n        visible() { return this.Type === LayoutType.GRID; }\n    })\n    public StartAxis: AxisDirection = AxisDirection.HORIZONTAL;\n\n    @property({ visible() { return this.Type === LayoutType.HORIZONTAL || this.Type === LayoutType.GRID; } })\n    public Left: number = 0;\n\n    @property({ visible() { return this.Type === LayoutType.HORIZONTAL || this.Type === LayoutType.GRID; } })\n    public Right: number = 0;\n\n    @property({ visible() { return this.Type === LayoutType.VERTICAL || this.Type === LayoutType.GRID; } })\n    public Top: number = 0;\n\n    @property({ visible() { return this.Type === LayoutType.VERTICAL || this.Type === LayoutType.GRID; } })\n    public Bottom: number = 0;\n\n    @property({ visible() { return this.Type === LayoutType.HORIZONTAL || this.Type === LayoutType.GRID; } })\n    public SpacingX: number = 0;\n\n    @property({ visible() { return this.Type === LayoutType.VERTICAL || this.Type === LayoutType.GRID; } })\n    public SpacingY: number = 0;\n\n    @property({\n        type: cc.Enum(VerticalDirection),\n        visible() { return this.Type === LayoutType.VERTICAL || this.Type === LayoutType.GRID; }\n    })\n    public VerticalDirection: VerticalDirection = VerticalDirection.TOP_TO_BOTTOM;\n\n    @property({\n        type: cc.Enum(HorizontalDirection),\n        visible() { return this.Type === LayoutType.HORIZONTAL || this.Type === LayoutType.GRID; }\n    })\n    public HorizontalDirection: HorizontalDirection = HorizontalDirection.LEFT_TO_RIGHT;\n\n    /** mask节点（content父节点） */\n    private _view: cc.Node = null;\n    /** view坐标系下view的边界矩形 */\n    private _viewEdge: cc.Rect = null;\n    /** 元素节点大小固定时的size */\n    private _fixedSize: cc.Size = null;\n    /** 标记当前帧是否需要更新content size */\n    private _sizeDirty: boolean = false;\n    /** 标记当前帧是否需要更新view区域数据显示 */\n    private _viewDirty: boolean = false;\n    /** main content激活状态的item */\n    private _items: cc.Node[] = [];\n    /** main content被回收的item池（不移出节点树，只设置active） */\n    private _itemPool: cc.Node[] = [];\n\n    /** others content激活状态的item，下标顺序与this.list.Others数组一致 */\n    private _otherItemsArr: cc.Node[][] = [];\n    /** others content被回收的item池（不移出节点树，只设置active），下标顺序与this.list.Others数组一致 */\n    private _otherItemPoolArr: cc.Node[][] = [];\n\n    /** 所属虚拟列表 */\n    public list: VirtualList = null;\n    /** 列表缓存的所有数据 */\n    public dataArr: any[][] = [];\n\n    public onInit() {\n        this._view = this.node.parent;\n        this._viewEdge = this.getNodeEdgeRect(this._view);\n\n        // 初始化分层相关数据\n        this._otherItemsArr = [];\n        this._otherItemPoolArr = [];\n        this.list.Others.forEach((e) => {\n            this._otherItemsArr.push([]);\n            this._otherItemPoolArr.push([]);\n        });\n\n        // 元素大小固定时初始化fixedSize\n        if (this.list.IsFixedSize && this._fixedSize === null) {\n            this.addItemNode(false);\n            this._fixedSize = this._itemPool[0].getContentSize();\n        }\n\n        // 注册事件\n        this.node.on(cc.Node.EventType.POSITION_CHANGED, this.onPositionChanged, this);\n    }\n\n    protected onDestroy() {\n        // 注销事件\n        this.node.off(cc.Node.EventType.POSITION_CHANGED, this.onPositionChanged, this);\n    }\n\n    protected lateUpdate() {\n        this.updateSize();\n        this.updateView();\n    }\n\n    /**\n     * 更新content size\n     */\n    private updateSize() {\n        if (!this._sizeDirty) {\n            return;\n        }\n        this._sizeDirty = false;\n\n        if (this.list.IsFixedSize) {\n            this.updateSizeFixed();\n        } else {\n            this.updateSizeUnfixed();\n        }\n    }\n\n    private updateSizeFixed() {\n        if (this.Type === LayoutType.VERTICAL) {\n            if (this.dataArr.length <= 0) {\n                this.node.height = 0;\n                return;\n            }\n\n            this.node.height = this.Top + this.Bottom + (this.dataArr.length - 1) * this.SpacingY + this._fixedSize.height * this.dataArr.length;\n        } else if (this.Type === LayoutType.HORIZONTAL) {\n            if (this.dataArr.length <= 0) {\n                this.node.width = 0;\n                return;\n            }\n\n            this.node.width = this.Left + this.Right + (this.dataArr.length - 1) * this.SpacingX + this._fixedSize.width * this.dataArr.length;\n        } else {\n            if (this.StartAxis === AxisDirection.HORIZONTAL) {\n                if (this.dataArr.length <= 0) {\n                    this.node.height = 0;\n                    return;\n                }\n\n                // 计算一行可以排列几个，至少1个\n                let num = Math.floor((this.node.width - this.Left - this.Right + this.SpacingX) / (this._fixedSize.width + this.SpacingX));\n                num = Math.max(num, 1);\n                // 计算可以排列几行\n                let row = Math.ceil(this.dataArr.length / num);\n                // 高度\n                this.node.height = this.Top + this.Bottom + (row - 1) * this.SpacingY + this._fixedSize.height * row;\n            } else {\n                if (this.dataArr.length <= 0) {\n                    this.node.width = 0;\n                    return;\n                }\n\n                // 计算一列可以排列几个，至少1个\n                let num = Math.floor((this.node.height - this.Top - this.Bottom + this.SpacingY) / (this._fixedSize.height + this.SpacingY));\n                num = Math.max(num, 1);\n                // 计算可以排列几列\n                let column = Math.ceil(this.dataArr.length / num);\n                // 宽度\n                this.node.width = this.Left + this.Right + (column - 1) * this.SpacingX + this._fixedSize.width * column;\n            }\n        }\n    }\n\n    private updateSizeUnfixed() {\n        // if (this.Type === LayoutType.VERTICAL) {\n        //   if (this._dataArr.length <= 0) {\n        //     this.node.height = 0;\n        //     return;\n        //   }\n\n        //   let height = this.Top + this.Bottom + (this._dataArr.length - 1) * this.SpacingY;\n        //   this._dataArr.forEach((e) => {\n        //     height += e.size.height;\n        //   });\n        //   this.node.height = height;\n        // } else if (this.Type === LayoutType.HORIZONTAL) {\n        //   if (this._dataArr.length <= 0) {\n        //     this.node.width = 0;\n        //     return;\n        //   }\n\n        //   let width = this.Left + this.Right + (this._dataArr.length - 1) * this.SpacingX;\n        //   this._dataArr.forEach((e) => {\n        //     width += e.size.width;\n        //   });\n        //   this.node.width = width;\n        // } else {\n\n        // }\n    }\n\n    /**\n     * 更新view区域数据显示\n     */\n    private updateView() {\n        if (!this._viewDirty || this.dataArr.length <= 0) {\n            return;\n        }\n        this._viewDirty = false;\n\n        if (this.list.IsFixedSize) {\n            this.updateViewFixed();\n        } else {\n            this.updateViewUnfixed();\n        }\n    }\n\n    private updateViewFixed() {\n        let viewResult = this.checkViewItem();\n        let inView = viewResult.inView;\n        let outView = viewResult.outView;\n        let contentEdge = this.getNodeEdgeRect(this.node);\n        let xMax: number, xMin: number, yMax: number, yMin: number;\n        if (this.Type === LayoutType.VERTICAL) {\n            for (let i = 0; i < this.dataArr.length; i++) {\n                if (this.VerticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\n                    yMax = contentEdge.yMax - (this.Top + i * this.SpacingY + this._fixedSize.height * i);\n                    yMin = yMax - this._fixedSize.height;\n                    if (yMax + this.node.y < this._viewEdge.yMin) {\n                        return;\n                    }\n                    if (yMin + this.node.y > this._viewEdge.yMax) {\n                        continue;\n                    }\n                } else {\n                    yMin = contentEdge.yMin + this.Bottom + i * this.SpacingY + this._fixedSize.height * i;\n                    yMax = yMin + this._fixedSize.height;\n                    if (yMin + this.node.y > this._viewEdge.yMax) {\n                        return;\n                    }\n                    if (yMax + this.node.y < this._viewEdge.yMin) {\n                        continue;\n                    }\n                }\n\n                // 判断显示区域内部是否有节点显示此条数据\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).DataIdx === i; });\n                if (found !== -1) {\n                    continue;\n                }\n\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\n                let itemIdx: number = outView.length === 0 ? this.addItemNode() : outView.shift();\n                let item: cc.Node = this._items[itemIdx];\n                this.setItem(cc.v3(0, yMin + item.anchorY * item.height), i, itemIdx);\n            }\n        } else if (this.Type === LayoutType.HORIZONTAL) {\n            for (let i = 0; i < this.dataArr.length; i++) {\n                if (this.HorizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\n                    xMax = contentEdge.xMax - (this.Right + i * this.SpacingX + this._fixedSize.width * i);\n                    xMin = xMax - this._fixedSize.width;\n                    if (xMax + this.node.x < this._viewEdge.xMin) {\n                        return;\n                    }\n                    if (xMin + this.node.x > this._viewEdge.xMax) {\n                        continue;\n                    }\n                } else {\n                    xMin = contentEdge.xMin + this.Left + i * this.SpacingX + this._fixedSize.width * i;\n                    xMax = xMin + this._fixedSize.width;\n                    if (xMin + this.node.x > this._viewEdge.xMax) {\n                        return;\n                    }\n                    if (xMax + this.node.x < this._viewEdge.xMin) {\n                        continue;\n                    }\n                }\n\n                // 判断显示区域内部是否有节点显示此条数据\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).DataIdx === i; });\n                if (found !== -1) {\n                    continue;\n                }\n\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\n                let itemIdx: number = outView.length === 0 ? this.addItemNode() : outView.shift();\n                let item: cc.Node = this._items[itemIdx];\n                this.setItem(cc.v3(xMin + item.anchorX * item.width, 0), i, itemIdx);\n            }\n        } else {\n            for (let i = 0; i < this.dataArr.length; i++) {\n                // 计算当前元素排在第几行第几列，从0开始\n                let rowIndex: number = 0;\n                let columnIndex: number = 0;\n                if (this.StartAxis === AxisDirection.HORIZONTAL) {\n                    let num = Math.floor((this.node.width - this.Left - this.Right + this.SpacingX) / (this._fixedSize.width + this.SpacingX));\n                    num = Math.max(num, 1);\n                    rowIndex = Math.floor(i / num);\n                    columnIndex = i % num;\n                    if (this.VerticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\n                        yMax = contentEdge.yMax - (this.Top + rowIndex * this.SpacingY + this._fixedSize.height * rowIndex);\n                        yMin = yMax - this._fixedSize.height;\n                        if (yMax + this.node.y < this._viewEdge.yMin) {\n                            return;\n                        }\n                        if (yMin + this.node.y > this._viewEdge.yMax) {\n                            continue;\n                        }\n                    } else {\n                        yMin = contentEdge.yMin + this.Bottom + rowIndex * this.SpacingY + this._fixedSize.height * rowIndex;\n                        yMax = yMin + this._fixedSize.height;\n                        if (yMin + this.node.y > this._viewEdge.yMax) {\n                            return;\n                        }\n                        if (yMax + this.node.y < this._viewEdge.yMin) {\n                            continue;\n                        }\n                    }\n                    if (this.HorizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\n                        xMax = contentEdge.xMax - (this.Right + columnIndex * this.SpacingX + this._fixedSize.width * columnIndex);\n                        xMin = xMax - this._fixedSize.width;\n                        if (xMax + this.node.x < this._viewEdge.xMin) {\n                            continue;\n                        }\n                        if (xMin + this.node.x > this._viewEdge.xMax) {\n                            continue;\n                        }\n                    } else {\n                        xMin = contentEdge.xMin + this.Left + columnIndex * this.SpacingX + this._fixedSize.width * columnIndex;\n                        xMax = xMin + this._fixedSize.width;\n                        if (xMin + this.node.x > this._viewEdge.xMax) {\n                            continue;\n                        }\n                        if (xMax + this.node.x < this._viewEdge.xMin) {\n                            continue;\n                        }\n                    }\n                } else {\n                    let num = Math.floor((this.node.height - this.Top - this.Bottom + this.SpacingY) / (this._fixedSize.height + this.SpacingY));\n                    num = Math.max(num, 1);\n                    rowIndex = i % num;\n                    columnIndex = Math.floor(i / num);\n                    if (this.HorizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\n                        xMax = contentEdge.xMax - (this.Right + columnIndex * this.SpacingX + this._fixedSize.width * columnIndex);\n                        xMin = xMax - this._fixedSize.width;\n                        if (xMax + this.node.x < this._viewEdge.xMin) {\n                            return;\n                        }\n                        if (xMin + this.node.x > this._viewEdge.xMax) {\n                            continue;\n                        }\n                    } else {\n                        xMin = contentEdge.xMin + this.Left + columnIndex * this.SpacingX + this._fixedSize.width * columnIndex;\n                        xMax = xMin + this._fixedSize.width;\n                        if (xMin + this.node.x > this._viewEdge.xMax) {\n                            return;\n                        }\n                        if (xMax + this.node.x < this._viewEdge.xMin) {\n                            continue;\n                        }\n                    }\n                    if (this.VerticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\n                        yMax = contentEdge.yMax - (this.Top + rowIndex * this.SpacingY + this._fixedSize.height * rowIndex);\n                        yMin = yMax - this._fixedSize.height;\n                        if (yMax + this.node.y < this._viewEdge.yMin) {\n                            continue;\n                        }\n                        if (yMin + this.node.y > this._viewEdge.yMax) {\n                            continue;\n                        }\n                    } else {\n                        yMin = contentEdge.yMin + this.Bottom + rowIndex * this.SpacingY + this._fixedSize.height * rowIndex;\n                        yMax = yMin + this._fixedSize.height;\n                        if (yMin + this.node.y > this._viewEdge.yMax) {\n                            continue;\n                        }\n                        if (yMax + this.node.y < this._viewEdge.yMin) {\n                            continue;\n                        }\n                    }\n                }\n\n                // 判断显示区域内部是否有节点显示此条数据\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).DataIdx === i; });\n                if (found !== -1) {\n                    continue;\n                }\n\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\n                let itemIdx: number = outView.length === 0 ? this.addItemNode() : outView.shift();\n                let item: cc.Node = this._items[itemIdx];\n                this.setItem(cc.v3(xMin + item.anchorX * item.width, yMin + item.anchorY * item.height), i, itemIdx);\n            }\n        }\n    }\n\n    private updateViewUnfixed() {\n\n    }\n\n    /**\n     * 区分在view内部与外部的items数组下标\n     */\n    private checkViewItem(): { inView: number[], outView: number[] } {\n        return this.list.IsFixedSize ? this.checkViewItemFixed() : this.checkViewItemUnfixed();\n    }\n\n    private checkViewItemFixed(): { inView: number[], outView: number[] } {\n        // 显示区域内部的下标\n        let inView: number[] = [];\n        // 显示区域外部的下标\n        let outView: number[] = [];\n\n        if (this.Type === LayoutType.VERTICAL) {\n            for (let i = 0; i < this._items.length; i++) {\n                let item = this._items[i];\n                let box = item.getBoundingBox();\n                if (box.yMin + this.node.y <= this._viewEdge.yMax && box.yMax + this.node.y >= this._viewEdge.yMin) {\n                    inView.push(i);\n                } else {\n                    outView.push(i);\n                }\n            }\n        } else if (this.Type === LayoutType.HORIZONTAL) {\n            for (let i = 0; i < this._items.length; i++) {\n                let item = this._items[i];\n                let box = item.getBoundingBox();\n                if (box.xMin + this.node.x <= this._viewEdge.xMax && box.xMax + this.node.x >= this._viewEdge.xMin) {\n                    inView.push(i);\n                } else {\n                    outView.push(i);\n                }\n            }\n        } else {\n            for (let i = 0; i < this._items.length; i++) {\n                let item = this._items[i];\n                let box = item.getBoundingBox();\n                if (box.xMin + this.node.x <= this._viewEdge.xMax && box.xMax + this.node.x >= this._viewEdge.xMin\n                    && box.yMin + this.node.y <= this._viewEdge.yMax && box.yMax + this.node.y >= this._viewEdge.yMin) {\n                    inView.push(i);\n                } else {\n                    outView.push(i);\n                }\n            }\n        }\n\n        return { inView: inView, outView: outView };\n    }\n\n    private checkViewItemUnfixed(): { inView: number[], outView: number[] } {\n        // 显示区域内部的下标\n        let inView: number[] = [];\n        // 显示区域外部的下标\n        let outView: number[] = [];\n\n        return { inView: inView, outView: outView };\n    }\n\n    /**\n     * 设置item数据与坐标\n     * @param p 节点坐标\n     * @param dataIdx this._dataArr的下标 \n     * @param itemIdx this._items的下标\n     */\n    private setItem(p: cc.Vec3, dataIdx: number, itemIdx: number) {\n        let item = this._items[itemIdx];\n        item.position = p;\n        let vi = item.getComponent(VirtualItem);\n        vi.DataIdx = dataIdx;\n        vi.onInitItem(...this.dataArr[dataIdx]);\n\n        if (this.list.Others.length > 0) {\n            let nodes: cc.Node[] = [];\n            this._otherItemsArr.forEach((e) => {\n                e[itemIdx].position = p;\n                nodes.push(e[itemIdx]);\n            });\n            vi.setOtherNode(...nodes);\n        }\n    }\n\n    /**\n     * 激活新的节点，并添加到content下\n     * @param active 默认为true，false时不激活节点并添加进节点池中(仅在onInit中使用)\n     * @returns 激活的节点在this._items中的下标\n     */\n    private addItemNode(active: boolean = true): number {\n        let node: cc.Node = null;\n        if (this._itemPool.length > 0) {\n            node = this._itemPool.pop();\n            node.active = true;\n            this._items.push(node);\n\n            this._otherItemPoolArr.forEach((e, i) => {\n                let otherNode = e.pop();\n                otherNode.active = true;\n                this._otherItemsArr[i].push(otherNode);\n            });\n        } else {\n            let tmp: any = this.list.Main.TemplateType === TemplateType.PREFAB ? this.list.Main.TemplatePrefab : this.list.Main.TemplateNode;\n            node = cc.instantiate(tmp) as cc.Node;\n            node.getComponent(VirtualItem) || node.addComponent(VirtualItem);\n            this.node.addChild(node);\n            if (active) {\n                node.active = true;\n                this._items.push(node);\n            } else {\n                node.active = false;\n                this.putItemNode(node);\n            }\n\n            this.list.Others.forEach((e, i) => {\n                let otherTmp: any = e.TemplateType === TemplateType.PREFAB ? e.TemplatePrefab : e.TemplateNode;\n                let otherNode = cc.instantiate(otherTmp) as cc.Node;\n                e.Content.addChild(otherNode);\n                if (active) {\n                    otherNode.active = true;\n                    this._otherItemsArr[i].push(otherNode);\n                } else {\n                    otherNode.active = false;\n                    this.putItemNode(otherNode, true, i);\n                }\n            });\n        }\n\n        return this._items.length - 1;\n    }\n\n    /**\n     * 回收item节点\n     * @param node \n     * @param isOther 是否为Others下的节点\n     * @param otherIdx Others的下标\n     */\n    private putItemNode(node: cc.Node, isOther: boolean = false, otherIdx: number = 0) {\n        node.active = false;\n        if (isOther) {\n            this._otherItemPoolArr[otherIdx].push(node);\n        } else {\n            let vi = node.getComponent(VirtualItem);\n            vi.onReset();\n            this._itemPool.push(node);\n        }\n    }\n\n    /**\n     * 子节点坐标系下坐标转换为父节点坐标系下坐标\n     */\n    private convertToParentPos(pos: cc.Vec3, child: cc.Node) {\n        return pos.add(child.position);\n    }\n\n    /**\n     * 父节点坐标系下坐标转换为子节点坐标系下坐标\n     */\n    private convertToChildPos(pos: cc.Vec3, child: cc.Node) {\n        return pos.sub(child.position);\n    }\n\n    /**\n     * 获取节点自身坐标系下的节点边界矩形\n     */\n    private getNodeEdgeRect(node: cc.Node): cc.Rect {\n        return cc.rect(-node.width * node.anchorX, -node.height * node.anchorY, node.width, node.height);\n    }\n\n    /**\n     * content位移监听回调\n     */\n    private onPositionChanged() {\n        this._viewDirty = true;\n\n        this.list.Others.forEach((e) => {\n            e.Content.position = this.node.position;\n        });\n    }\n\n    /**\n     * 清空节点重新排列\n     */\n    private clearAllItem() {\n        this._items.forEach((e, i) => {\n            this.putItemNode(e);\n\n            this._otherItemsArr.forEach((arr, otherIdx) => {\n                this.putItemNode(arr[i], true, otherIdx);\n            });\n        });\n        this._items.length = 0;\n\n        this._otherItemsArr.forEach((arr) => {\n            arr.length = 0;\n        });\n    }\n\n    /**\n     * 获取content相对view左上角原点位置的偏移值\n     * @param idx 元素下标\n     * @param itemAnchor 元素的锚点位置（左下角为0点）\n     * @param viewAnchor view的锚点位置（左下角为0点）\n     */\n    public getScrollOffset(idx: number, itemAnchor: cc.Vec2, viewAnchor: cc.Vec2): cc.Vec2 {\n        idx = Math.min(idx, this.dataArr.length - 1);\n        return this.list.IsFixedSize ? this.getScrollOffsetFixed(idx, itemAnchor, viewAnchor) : this.getScrollOffsetUnfixed(idx, itemAnchor, viewAnchor);\n    }\n\n    private getScrollOffsetFixed(idx: number, itemAnchor: cc.Vec2, viewAnchor: cc.Vec2): cc.Vec2 {\n        let contentEdge = this.getNodeEdgeRect(this.node);\n        let xMax: number, xMin: number, yMax: number, yMin: number;\n        if (this.Type === LayoutType.VERTICAL) {\n            if (this.VerticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\n                yMax = contentEdge.yMax - (this.Top + idx * this.SpacingY + this._fixedSize.height * idx);\n                yMin = yMax - this._fixedSize.height;\n            } else {\n                yMin = contentEdge.yMin + this.Bottom + idx * this.SpacingY + this._fixedSize.height * idx;\n                yMax = yMin + this._fixedSize.height;\n            }\n            let x = this._viewEdge.xMin - (contentEdge.xMin + this.node.x);\n            let y = contentEdge.yMax - (this._fixedSize.height * itemAnchor.y + yMin) - (1 - viewAnchor.y) * this._viewEdge.height;\n            return cc.v2(x, y);\n        } else if (this.Type === LayoutType.HORIZONTAL) {\n            if (this.HorizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\n                xMax = contentEdge.xMax - (this.Right + idx * this.SpacingX + this._fixedSize.width * idx);\n                xMin = xMax - this._fixedSize.width;\n            } else {\n                xMin = contentEdge.xMin + this.Left + idx * this.SpacingX + this._fixedSize.width * idx;\n                xMax = xMin + this._fixedSize.width;\n            }\n            let x = this._fixedSize.width * itemAnchor.x + xMin - contentEdge.xMin - viewAnchor.x * this._viewEdge.width;\n            let y = contentEdge.yMax - (this._viewEdge.yMax - this.node.y);\n            return cc.v2(x, y);\n        } else {\n            // 计算当前元素排在第几行第几列，从0开始\n            let rowIndex: number = 0;\n            let columnIndex: number = 0;\n            if (this.StartAxis === AxisDirection.HORIZONTAL) {\n                let num = Math.floor((this.node.width - this.Left - this.Right + this.SpacingX) / (this._fixedSize.width + this.SpacingX));\n                num = Math.max(num, 1);\n                rowIndex = Math.floor(idx / num);\n                columnIndex = idx % num;\n            } else {\n                let num = Math.floor((this.node.height - this.Top - this.Bottom + this.SpacingY) / (this._fixedSize.height + this.SpacingY));\n                num = Math.max(num, 1);\n                rowIndex = idx % num;\n                columnIndex = Math.floor(idx / num);\n            }\n\n            if (this.VerticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\n                yMax = contentEdge.yMax - (this.Top + rowIndex * this.SpacingY + this._fixedSize.height * rowIndex);\n                yMin = yMax - this._fixedSize.height;\n            } else {\n                yMin = contentEdge.yMin + this.Bottom + rowIndex * this.SpacingY + this._fixedSize.height * rowIndex;\n                yMax = yMin + this._fixedSize.height;\n            }\n\n            if (this.HorizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\n                xMax = contentEdge.xMax - (this.Right + columnIndex * this.SpacingX + this._fixedSize.width * columnIndex);\n                xMin = xMax - this._fixedSize.width;\n            } else {\n                xMin = contentEdge.xMin + this.Left + columnIndex * this.SpacingX + this._fixedSize.width * columnIndex;\n                xMax = xMin + this._fixedSize.width;\n            }\n            let x = this._fixedSize.width * itemAnchor.x + xMin - contentEdge.xMin - viewAnchor.x * this._viewEdge.width;\n            let y = contentEdge.yMax - (this._fixedSize.height * itemAnchor.y + yMin) - (1 - viewAnchor.y) * this._viewEdge.height;\n            return cc.v2(x, y);\n        }\n    }\n\n    private getScrollOffsetUnfixed(idx: number, itemAnchor: cc.Vec2, viewAnchor: cc.Vec2): cc.Vec2 {\n        return null;\n    }\n\n    public reset(index: number, ...args: any[]) {\n        if (index >= 0 && index < this.dataArr.length) {\n            this.dataArr[index] = args;\n            this.clearAllItem();\n            this._sizeDirty = true;\n            this._viewDirty = true;\n        }\n    }\n\n    public push(...args: any[]) {\n        this.dataArr.push(args);\n        this._sizeDirty = true;\n        this._viewDirty = true;\n    }\n\n    public pop() {\n        this.dataArr.pop();\n        this.clearAllItem();\n        this._sizeDirty = true;\n        this._viewDirty = true;\n    }\n\n    public clearAll() {\n        this.dataArr = [];\n        this.clearAllItem();\n        this._sizeDirty = true;\n        this._viewDirty = true;\n    }\n\n    public unshift(...args: any[]) {\n        this.dataArr.unshift(args);\n        this.clearAllItem();\n        this._sizeDirty = true;\n        this._viewDirty = true;\n    }\n\n    public shift() {\n        this.dataArr.shift();\n        this.clearAllItem();\n        this._sizeDirty = true;\n        this._viewDirty = true;\n    }\n\n    public splice(start: number, deleteCount?: number, ...argsArr: any[][]) {\n        if (deleteCount === undefined) {\n            this.dataArr.splice(start);\n        } else {\n            if (argsArr === undefined || argsArr.length === 0) {\n                this.dataArr.splice(start, deleteCount);\n            } else {\n                this.dataArr.splice(start, deleteCount, ...argsArr);\n            }\n        }\n\n        this.clearAllItem();\n        this._sizeDirty = true;\n        this._viewDirty = true;\n    }\n\n    public sort(call: (a: any[], b: any[]) => number) {\n        this.dataArr.sort(call);\n\n        this.clearAllItem();\n        this._sizeDirty = true;\n        this._viewDirty = true;\n    }\n}\n"]}