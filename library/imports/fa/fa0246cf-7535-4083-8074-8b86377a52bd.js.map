{"version":3,"sources":["assets/script/framework/adapter/help/helper.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ILike } from \"../define/interface\"\n\nexport class Helper {\n    static readonly Epsilon = 1.401298E-45\n    static readonly Infinity = 1 / 0\n    static smoothStep(from: number, to: number, t: number) {\n        t = this.clamp01(t)\n        t = -2 * t * t * t + 3 * t * t\n        return to * t + from * (1 - t)\n    }\n    static smoothDamp(current: number, target: number, currentVelocity: number, smoothTime: number, maxSpeed: number, deltaTime: number): { velocity: number, position: number } {\n        smoothTime = Math.max(0.0001, smoothTime)\n        var num = 2 / smoothTime\n        var num2 = num * deltaTime\n        var num3 = 1 / (1 + num2 + 0.48 * num2 * num2 + 0.235 * num2 * num2 * num2)\n        var value = current - target\n        var num4 = target\n        var num5 = maxSpeed * smoothTime\n        value = this.clamp(value, 0 - num5, num5)\n        target = current - value\n        var num6 = (currentVelocity + num * value) * deltaTime\n        currentVelocity = (currentVelocity - num * num6) * num3\n        var num7 = target + (value + num6) * num3\n        if (num4 - current > 0 == num7 > num4) {\n            num7 = num4\n            currentVelocity = (num7 - num4) / deltaTime\n        }\n        return { velocity: currentVelocity, position: num7 }\n    }\n    static clamp01(value: number) {\n        return this.clamp(value, 0, 1)\n    }\n    static clamp(num, min = 0, max = 1) {\n        return Math.min(Math.max(num, min), max)\n    }\n    static sign(f) {\n        return (f >= 0) ? 1 : (-1)\n    }\n    static lerp(a: number, b: number, t: number) {\n        return a + (b - a) * this.clamp01(t)\n    }\n    static approximately(a: number, b: number) {\n        return Math.abs(b - a) < Math.max(100E-6 * Math.max(Math.abs(a), Math.abs(b)), this.Epsilon * 8)\n    }\n    static round(value, n) {\n        return Math.round(value * Math.pow(10, n)) / Math.pow(10, n)\n    }\n    static pingpang(v: number) {\n        var value = v\n        value = Math.abs(v)\n        var integer = Math.trunc(value)\n        if (integer % 2 == 0) {\n            value = value - integer\n        } else {\n            value = (1 - (value - integer))\n        }\n        return value\n    }\n    static isNumber(value: any) {\n        return typeof value == \"number\" && !isNaN(value)\n    }\n    static progress(start: number, end: number, current: number, t: number) {\n        return current = start + (end - start) * t\n    }\n    static sizeToVec(size: cc.Size): ILike {\n        if (!size) return { x: 0, y: 0 }\n        return { x: size.width, y: size.height }\n    }\n}"]}