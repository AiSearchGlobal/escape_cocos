{"version":3,"sources":["assets/script/framework/lib/SingletonFactory.ts"],"names":[],"mappings":";;;;;;;AACA;;GAEG;AACH;IAAA;IAYA,CAAC;IARiB,4BAAW,GAAzB,UAA6B,CAAe;QACxC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACpC,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;YAClB,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACvC,OAAO,GAAG,CAAC;SACd;QACD,OAAU,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IATc,0BAAS,GAA2B,IAAI,GAAG,EAAqB,CAAC;IAUpF,uBAAC;CAZD,AAYC,IAAA;AAZY,4CAAgB","file":"","sourceRoot":"/","sourcesContent":["\n/**\n * 单例工厂\n */\nexport class SingletonFactory {\n\n    private static instances: Map<{ new() }, Object> = new Map<{ new() }, Object>();\n\n    public static getInstance<T>(c: { new(): T }): T {\n        if (!SingletonFactory.instances.has(c)) {\n            let obj = new c();\n            SingletonFactory.instances.set(c, obj);\n            return obj;\n        }\n        return <T>SingletonFactory.instances.get(c);\n    }\n}"]}