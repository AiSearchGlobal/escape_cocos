{"version":3,"sources":["assets/script/network/Websocket.ts"],"names":[],"mappings":";;;;;;;AACA,oCAAkC;AAUlC;IAYI,mBAAY,EAOX;YANG,GAAG,SAAA,EACH,mBAAmB,EAAnB,WAAW,mBAAG,KAAK,KAAA,EACnB,mBAAmB,EAAnB,WAAW,mBAAG,KAAK,KAAA,EACnB,wBAAuB,EAAvB,gBAAgB,mBAAG,IAAI,KAAA,EACvB,eAAqB,EAArB,OAAO,mBAAG,WAAW,KAAA,EACrB,mBAAkB,EAAlB,WAAW,mBAAG,IAAI,KAAA;QAhBf,OAAE,GAAG,IAAI,CAAC,CAAA,aAAa;QACvB,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAY,KAAK,CAAC;QACjC,mBAAc,GAAQ,CAAC,CAAC,CAAC;QACzB,SAAI,GAAY,EAAE,CAAC,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC;QAGrD,gBAAW,GAAY,KAAK,CAAC;QAC7B,WAAM,GAAY,KAAK,CAAC;QAyBhC,YAAO,GAAG,cAAO,CAAC,CAAC;QACnB,YAAO,GAAG,cAAO,CAAC,CAAC;QACnB,WAAM,GAAG,cAAO,CAAC,CAAC;QAClB,cAAS,GAAG,cAAO,CAAC,CAAC;QACrB,gBAAW,GAAG,cAAO,CAAC,CAAC;QA6BvB,oBAAe,GAAG;YACd,IAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAC;gBAC7C,OAAM;aACT;YACD,IAAI;gBACA,IAAG,IAAI,CAAC,IAAI,EAAC;oBACT,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC;wBACvB,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG;wBAClB,OAAO,EAAE;4BACL,SAAG,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;wBACzC,CAAC;wBACD,IAAI,EAAE;4BACF,SAAG,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;wBACtC,CAAC;qBACJ,CAAC,CAAC;iBACN;qBAAI;oBACD,2DAA2D;oBAC3D,IAAI,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;iBAC9C;gBACD,IAAI,CAAC,eAAe,EAAE,CAAC;aAC1B;YAAC,OAAO,CAAC,EAAE;gBACR,SAAG,CAAC,GAAG,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAA;gBACnC,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,MAAM,CAAC,CAAC;aACX;QACL,CAAC,CAAC;QAEF,oBAAe,GAAG;YAAA,iBAgEjB;YA/DG,IAAG,IAAI,CAAC,IAAI,EAAC;gBACT,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC;oBACZ,SAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;oBAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,IAAI,CAAC,SAAS,EAAE,CAAC;gBACrB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;gBAEb,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,UAAS,GAAG;oBACxB,SAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;oBAClC,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,IAAI,CAAC,SAAS,EAAE,CAAC;gBACrB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;gBAEb,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC;oBACX,SAAG,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAC5B,IAAG,CAAC,IAAI,CAAC,WAAW,EAAC;wBACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;wBAC3D,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;qBAC9D;oBACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChB,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,QAAQ;oBACR,IAAI,CAAC,UAAU,EAAE,CAAC;gBACtB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;gBAEb,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,UAAS,KAAK;oBAC5B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBACtB,gBAAgB;oBAChB,mBAAmB;oBACnB,IAAI,CAAC,UAAU,EAAE,CAAC;gBACtB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;aAChB;iBAAI;gBACD,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG;oBACd,SAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;oBAC7B,KAAI,CAAC,OAAO,EAAE,CAAC;oBACf,KAAI,CAAC,SAAS,EAAE,CAAC;gBAErB,CAAC,CAAC;gBACF,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,UAAC,GAAG;oBAClB,SAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;oBAClC,KAAI,CAAC,OAAO,EAAE,CAAC;oBACf,KAAI,CAAC,SAAS,EAAE,CAAC;gBACrB,CAAC,CAAC;gBACF,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG;oBACb,SAAG,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAC5B,IAAG,CAAC,KAAI,CAAC,WAAW,EAAC;wBACjB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,KAAI,CAAC,eAAe,EAAE,KAAI,CAAC,CAAC;wBAC3D,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,KAAI,CAAC,eAAe,EAAE,KAAI,CAAC,CAAC;qBAC9D;oBACD,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChB,KAAI,CAAC,MAAM,EAAE,CAAC;oBACd,QAAQ;oBACR,KAAI,CAAC,UAAU,EAAE,CAAC;gBACtB,CAAC,CAAC;gBACF,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,UAAC,KAAK;oBACtB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBACtB,gBAAgB;oBAChB,mBAAmB;oBACnB,qBAAqB;gBACzB,CAAC,CAAC;aACL;QACL,CAAC,CAAC;QAEF,cAAS,GAAG;YAAA,iBAgBX;YAfG,IAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAC;gBAC7C,SAAG,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;gBACjC,OAAM;aACT;YAED,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,GAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO,CAAA,yBAAyB;YACpG,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe;gBAAE,OAAO;YACtD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA,6BAA6B;YAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,sBAAsB;YACtB,UAAU,CAAC;gBACP,KAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC/B,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACnC,CAAC,CAAC;QAEF,SAAI,GAAG,UAAS,GAAG;YACf,IAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAC;gBAC7C,IAAG,IAAI,CAAC,IAAI,EAAC;oBACT,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;wBACT,IAAI,EAAE,GAAG;wBACT,OAAO,EAAE;wBACT,CAAC;qBACJ,CAAC,CAAC;iBACN;qBAAI;oBACD,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB;aACJ;iBAAI;gBACD,SAAG,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAA;aACvC;QACL,CAAC,CAAC;QAEF,MAAM;QACN,eAAU,GAAG;YACT,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC,CAAC;QAEF,eAAU,GAAG;YAAA,iBAcZ;YAbG,IAAG,IAAI,CAAC,eAAe;gBAAE,OAAO,CAAA,aAAa;YAC7C,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;gBAC5B,0BAA0B;gBAC1B,yBAAyB;gBACzB,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChC,wBAAwB;gBACxB,KAAI,CAAC,aAAa,GAAG,UAAU,CAAC;oBAC5B,0EAA0E;oBAC1E,KAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;oBAEhB,KAAI,CAAC,WAAW,EAAE,CAAC;gBACvB,CAAC,EAAE,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9B,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,CAAC,CAAC;QAEF,eAAU,GAAG;YACT,oCAAoC;YACpC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACrC,CAAC,CAAC;QAEF,UAAK,GAAG;YACJ,eAAe;YACf,SAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;QACpB,CAAC,CAAC;QAhNE,IAAI,CAAC,IAAI,GAAE;YACP,GAAG,EAAE,GAAG;YACR,WAAW,EAAE,WAAW;YACxB,WAAW,EAAE,WAAW;YACxB,gBAAgB,EAAE,gBAAgB;YAClC,OAAO,EAAE,OAAO;YAChB,WAAW,EAAE,WAAW;SAC3B,CAAC;QACF,oDAAoD;QACpD,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAQD,mCAAe,GAAf;QAAA,iBAiBC;QAhBG,SAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAErB,IAAG,CAAC,IAAI,CAAC,MAAM,EAAC;YACZ,OAAM;SACT;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7B,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC,EAAE;YAC3B,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YAC7B,KAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAED,mCAAe,GAAf;QACI,SAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAmKL,gBAAC;AAAD,CArOA,AAqOC,IAAA;AArOY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["import GameDataCenter from \"../userData/GameDataCenter\"\nimport { Log } from \"../utils/Log\"\n\nexport interface OPTS {\n    url: string                         //websocket服务端接口地址\n    pingTimeout?: number                //每隔15秒发送一次心跳，如果收到任何后端消息定时器将会重置\n    pongTimeout?: number                //ping消息发送之后，10秒内没收到后端消息便会认为连接断开\n    reconnectTimeout?: number           //尝试重连的间隔时间\n    pingMsg?: string                    //ping消息值\n    repeatLimit?: number | null         //重连尝试次数。默认不限制\n}\nexport class Websocket {\n    public opts: OPTS\n    public ws = null;//websocket实例\n    public repeat = 0;\n    public forbidReconnect: boolean = false;\n    public forgroundCount: any = -1;\n    public isWx: boolean = cc.sys.platform == cc.sys.WECHAT_GAME;\n\n    private pemUrl;\n    private hasAddEvent: boolean = false;\n    private isHide: boolean = false;\n    \n    constructor({\n        url, \n        pingTimeout = 15000,\n        pongTimeout = 10000,\n        reconnectTimeout = 2000,\n        pingMsg = 'heartbeat',\n        repeatLimit = null\n    }){\n        this.opts ={\n            url: url,\n            pingTimeout: pingTimeout,\n            pongTimeout: pongTimeout,\n            reconnectTimeout: reconnectTimeout,\n            pingMsg: pingMsg,\n            repeatLimit: repeatLimit\n        };\n        // this.pemUrl = cc.url.raw(\"resources/cacert1.cer\")\n        this.createWebSocket();\n\n        cc.game.off(cc.game.EVENT_SHOW);\n        cc.game.off(cc.game.EVENT_HIDE);\n    }\n\n    onclose = () => {};\n    onerror = () => {};\n    onopen = () => {};\n    onmessage = () => {};\n    onreconnect = () => {};\n\n    applocationShow(){\n        Log.log(\"game show\");\n\n        if(!this.isHide){\n            return\n        }\n\n        this.isHide = false;\n\n        this.forbidReconnect = false;\n\n        if (this.forgroundCount != -1) {\n            clearTimeout(this.forgroundCount);\n        }\n        this.forgroundCount = setTimeout(() => {\n            this.createWebSocket();\n        }, 500);\n    }\n\n    applocationHide(){\n        Log.log(\"game hide\");\n\n        this.isHide = true;\n\n        this.close();\n    }\n\n    createWebSocket = function(){\n        if(this.ws && this.ws.readyState == this.ws.OPEN){\n            return\n        }\n        try {\n            if(this.isWx){\n                this.ws = wx.connectSocket({\n                    url: this.opts.url,\n                    success: function () {\n                        Log.log(\"wx connect socket success\");\n                    },\n                    fail: function () {\n                        Log.log(\"wx connect socket fail\");\n                    },\n                });\n            }else{\n                // this.ws = new WebSocket(this.opts.url, [], this.pemUrl);\n                this.ws = new WebSocket(this.opts.url, []);\n            }\n            this.initEventHandle();\n        } catch (e) {\n            Log.log(\"createWebSocket error\", e)\n            this.reconnect();\n            throw e;\n        }     \n    };\n    \n    initEventHandle = function(){\n        if(this.isWx){\n            this.ws.onClose(function(){\n                Log.log(\"wx --> onClose...\");\n                this.onclose();\n                this.reconnect();\n            }.bind(this))\n\n            this.ws.onError(function(err){\n                Log.log(\"wx --> onError...\", err);\n                this.onerror();\n                this.reconnect();\n            }.bind(this))\n            \n            this.ws.onOpen(function(){\n                Log.log(\"wx --> onOpen...\");\n                if(!this.hasAddEvent){\n                    this.hasAddEvent = true;\n                    cc.game.on(cc.game.EVENT_SHOW, this.applocationShow, this);\n                    cc.game.on(cc.game.EVENT_HIDE, this.applocationHide, this);\n                }\n                this.repeat = 0;\n                this.onopen();\n                //心跳检测重置\n                this.heartCheck();\n            }.bind(this))\n           \n            this.ws.onMessage(function(event){\n                this.onmessage(event);\n                //如果获取到消息，心跳检测重置\n                //拿到任何消息都说明当前连接是正常的\n                this.heartCheck();\n            }.bind(this))\n        }else{\n            this.ws.onclose = () => {\n                Log.log(\"ws --> onclose...\");\n                this.onclose();\n                this.reconnect();\n\n            };\n            this.ws.onerror = (err) => {\n                Log.log(\"ws --> onerror...\", err);\n                this.onerror();\n                this.reconnect();\n            };\n            this.ws.onopen = () => {\n                Log.log(\"ws --> onopen...\");\n                if(!this.hasAddEvent){\n                    this.hasAddEvent = true;\n                    cc.game.on(cc.game.EVENT_SHOW, this.applocationShow, this);\n                    cc.game.on(cc.game.EVENT_HIDE, this.applocationHide, this);\n                }\n                this.repeat = 0;\n                this.onopen();\n                //心跳检测重置\n                this.heartCheck();\n            };\n            this.ws.onmessage = (event) => {\n                this.onmessage(event);\n                //如果获取到消息，心跳检测重置\n                //拿到任何消息都说明当前连接是正常的\n                // this.heartCheck();\n            };\n        }\n    };\n    \n    reconnect = function(){\n        if(this.ws && this.ws.readyState == this.ws.OPEN){\n            Log.log(\"reconnect--------重复连接\");\n            return\n        }\n\n        if(this.opts.repeatLimit>0 && this.opts.repeatLimit <= this.repeat) return;//limit repeat the number\n        if(this.lockReconnect || this.forbidReconnect) return;\n        this.lockReconnect = true;\n        this.repeat++;//必须在lockReconnect之后，避免进行无效计数\n        this.onreconnect();\n        //没连接上会一直重连，设置延迟避免请求过多\n        setTimeout(() => {\n            this.createWebSocket();\n            this.lockReconnect = false;\n        }, this.opts.reconnectTimeout);\n    };\n    \n    send = function(msg){\n        if(this.ws && this.ws.readyState == this.ws.OPEN){\n            if(this.isWx){\n                this.ws.send({\n                    data: msg,\n                    success: function(){\n                    }\n                });\n            }else{\n                this.ws.send(msg);\n            }\n        }else{\n            Log.log(\"发送失败:\",JSON.stringify(msg))\n        }\n    };\n\n    //心跳检测\n    heartCheck = function(){\n        this.heartReset();\n        this.heartStart();\n    };\n\n    heartStart = function(){\n        if(this.forbidReconnect) return;//不再重连就不再执行心跳\n        this.pingTimeoutId = setTimeout(() => {\n            //这里发送一个心跳，后端收到后，返回一个心跳消息，\n            //onmessage拿到返回的心跳就说明连接正常\n            this.ws.send(this.opts.pingMsg);\n            //如果超过一定时间还没重置，说明后端主动断开了\n            this.pongTimeoutId = setTimeout(() => {\n                //如果onclose会执行reconnect，我们执行ws.close()就行了.如果直接执行reconnect 会触发onclose导致重连两次\n                this.ws.close();\n\n                this.onreconnect();\n            }, this.opts.pongTimeout);\n        }, this.opts.pingTimeout);\n    };\n\n    heartReset = function(){\n        // clearTimeout(this.pingTimeoutId);\n        clearTimeout(this.pongTimeoutId);\n    };\n\n    close = function(){\n        //如果手动关闭连接，不再重连\n        Log.log(\"主动断开 ws\")\n        this.forbidReconnect = true;\n        this.heartReset();\n        this.ws.close();\n    };\n}"]}