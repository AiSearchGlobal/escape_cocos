{"version":3,"sources":["assets/script/framework/lib/Qrcode.ts"],"names":[],"mappings":"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,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QACzB,CAAC,CAAC,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AAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAEvB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAEvB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAEvB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAEvB,KAAK;QACL,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,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","file":"","sourceRoot":"/","sourcesContent":["export class QRCode {\n\tpublic typeNumber: any;\n\tpublic errorCorrectLevel: any;\n\tpublic modules: any;\n\tpublic moduleCount: any;\n\tpublic dataCache: any;\n\tpublic dataList: any;\n\tpublic static PAD0 = 0xEC;\n\tpublic static PAD1 = 0x11;\n\n\tconstructor(typeNumber, errorCorrectLevel) {\n\t\tthis.typeNumber = typeNumber;\n\t\tthis.errorCorrectLevel = errorCorrectLevel;\n\t\tthis.modules = null;\n\t\tthis.moduleCount = 0;\n\t\tthis.dataCache = null;\n\t\tthis.dataList = new Array();\n\t}\n\n\tpublic static createData(typeNumber, errorCorrectLevel, dataList) {\n\n\t\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\n\t\tvar buffer = new QRBitBuffer();\n\n\t\tfor (var i = 0; i < dataList.length; i++) {\n\t\t\tvar data = dataList[i];\n\t\t\tbuffer.put(data.mode, 4);\n\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n\t\t\tdata.write(buffer);\n\t\t}\n\n\t\t// calc num max data.\n\t\tvar totalDataCount = 0;\n\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t}\n\n\t\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\t\tthrow new Error(\"code length overflow. (\"\n\t\t\t\t+ buffer.getLengthInBits()\n\t\t\t\t+ \">\"\n\t\t\t\t+ totalDataCount * 8\n\t\t\t\t+ \")\");\n\t\t}\n\n\t\t// end code\n\t\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\t\tbuffer.put(0, 4);\n\t\t}\n\n\t\t// padding\n\t\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\t\tbuffer.putBit(false);\n\t\t}\n\n\t\t// padding\n\t\twhile (true) {\n\n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuffer.put(QRCode.PAD0, 8);\n\n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuffer.put(QRCode.PAD1, 8);\n\t\t}\n\n\t\treturn QRCode.createBytes(buffer, rsBlocks);\n\t}\n\n\tpublic static createBytes(buffer, rsBlocks) {\n\n\t\tvar offset = 0;\n\n\t\tvar maxDcCount = 0;\n\t\tvar maxEcCount = 0;\n\n\t\tvar dcdata = new Array(rsBlocks.length);\n\t\tvar ecdata = new Array(rsBlocks.length);\n\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n\t\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\n\t\t\tdcdata[r] = new Array(dcCount);\n\n\t\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t\t}\n\t\t\toffset += dcCount;\n\n\t\t\tvar rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n\t\t\tvar rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n\t\t\t\tvar modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\t\tecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\n\t\t\t}\n\n\t\t}\n\n\t\tvar totalCodeCount = 0;\n\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t\t}\n\n\t\tvar data = new Array(totalCodeCount);\n\t\tvar index = 0;\n\n\t\tfor (var i = 0; i < maxDcCount; i++) {\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\t\tif (i < dcdata[r].length) {\n\t\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < maxEcCount; i++) {\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\t\tif (i < ecdata[r].length) {\n\t\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\taddData(data) {\n\t\tvar newData = new QR8bitByte(data);\n\t\tthis.dataList.push(newData);\n\t\tthis.dataCache = null;\n\t}\n\n\tisDark(row, col) {\n\t\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\t\tthrow new Error(row + \",\" + col);\n\t\t}\n\t\treturn this.modules[row][col];\n\t}\n\n\tgetModuleCount() {\n\t\treturn this.moduleCount;\n\t}\n\n\tmake() {\n\t\t// Calculate automatically typeNumber if provided is < 1\n\t\tif (this.typeNumber < 1) {\n\t\t\tvar typeNumber = 1;\n\t\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\t\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n\t\t\t\tvar buffer = new QRBitBuffer();\n\t\t\t\tvar totalDataCount = 0;\n\t\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\n\t\t\t\t\tvar data = this.dataList[i];\n\t\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n\t\t\t\t\tdata.write(buffer);\n\t\t\t\t}\n\t\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.typeNumber = typeNumber;\n\t\t}\n\t\tthis.makeImpl(false, this.getBestMaskPattern());\n\t}\n\n\tmakeImpl(test, maskPattern) {\n\n\t\tthis.moduleCount = this.typeNumber * 4 + 17;\n\t\tthis.modules = new Array(this.moduleCount);\n\n\t\tfor (var row = 0; row < this.moduleCount; row++) {\n\n\t\t\tthis.modules[row] = new Array(this.moduleCount);\n\n\t\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t\t}\n\t\t}\n\n\t\tthis.setupPositionProbePattern(0, 0);\n\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\t\tthis.setupPositionAdjustPattern();\n\t\tthis.setupTimingPattern();\n\t\tthis.setupTypeInfo(test, maskPattern);\n\n\t\tif (this.typeNumber >= 7) {\n\t\t\tthis.setupTypeNumber(test);\n\t\t}\n\n\t\tif (this.dataCache == null) {\n\t\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t\t}\n\n\t\tthis.mapData(this.dataCache, maskPattern);\n\t}\n\n\tsetupPositionProbePattern(row, col) {\n\n\t\tfor (var r = -1; r <= 7; r++) {\n\n\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n\t\t\tfor (var c = -1; c <= 7; c++) {\n\n\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n\t\t\t\tif ((0 <= r && r <= 6 && (c == 0 || c == 6))\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6))\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetBestMaskPattern() {\n\n\t\tvar minLostPoint = 0;\n\t\tvar pattern = 0;\n\n\t\tfor (var i = 0; i < 8; i++) {\n\n\t\t\tthis.makeImpl(true, i);\n\n\t\t\tvar lostPoint = QRUtil.getLostPoint(this);\n\n\t\t\tif (i == 0 || minLostPoint > lostPoint) {\n\t\t\t\tminLostPoint = lostPoint;\n\t\t\t\tpattern = i;\n\t\t\t}\n\t\t}\n\n\t\treturn pattern;\n\t}\n\n\tcreateMovieClip(target_mc, instance_name, depth) {\n\n\t\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\t\tvar cs = 1;\n\n\t\tthis.make();\n\n\t\tfor (var row = 0; row < this.modules.length; row++) {\n\n\t\t\tvar y = row * cs;\n\n\t\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\n\t\t\t\tvar x = col * cs;\n\t\t\t\tvar dark = this.modules[row][col];\n\n\t\t\t\tif (dark) {\n\t\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\t\tqr_mc.endFill();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn qr_mc;\n\t}\n\n\tsetupTimingPattern() {\n\n\t\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\t\tif (this.modules[r][6] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[r][6] = (r % 2 == 0);\n\t\t}\n\n\t\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\t\tif (this.modules[6][c] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[6][c] = (c % 2 == 0);\n\t\t}\n\t}\n\n\tsetupPositionAdjustPattern() {\n\n\t\tvar pos = QRUtil.getPatternPosition(this.typeNumber);\n\n\t\tfor (var i = 0; i < pos.length; i++) {\n\n\t\t\tfor (var j = 0; j < pos.length; j++) {\n\n\t\t\t\tvar row = pos[i];\n\t\t\t\tvar col = pos[j];\n\n\t\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var r = -2; r <= 2; r++) {\n\n\t\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\n\t\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\n\t\t\t\t\t\t\t|| (r == 0 && c == 0)) {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetupTypeNumber(test) {\n\n\t\tvar bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t\t}\n\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n\t\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t\t}\n\t}\n\n\tsetupTypeInfo(test, maskPattern) {\n\n\t\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\t\tvar bits = QRUtil.getBCHTypeInfo(data);\n\n\t\t// vertical\t\t\n\t\tfor (var i = 0; i < 15; i++) {\n\n\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n\n\t\t\tif (i < 6) {\n\t\t\t\tthis.modules[i][8] = mod;\n\t\t\t} else if (i < 8) {\n\t\t\t\tthis.modules[i + 1][8] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t\t}\n\t\t}\n\n\t\t// horizontal\n\t\tfor (var i = 0; i < 15; i++) {\n\n\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n\n\t\t\tif (i < 8) {\n\t\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t\t} else if (i < 9) {\n\t\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t\t}\n\t\t}\n\n\t\t// fixed module\n\t\tthis.modules[this.moduleCount - 8][8] = (!test);\n\n\t}\n\n\tmapData(data, maskPattern) {\n\n\t\tvar inc = -1;\n\t\tvar row = this.moduleCount - 1;\n\t\tvar bitIndex = 7;\n\t\tvar byteIndex = 0;\n\n\t\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\n\t\t\tif (col == 6) col--;\n\n\t\t\twhile (true) {\n\n\t\t\t\tfor (var c = 0; c < 2; c++) {\n\n\t\t\t\t\tif (this.modules[row][col - c] == null) {\n\n\t\t\t\t\t\tvar dark = false;\n\n\t\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\t\tdark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar mask = QRUtil.getMask(maskPattern, row, col - c);\n\n\t\t\t\t\t\tif (mask) {\n\t\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\t\tbitIndex--;\n\n\t\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trow += inc;\n\n\t\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\t\trow -= inc;\n\t\t\t\t\tinc = -inc;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default class QR8bitByte {\n\tpublic mode: any;\n\tpublic data: any;\n\tconstructor(data) {\n\t\tthis.mode = QRMode.MODE_8BIT_BYTE;\n\t\tthis.data = data;\n\t}\n\n\tgetLength(buffer) {\n\t\treturn this.data.length;\n\t}\n\n\twrite(buffer) {\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t// not JIS ...\n\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\n\t\t}\n\t}\n}\n\nvar QRMode = {\n\tMODE_NUMBER: 1 << 0,\n\tMODE_ALPHA_NUM: 1 << 1,\n\tMODE_8BIT_BYTE: 1 << 2,\n\tMODE_KANJI: 1 << 3\n};\n\n// QRErrorCorrectLevel\n//---------------------------------------------------------------------\n\nvar QRErrorCorrectLevel = {\n\tL: 1,\n\tM: 0,\n\tQ: 3,\n\tH: 2\n};\n\n//---------------------------------------------------------------------\n// QRMaskPattern\n//---------------------------------------------------------------------\n\nvar QRMaskPattern = {\n\tPATTERN000: 0,\n\tPATTERN001: 1,\n\tPATTERN010: 2,\n\tPATTERN011: 3,\n\tPATTERN100: 4,\n\tPATTERN101: 5,\n\tPATTERN110: 6,\n\tPATTERN111: 7\n};\n\n//---------------------------------------------------------------------\n// QRUtil\n//---------------------------------------------------------------------\n\nvar QRUtil = {\n\n\tPATTERN_POSITION_TABLE: [\n\t\t[],\n\t\t[6, 18],\n\t\t[6, 22],\n\t\t[6, 26],\n\t\t[6, 30],\n\t\t[6, 34],\n\t\t[6, 22, 38],\n\t\t[6, 24, 42],\n\t\t[6, 26, 46],\n\t\t[6, 28, 50],\n\t\t[6, 30, 54],\n\t\t[6, 32, 58],\n\t\t[6, 34, 62],\n\t\t[6, 26, 46, 66],\n\t\t[6, 26, 48, 70],\n\t\t[6, 26, 50, 74],\n\t\t[6, 30, 54, 78],\n\t\t[6, 30, 56, 82],\n\t\t[6, 30, 58, 86],\n\t\t[6, 34, 62, 90],\n\t\t[6, 28, 50, 72, 94],\n\t\t[6, 26, 50, 74, 98],\n\t\t[6, 30, 54, 78, 102],\n\t\t[6, 28, 54, 80, 106],\n\t\t[6, 32, 58, 84, 110],\n\t\t[6, 30, 58, 86, 114],\n\t\t[6, 34, 62, 90, 118],\n\t\t[6, 26, 50, 74, 98, 122],\n\t\t[6, 30, 54, 78, 102, 126],\n\t\t[6, 26, 52, 78, 104, 130],\n\t\t[6, 30, 56, 82, 108, 134],\n\t\t[6, 34, 60, 86, 112, 138],\n\t\t[6, 30, 58, 86, 114, 142],\n\t\t[6, 34, 62, 90, 118, 146],\n\t\t[6, 30, 54, 78, 102, 126, 150],\n\t\t[6, 24, 50, 76, 102, 128, 154],\n\t\t[6, 28, 54, 80, 106, 132, 158],\n\t\t[6, 32, 58, 84, 110, 136, 162],\n\t\t[6, 26, 54, 82, 110, 138, 166],\n\t\t[6, 30, 58, 86, 114, 142, 170]\n\t],\n\n\tG15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n\tG18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n\tG15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\n\n\tgetBCHTypeInfo: function (data) {\n\t\tvar d = data << 10;\n\t\twhile (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t\td ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\n\t\t}\n\t\treturn ((data << 10) | d) ^ QRUtil.G15_MASK;\n\t},\n\n\tgetBCHTypeNumber: function (data) {\n\t\tvar d = data << 12;\n\t\twhile (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t\td ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\n\t\t}\n\t\treturn (data << 12) | d;\n\t},\n\n\tgetBCHDigit: function (data) {\n\n\t\tvar digit = 0;\n\n\t\twhile (data != 0) {\n\t\t\tdigit++;\n\t\t\tdata >>>= 1;\n\t\t}\n\n\t\treturn digit;\n\t},\n\n\tgetPatternPosition: function (typeNumber) {\n\t\treturn QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n\t},\n\n\tgetMask: function (maskPattern, i, j) {\n\n\t\tswitch (maskPattern) {\n\n\t\t\tcase QRMaskPattern.PATTERN000: return (i + j) % 2 == 0;\n\t\t\tcase QRMaskPattern.PATTERN001: return i % 2 == 0;\n\t\t\tcase QRMaskPattern.PATTERN010: return j % 3 == 0;\n\t\t\tcase QRMaskPattern.PATTERN011: return (i + j) % 3 == 0;\n\t\t\tcase QRMaskPattern.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\t\t\tcase QRMaskPattern.PATTERN101: return (i * j) % 2 + (i * j) % 3 == 0;\n\t\t\tcase QRMaskPattern.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t\t\tcase QRMaskPattern.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"bad maskPattern:\" + maskPattern);\n\t\t}\n\t},\n\n\tgetErrorCorrectPolynomial: function (errorCorrectLength) {\n\n\t\tvar a = new QRPolynomial([1], 0);\n\n\t\tfor (var i = 0; i < errorCorrectLength; i++) {\n\t\t\ta = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n\t\t}\n\n\t\treturn a;\n\t},\n\n\tgetLengthInBits: function (mode, type) {\n\n\t\tif (1 <= type && type < 10) {\n\n\t\t\t// 1 - 9\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase QRMode.MODE_NUMBER: return 10;\n\t\t\t\tcase QRMode.MODE_ALPHA_NUM: return 9;\n\t\t\t\tcase QRMode.MODE_8BIT_BYTE: return 8;\n\t\t\t\tcase QRMode.MODE_KANJI: return 8;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"mode:\" + mode);\n\t\t\t}\n\n\t\t} else if (type < 27) {\n\n\t\t\t// 10 - 26\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase QRMode.MODE_NUMBER: return 12;\n\t\t\t\tcase QRMode.MODE_ALPHA_NUM: return 11;\n\t\t\t\tcase QRMode.MODE_8BIT_BYTE: return 16;\n\t\t\t\tcase QRMode.MODE_KANJI: return 10;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"mode:\" + mode);\n\t\t\t}\n\n\t\t} else if (type < 41) {\n\n\t\t\t// 27 - 40\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase QRMode.MODE_NUMBER: return 14;\n\t\t\t\tcase QRMode.MODE_ALPHA_NUM: return 13;\n\t\t\t\tcase QRMode.MODE_8BIT_BYTE: return 16;\n\t\t\t\tcase QRMode.MODE_KANJI: return 12;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"mode:\" + mode);\n\t\t\t}\n\n\t\t} else {\n\t\t\tthrow new Error(\"type:\" + type);\n\t\t}\n\t},\n\n\tgetLostPoint: function (qrCode) {\n\n\t\tvar moduleCount = qrCode.getModuleCount();\n\n\t\tvar lostPoint = 0;\n\n\t\t// LEVEL1\n\n\t\tfor (var row = 0; row < moduleCount; row++) {\n\n\t\t\tfor (var col = 0; col < moduleCount; col++) {\n\n\t\t\t\tvar sameCount = 0;\n\t\t\t\tvar dark = qrCode.isDark(row, col);\n\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\n\t\t\t\t\tif (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var c = -1; c <= 1; c++) {\n\n\t\t\t\t\t\tif (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (r == 0 && c == 0) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (dark == qrCode.isDark(row + r, col + c)) {\n\t\t\t\t\t\t\tsameCount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sameCount > 5) {\n\t\t\t\t\tlostPoint += (3 + sameCount - 5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// LEVEL2\n\n\t\tfor (var row = 0; row < moduleCount - 1; row++) {\n\t\t\tfor (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t\tvar count = 0;\n\t\t\t\tif (qrCode.isDark(row, col)) count++;\n\t\t\t\tif (qrCode.isDark(row + 1, col)) count++;\n\t\t\t\tif (qrCode.isDark(row, col + 1)) count++;\n\t\t\t\tif (qrCode.isDark(row + 1, col + 1)) count++;\n\t\t\t\tif (count == 0 || count == 4) {\n\t\t\t\t\tlostPoint += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// LEVEL3\n\n\t\tfor (var row = 0; row < moduleCount; row++) {\n\t\t\tfor (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t\tif (qrCode.isDark(row, col)\n\t\t\t\t\t&& !qrCode.isDark(row, col + 1)\n\t\t\t\t\t&& qrCode.isDark(row, col + 2)\n\t\t\t\t\t&& qrCode.isDark(row, col + 3)\n\t\t\t\t\t&& qrCode.isDark(row, col + 4)\n\t\t\t\t\t&& !qrCode.isDark(row, col + 5)\n\t\t\t\t\t&& qrCode.isDark(row, col + 6)) {\n\t\t\t\t\tlostPoint += 40;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var col = 0; col < moduleCount; col++) {\n\t\t\tfor (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t\tif (qrCode.isDark(row, col)\n\t\t\t\t\t&& !qrCode.isDark(row + 1, col)\n\t\t\t\t\t&& qrCode.isDark(row + 2, col)\n\t\t\t\t\t&& qrCode.isDark(row + 3, col)\n\t\t\t\t\t&& qrCode.isDark(row + 4, col)\n\t\t\t\t\t&& !qrCode.isDark(row + 5, col)\n\t\t\t\t\t&& qrCode.isDark(row + 6, col)) {\n\t\t\t\t\tlostPoint += 40;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// LEVEL4\n\n\t\tvar darkCount = 0;\n\n\t\tfor (var col = 0; col < moduleCount; col++) {\n\t\t\tfor (var row = 0; row < moduleCount; row++) {\n\t\t\t\tif (qrCode.isDark(row, col)) {\n\t\t\t\t\tdarkCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t\tlostPoint += ratio * 10;\n\n\t\treturn lostPoint;\n\t}\n\n};\n\n\n//---------------------------------------------------------------------\n// QRMath\n//---------------------------------------------------------------------\n\nvar QRMath = {\n\n\tglog: function (n) {\n\n\t\tif (n < 1) {\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t}\n\n\t\treturn QRMath.LOG_TABLE[n];\n\t},\n\n\tgexp: function (n) {\n\n\t\twhile (n < 0) {\n\t\t\tn += 255;\n\t\t}\n\n\t\twhile (n >= 256) {\n\t\t\tn -= 255;\n\t\t}\n\n\t\treturn QRMath.EXP_TABLE[n];\n\t},\n\n\tEXP_TABLE: new Array(256),\n\n\tLOG_TABLE: new Array(256)\n\n};\n\nfor (var i = 0; i < 8; i++) {\n\tQRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n\t\t^ QRMath.EXP_TABLE[i - 5]\n\t\t^ QRMath.EXP_TABLE[i - 6]\n\t\t^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\n\n//---------------------------------------------------------------------\n// QRPolynomial\n//---------------------------------------------------------------------\n\nexport class QRPolynomial {\n\tpublic num: any;\n\tpublic shift: any;\n\n\tconstructor(num, shift) {\n\t\tif (num.length == undefined) {\n\t\t\tthrow new Error(num.length + \"/\" + shift);\n\t\t}\n\n\t\tvar offset = 0;\n\n\t\twhile (offset < num.length && num[offset] == 0) {\n\t\t\toffset++;\n\t\t}\n\n\t\tthis.num = new Array(num.length - offset + shift);\n\t\tfor (var i = 0; i < num.length - offset; i++) {\n\t\t\tthis.num[i] = num[i + offset];\n\t\t}\n\t}\n\n\tget(index) {\n\t\treturn this.num[index];\n\t}\n\n\tgetLength() {\n\t\treturn this.num.length;\n\t}\n\n\tmultiply(e) {\n\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\tnum[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n\t\t\t}\n\t\t}\n\n\t\treturn new QRPolynomial(num, 0);\n\t}\n\n\tmod(e) {\n\n\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n\n\t\tvar num = new Array(this.getLength());\n\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tnum[i] = this.get(i);\n\t\t}\n\n\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\tnum[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n\t\t}\n\n\t\t// recursive call\n\t\treturn new QRPolynomial(num, 0).mod(e);\n\t}\n}\n\n//---------------------------------------------------------------------\n// QRRSBlock\n//---------------------------------------------------------------------\n\n\nexport class QRRSBlock {\n\tpublic totalCount: any;\n\tpublic dataCount: any;\n\n\tpublic static RS_BLOCK_TABLE = [\n\n\t\t// L\n\t\t// M\n\t\t// Q\n\t\t// H\n\n\t\t// 1\n\t\t[1, 26, 19],\n\t\t[1, 26, 16],\n\t\t[1, 26, 13],\n\t\t[1, 26, 9],\n\n\t\t// 2\n\t\t[1, 44, 34],\n\t\t[1, 44, 28],\n\t\t[1, 44, 22],\n\t\t[1, 44, 16],\n\n\t\t// 3\n\t\t[1, 70, 55],\n\t\t[1, 70, 44],\n\t\t[2, 35, 17],\n\t\t[2, 35, 13],\n\n\t\t// 4\t\t\n\t\t[1, 100, 80],\n\t\t[2, 50, 32],\n\t\t[2, 50, 24],\n\t\t[4, 25, 9],\n\n\t\t// 5\n\t\t[1, 134, 108],\n\t\t[2, 67, 43],\n\t\t[2, 33, 15, 2, 34, 16],\n\t\t[2, 33, 11, 2, 34, 12],\n\n\t\t// 6\n\t\t[2, 86, 68],\n\t\t[4, 43, 27],\n\t\t[4, 43, 19],\n\t\t[4, 43, 15],\n\n\t\t// 7\t\t\n\t\t[2, 98, 78],\n\t\t[4, 49, 31],\n\t\t[2, 32, 14, 4, 33, 15],\n\t\t[4, 39, 13, 1, 40, 14],\n\n\t\t// 8\n\t\t[2, 121, 97],\n\t\t[2, 60, 38, 2, 61, 39],\n\t\t[4, 40, 18, 2, 41, 19],\n\t\t[4, 40, 14, 2, 41, 15],\n\n\t\t// 9\n\t\t[2, 146, 116],\n\t\t[3, 58, 36, 2, 59, 37],\n\t\t[4, 36, 16, 4, 37, 17],\n\t\t[4, 36, 12, 4, 37, 13],\n\n\t\t// 10\t\t\n\t\t[2, 86, 68, 2, 87, 69],\n\t\t[4, 69, 43, 1, 70, 44],\n\t\t[6, 43, 19, 2, 44, 20],\n\t\t[6, 43, 15, 2, 44, 16],\n\n\t\t// 11\n\t\t[4, 101, 81],\n\t\t[1, 80, 50, 4, 81, 51],\n\t\t[4, 50, 22, 4, 51, 23],\n\t\t[3, 36, 12, 8, 37, 13],\n\n\t\t// 12\n\t\t[2, 116, 92, 2, 117, 93],\n\t\t[6, 58, 36, 2, 59, 37],\n\t\t[4, 46, 20, 6, 47, 21],\n\t\t[7, 42, 14, 4, 43, 15],\n\n\t\t// 13\n\t\t[4, 133, 107],\n\t\t[8, 59, 37, 1, 60, 38],\n\t\t[8, 44, 20, 4, 45, 21],\n\t\t[12, 33, 11, 4, 34, 12],\n\n\t\t// 14\n\t\t[3, 145, 115, 1, 146, 116],\n\t\t[4, 64, 40, 5, 65, 41],\n\t\t[11, 36, 16, 5, 37, 17],\n\t\t[11, 36, 12, 5, 37, 13],\n\n\t\t// 15\n\t\t[5, 109, 87, 1, 110, 88],\n\t\t[5, 65, 41, 5, 66, 42],\n\t\t[5, 54, 24, 7, 55, 25],\n\t\t[11, 36, 12],\n\n\t\t// 16\n\t\t[5, 122, 98, 1, 123, 99],\n\t\t[7, 73, 45, 3, 74, 46],\n\t\t[15, 43, 19, 2, 44, 20],\n\t\t[3, 45, 15, 13, 46, 16],\n\n\t\t// 17\n\t\t[1, 135, 107, 5, 136, 108],\n\t\t[10, 74, 46, 1, 75, 47],\n\t\t[1, 50, 22, 15, 51, 23],\n\t\t[2, 42, 14, 17, 43, 15],\n\n\t\t// 18\n\t\t[5, 150, 120, 1, 151, 121],\n\t\t[9, 69, 43, 4, 70, 44],\n\t\t[17, 50, 22, 1, 51, 23],\n\t\t[2, 42, 14, 19, 43, 15],\n\n\t\t// 19\n\t\t[3, 141, 113, 4, 142, 114],\n\t\t[3, 70, 44, 11, 71, 45],\n\t\t[17, 47, 21, 4, 48, 22],\n\t\t[9, 39, 13, 16, 40, 14],\n\n\t\t// 20\n\t\t[3, 135, 107, 5, 136, 108],\n\t\t[3, 67, 41, 13, 68, 42],\n\t\t[15, 54, 24, 5, 55, 25],\n\t\t[15, 43, 15, 10, 44, 16],\n\n\t\t// 21\n\t\t[4, 144, 116, 4, 145, 117],\n\t\t[17, 68, 42],\n\t\t[17, 50, 22, 6, 51, 23],\n\t\t[19, 46, 16, 6, 47, 17],\n\n\t\t// 22\n\t\t[2, 139, 111, 7, 140, 112],\n\t\t[17, 74, 46],\n\t\t[7, 54, 24, 16, 55, 25],\n\t\t[34, 37, 13],\n\n\t\t// 23\n\t\t[4, 151, 121, 5, 152, 122],\n\t\t[4, 75, 47, 14, 76, 48],\n\t\t[11, 54, 24, 14, 55, 25],\n\t\t[16, 45, 15, 14, 46, 16],\n\n\t\t// 24\n\t\t[6, 147, 117, 4, 148, 118],\n\t\t[6, 73, 45, 14, 74, 46],\n\t\t[11, 54, 24, 16, 55, 25],\n\t\t[30, 46, 16, 2, 47, 17],\n\n\t\t// 25\n\t\t[8, 132, 106, 4, 133, 107],\n\t\t[8, 75, 47, 13, 76, 48],\n\t\t[7, 54, 24, 22, 55, 25],\n\t\t[22, 45, 15, 13, 46, 16],\n\n\t\t// 26\n\t\t[10, 142, 114, 2, 143, 115],\n\t\t[19, 74, 46, 4, 75, 47],\n\t\t[28, 50, 22, 6, 51, 23],\n\t\t[33, 46, 16, 4, 47, 17],\n\n\t\t// 27\n\t\t[8, 152, 122, 4, 153, 123],\n\t\t[22, 73, 45, 3, 74, 46],\n\t\t[8, 53, 23, 26, 54, 24],\n\t\t[12, 45, 15, 28, 46, 16],\n\n\t\t// 28\n\t\t[3, 147, 117, 10, 148, 118],\n\t\t[3, 73, 45, 23, 74, 46],\n\t\t[4, 54, 24, 31, 55, 25],\n\t\t[11, 45, 15, 31, 46, 16],\n\n\t\t// 29\n\t\t[7, 146, 116, 7, 147, 117],\n\t\t[21, 73, 45, 7, 74, 46],\n\t\t[1, 53, 23, 37, 54, 24],\n\t\t[19, 45, 15, 26, 46, 16],\n\n\t\t// 30\n\t\t[5, 145, 115, 10, 146, 116],\n\t\t[19, 75, 47, 10, 76, 48],\n\t\t[15, 54, 24, 25, 55, 25],\n\t\t[23, 45, 15, 25, 46, 16],\n\n\t\t// 31\n\t\t[13, 145, 115, 3, 146, 116],\n\t\t[2, 74, 46, 29, 75, 47],\n\t\t[42, 54, 24, 1, 55, 25],\n\t\t[23, 45, 15, 28, 46, 16],\n\n\t\t// 32\n\t\t[17, 145, 115],\n\t\t[10, 74, 46, 23, 75, 47],\n\t\t[10, 54, 24, 35, 55, 25],\n\t\t[19, 45, 15, 35, 46, 16],\n\n\t\t// 33\n\t\t[17, 145, 115, 1, 146, 116],\n\t\t[14, 74, 46, 21, 75, 47],\n\t\t[29, 54, 24, 19, 55, 25],\n\t\t[11, 45, 15, 46, 46, 16],\n\n\t\t// 34\n\t\t[13, 145, 115, 6, 146, 116],\n\t\t[14, 74, 46, 23, 75, 47],\n\t\t[44, 54, 24, 7, 55, 25],\n\t\t[59, 46, 16, 1, 47, 17],\n\n\t\t// 35\n\t\t[12, 151, 121, 7, 152, 122],\n\t\t[12, 75, 47, 26, 76, 48],\n\t\t[39, 54, 24, 14, 55, 25],\n\t\t[22, 45, 15, 41, 46, 16],\n\n\t\t// 36\n\t\t[6, 151, 121, 14, 152, 122],\n\t\t[6, 75, 47, 34, 76, 48],\n\t\t[46, 54, 24, 10, 55, 25],\n\t\t[2, 45, 15, 64, 46, 16],\n\n\t\t// 37\n\t\t[17, 152, 122, 4, 153, 123],\n\t\t[29, 74, 46, 14, 75, 47],\n\t\t[49, 54, 24, 10, 55, 25],\n\t\t[24, 45, 15, 46, 46, 16],\n\n\t\t// 38\n\t\t[4, 152, 122, 18, 153, 123],\n\t\t[13, 74, 46, 32, 75, 47],\n\t\t[48, 54, 24, 14, 55, 25],\n\t\t[42, 45, 15, 32, 46, 16],\n\n\t\t// 39\n\t\t[20, 147, 117, 4, 148, 118],\n\t\t[40, 75, 47, 7, 76, 48],\n\t\t[43, 54, 24, 22, 55, 25],\n\t\t[10, 45, 15, 67, 46, 16],\n\n\t\t// 40\n\t\t[19, 148, 118, 6, 149, 119],\n\t\t[18, 75, 47, 31, 76, 48],\n\t\t[34, 54, 24, 34, 55, 25],\n\t\t[20, 45, 15, 61, 46, 16]\n\t];\n\n\tpublic static getRSBlocks = function (typeNumber, errorCorrectLevel) {\n\n\t\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\n\t\tif (rsBlock == undefined) {\n\t\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t\t}\n\n\t\tvar length = rsBlock.length / 3;\n\n\t\tvar list = new Array();\n\n\t\tfor (var i = 0; i < length; i++) {\n\n\t\t\tvar count = rsBlock[i * 3 + 0];\n\t\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\t\tvar dataCount = rsBlock[i * 3 + 2];\n\n\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\tlist.push(new QRRSBlock(totalCount, dataCount));\n\t\t\t}\n\t\t}\n\n\t\treturn list;\n\t}\n\n\tpublic static getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n\n\t\tswitch (errorCorrectLevel) {\n\t\t\tcase QRErrorCorrectLevel.L:\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\t\t\tcase QRErrorCorrectLevel.M:\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\t\t\tcase QRErrorCorrectLevel.Q:\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\t\t\tcase QRErrorCorrectLevel.H:\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconstructor(totalCount, dataCount) {\n\t\tthis.totalCount = totalCount;\n\t\tthis.dataCount = dataCount;\n\t}\n}\n\n\n//---------------------------------------------------------------------\n// QRBitBuffer\n//---------------------------------------------------------------------\n\n\nexport class QRBitBuffer {\n\tpublic buffer: any;\n\tpublic length: any;\n\n\tconstructor() {\n\t\tthis.buffer = new Array();\n\t\tthis.length = 0;\n\t}\n\n\tget(index) {\n\t\tvar bufIndex = Math.floor(index / 8);\n\t\treturn ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1;\n\t}\n\n\tput(num, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tthis.putBit(((num >>> (length - i - 1)) & 1) == 1);\n\t\t}\n\t}\n\n\tgetLengthInBits() {\n\t\treturn this.length;\n\t}\n\n\tputBit(bit) {\n\n\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\tif (this.buffer.length <= bufIndex) {\n\t\t\tthis.buffer.push(0);\n\t\t}\n\n\t\tif (bit) {\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\n\t\t}\n\n\t\tthis.length++;\n\t}\n}"]}