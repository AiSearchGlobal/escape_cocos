{"version":3,"sources":["assets/script/framework/adapter/component/Scrollbar.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2DAA0D;AAC1D,uCAA6E;AAC7E,yCAAwC;AACxC,0DAAkE;AAC5D,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAC5C,IAAM,mBAAmB,GAAG,IAAI,CAAA;AAChC,IAAM,UAAU,GAAG,IAAI,EAAE,CAAC,KAAK,EAAE,CAAA;AAQjC;IAA+B,6BAAY;IAA3C;QAAA,qEAqbC;QApb4B,aAAO,GAAkB,IAAI,CAAA;QACjC,YAAM,GAAc,IAAI,CAAA;QAI1C,eAAS,GAAuB,yBAAkB,CAAC,aAAa,CAAA;QAGhE,kBAAY,GAAY,IAAI,CAAA;QAK5B,kBAAY,GAAW,CAAC,CAAA;QAKxB,kBAAY,GAAW,CAAC,CAAA;QACK,iBAAW,GAAe,iBAAU,CAAC,IAAI,CAAA;QAiBtE,mBAAa,GAAc,IAAI,CAAA;QAClC,2BAA2B;QAIxB,iBAAW,GAAmB,IAAI,CAAA;QAIlC,mBAAa,GAAmB,IAAI,CAAA;QACvC,YAAY;QACZ,0BAA0B;QAGvB,gBAAU,GAAa,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;QAG7C,kBAAY,GAAa,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;QAE5D,YAAY;QACZ,0BAA0B;QAGvB,gBAAU,GAAY,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAGvC,kBAAY,GAAY,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;QAChD,YAAY;QAGT,wBAAkB,GAAW,GAAG,CAAA;QAMhC,mBAAa,GAAW,CAAC,CAAA;QAGzB,oBAAc,GAAY,KAAK,CAAA;QAI/B,kBAAY,GAAW,CAAC,CAAA;QAKnB,cAAQ,GAAY,KAAK,CAAA;QAGzB,WAAK,GAAW,CAAC,CAAA;QACjB,YAAM,GAAW,CAAC,CAAC,CAAA;QAInB,cAAQ,GAAG,GAAG,CAAA;;IAwV1B,CAAC;IA7ZM,sBAAI,iCAAU;aAAd,cAAmB,OAAO,IAAI,CAAC,WAAW,CAAA,CAAC,CAAC;aAC/C,UAAe,KAAiB;YAC5B,IAAI,KAAK,IAAI,IAAI,CAAC,WAAW;gBAAE,OAAM;YACrC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAA;YACxB,IAAI,KAAK,IAAI,iBAAU,CAAC,IAAI,EAAE;gBAC1B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;oBACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAA;iBACnC;aACJ;QACL,CAAC;;;OAT8C;IA0E/C,sBAAI,2BAAI;aAAR,cAAa,OAAO,IAAI,CAAC,KAAK,CAAA,CAAC,CAAC;aAChC,UAAS,CAAS;YACd,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;gBACjB,IAAI,CAAC,KAAK,GAAG,eAAM,CAAC,KAAK,CAAC,CAAC,EAAE,mBAAmB,EAAE,CAAC,CAAC,CAAA;gBACpD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;aACvB;QACL,CAAC;;;OAN+B;IAOhC,sBAAW,4BAAK;aAAhB,cAAqB,OAAO,IAAI,CAAC,MAAM,CAAA,CAAC,CAAC;aACzC,UAAiB,CAAS;YACtB,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;gBAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;gBAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;aACvB;QACL,CAAC;;;OANwC;IAOzC,sBAAW,+BAAQ;aAAnB;YACI,OAAO,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAA;QACxE,CAAC;;;OAAA;IACD,sBAAW,gCAAS;aAApB;YACI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAA;aAC9B;YACD,OAAO,IAAI,CAAC,UAAU,CAAA;QAC1B,CAAC;;;OAAA;IACD,sBAAW,sCAAe;aAA1B;YACI,IAAI,CAAC,IAAI,CAAC,MAAM;gBAAE,OAAO,IAAI,CAAA;YAC7B,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAA;aAC3C;YACD,OAAO,IAAI,CAAC,gBAAgB,CAAA;QAChC,CAAC;;;OAAA;IACD,sBAAc,yBAAE;aAAhB,cAAqB,OAAO,IAAI,CAAC,IAAI,IAAI,kBAAW,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAA,CAAC,CAAC;;;OAAA;IAC7E,sBAAc,yBAAE;aAAhB,cAAqB,OAAO,IAAI,CAAC,IAAI,IAAI,kBAAW,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAA,CAAC,CAAC;;;OAAA;IAEtF,sBAAW,2BAAI;aAAf;YACI,OAAO,CAAC,IAAI,CAAC,SAAS,IAAI,yBAAkB,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,IAAI,yBAAkB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,kBAAW,CAAC,UAAU,CAAC,CAAC,CAAC,kBAAW,CAAC,QAAQ,CAAA;QACrK,CAAC;;;OAAA;IACS,6BAAS,GAAnB;QACI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;QACvC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;QAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAClC,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,6BAAa,CAAC,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAA;YACtG,IAAI,CAAC,cAAc,EAAE,CAAA;SACxB;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;YACtD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAA;YACrD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;SAC/D;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;IAC5B,CAAC;IACS,4BAAQ,GAAlB;QACI,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAA;QAC5B,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAA;SACrC;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,uBAAO,CAAC,GAAG,IAAI,CAAA;YACzB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAA;YACrE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;YACnE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;YACjE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;YACpE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;YACnE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;YACnE,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAA;gBACvF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAA;aAC1F;SACJ;IACL,CAAC;IACS,6BAAS,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAA;QACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;QACpE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;QAClE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;QACrE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;QACpE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;QACpE,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAA;YACxF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAA;SAC3F;IACL,CAAC;IACO,qCAAiB,GAAzB;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA;QACxB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QACzB,QAAQ,IAAI,CAAC,UAAU,EAAE;YACrB,KAAK,iBAAU,CAAC,KAAK;gBACjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;gBAC9E,MAAK;YACT,KAAK,iBAAU,CAAC,UAAU;gBACtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;gBACjF,MAAK;YACT,KAAK,iBAAU,CAAC,SAAS;gBACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;gBAC9E,MAAK;SACZ;IACL,CAAC;IACO,qCAAiB,GAAzB;QACI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAA;QACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;QACxB,QAAQ,IAAI,CAAC,UAAU,EAAE;YACrB,KAAK,iBAAU,CAAC,KAAK;gBACjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;gBACnF,MAAK;YACT,KAAK,iBAAU,CAAC,UAAU;gBACtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;gBACrF,MAAK;YACT,KAAK,iBAAU,CAAC,SAAS;gBACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;gBACnF,MAAK;SACZ;IACL,CAAC;IACO,oCAAgB,GAAxB,UAAyB,EAAqB;QAC1C,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YAAE,OAAM;QACtC,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAA;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;QACtC,IAAI,CAAC,eAAe,GAAG;YACnB,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,IAAI;YACV,EAAE,EAAE,EAAE;SACT,CAAA;IACL,CAAC;IACO,oCAAgB,GAAxB,UAAyB,EAAY;QACjC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YAAE,OAAM;QACtC,IAAI,CAAC,eAAe,GAAG;YACnB,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK;YACnC,EAAE,EAAE,EAAE;SACT,CAAA;IACL,CAAC;IACO,qCAAiB,GAAzB,UAA0B,EAAkB;QACxC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YAAE,OAAM;QACtC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,EAAE,CAAA;IACvC,CAAC;IACO,+BAAW,GAAnB,UAAoB,KAA0B;QAC1C,IAAI,CAAC,IAAI,CAAC,YAAY;YAAE,OAAM;QAC9B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;IAC7B,CAAC;IACO,+BAAW,GAAnB,UAAoB,KAA0B;QAC1C,IAAI,CAAC,IAAI,CAAC,YAAY;YAAE,OAAM;QAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;IAC5B,CAAC;IACO,iCAAa,GAArB,UAAsB,IAAa;QAC/B,IAAI,CAAC,IAAI,CAAC,cAAc;YAAE,OAAM;QAChC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAA;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;QACnB,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;SAClC;IACL,CAAC;IACO,iCAAa,GAArB,UAAsB,KAA0B;QAC5C,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;YAAE,OAAM;QAClE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA;QACxB,IAAI,WAAW,GAAG,KAAK,CAAC,gBAAgB,EAAE,CAAA;QAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;QAC7F,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE;YACvE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;YACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;YAC1B,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA;YAC5C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;SAClC;QACD,IAAI,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,KAAK,EAAE;YACrC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;SAC3C;aAAM,IAAI,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,UAAU,EAAE;YACjD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;SAC7C;aAAM,IAAI,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,SAAS,EAAE;YAChD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;SAC3C;IACL,CAAC;IACO,gCAAY,GAApB,UAAqB,KAA0B;QAC3C,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;YAAE,OAAM;QAClE,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;YACnE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;SAClC;IACL,CAAC;IACO,+BAAW,GAAnB,UAAoB,KAA0B;QAC1C,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;YAAE,OAAM;QAClE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;QACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA;QACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAA;QACzB,QAAQ,IAAI,CAAC,UAAU,EAAE;YACrB,KAAK,iBAAU,CAAC,KAAK;gBACjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;gBACjF,MAAK;YACT,KAAK,iBAAU,CAAC,UAAU;gBACtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;gBACnF,MAAK;YACT,KAAK,iBAAU,CAAC,SAAS;gBACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;gBACjF,MAAK;SACZ;QACD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,EAAE,CAAA;IAC/C,CAAC;IACO,kCAAc,GAAtB,UAAuB,UAAkB;QACrC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,EAAE,CAAA;QACvC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;IACxD,CAAC;IACO,mCAAe,GAAvB,UAAwB,KAA0B,EAAE,MAAkB;QAAlB,uBAAA,EAAA,UAAkB;QAClE,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,IAAI,kBAAW,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAA;QACnG,IAAI,aAAa,GAAG,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;QAChD,IAAI,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAA;QACrC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;QAClF,IAAI,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAA;QACzE,YAAY,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAA;QACnD,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAA;QAEtD,QAAQ,IAAI,CAAC,SAAS,EAAE;YACpB,KAAK,yBAAkB,CAAC,aAAa,CAAC;YACtC,KAAK,yBAAkB,CAAC,aAAa;gBACjC,UAAU,GAAG,eAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,YAAY,GAAG,aAAa,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAA;gBACnG,MAAK;YACT,KAAK,yBAAkB,CAAC,aAAa,CAAC;YACtC,KAAK,yBAAkB,CAAC,aAAa;gBACjC,UAAU,GAAG,eAAM,CAAC,KAAK,CAAC,YAAY,GAAG,aAAa,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAA;gBAC7F,MAAK;SACZ;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAA;IACpC,CAAC;IACO,sCAAkB,GAA1B,UAA2B,UAAkB,EAAE,MAAc;QACzD,IAAI,IAAI,GAAG,CAAC,CAAA;QACZ,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,GAAG,CAAC,EAAE;YAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;gBACnE,IAAI,GAAG,eAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAA;aAC/G;iBAAM;gBACH,IAAI,GAAG,CAAC,CAAA;aACX;SACJ;QACD,KAAK,GAAG,UAAU,CAAA;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;YACxB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAA;YAC/E,KAAK,GAAG,eAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;SAChC;QACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAA;QAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IACnC,CAAC;IACO,kCAAc,GAAtB;QACI,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,OAAM;QAClD,IAAI,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAA;QACxB,IAAI,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAA;QACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAA;QACpC,IAAI,QAAQ,GAAG,eAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;QAC3D,GAAG,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAA;QACxB,GAAG,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAA;QACpC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QAChH,IAAI,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QACrE,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAA;QACxC,QAAQ,IAAI,CAAC,SAAS,EAAE;YACpB,KAAK,yBAAkB,CAAC,aAAa,CAAC;YACtC,KAAK,yBAAkB,CAAC,aAAa;gBACjC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,GAAG,CAAA;gBACtC,MAAK;YACT,KAAK,yBAAkB,CAAC,aAAa,CAAC;YACtC,KAAK,yBAAkB,CAAC,aAAa;gBACjC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,GAAG,CAAA;gBACtC,MAAK;SACZ;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,MAAM,CAAA;QAC1F,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;IACrC,CAAC;IACS,0BAAM,GAAhB,UAAiB,SAAiB;QAC9B,IAAI,CAAC,WAAW,EAAE,CAAA;QAClB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;QACzB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;IACrC,CAAC;IACO,+BAAW,GAAnB;QACI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;YACrB,IAAI,CAAC,cAAc,EAAE,CAAA;YACrB,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAA;gBAClD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;gBAC7F,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA;aAC5B;SACJ;IACL,CAAC;IACO,6BAAS,GAAjB,UAAkB,SAAiB;QAC/B,IAAI,CAAC,IAAI,CAAC,cAAc;YAAE,OAAM;QAChC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,sBAAsB,IAAI,CAAC;YAAE,OAAM;QAC7D,IAAI,CAAC,sBAAsB,IAAI,SAAS,CAAA;QACxC,IAAI,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,YAAY,EAAE;YAClD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAA;YACtE,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;YAC/E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;SAC5B;IACL,CAAC;IACO,qCAAiB,GAAzB,UAA0B,SAAiB;QACvC,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAA;QAC/B,IAAI,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe;YAAE,OAAM;QAClF,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,SAAS,CAAA;QACtC,IAAI,KAAK,GAAG,GAAG,CAAA;QACf,IAAI,IAAI,CAAC,kBAAkB,GAAG,CAAC,EAAE;YAC7B,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAA;SAC9D;QACD,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,KAAK,GAAG,CAAC,CAAA;SACZ;QACD,IAAI,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,KAAK,EAAE;YACrC,IAAI,CAAC,eAAe,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;YAC5D,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAe,CAAA;YAC/C,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,EAAa,CAAA;YAC3C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,GAAG,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;YACjE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,GAAG,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;YACjE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA;SACrD;aAAM,IAAI,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,SAAS,EAAE;YAChD,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAgB,CAAA;YAChD,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,EAAc,CAAA;YAC5C,oCAAoC;YACpC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;SAC3C;QACD,IAAI,KAAK,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,eAAe,GAAG,IAAI,CAAA;SAC9B;IACL,CAAC;IACO,+BAAW,GAAnB,UAAoB,OAAe;QAC/B,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,OAAM;QACxB,IAAM,OAAO,GAAG,UAAU,IAAS;YAC/B,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;gBACtB,6BAA6B;gBAC7B,yBAAyB;gBACzB,0BAA0B;aAC7B;QACL,CAAC,CAAA;QACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;QAC1C,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;IAChD,CAAC;IACO,4BAAQ,GAAhB,UAAiB,UAAkB;QAC/B,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;YACxB,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAA;YACzF,UAAU,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAA;SAC9E;QACD,OAAO,UAAU,CAAA;IACrB,CAAC;IAnbwB;QAAxB,QAAQ,CAAC,6BAAa,CAAC;8CAA8B;IACjC;QAApB,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;6CAAyB;IAI1C;QAHF,QAAQ,CAAC;YACN,IAAI,EAAE,yBAAkB;YACxB,OAAO,EAAE,MAAM;SAClB,CAAC;gDAAiE;IAGhE;QAFF,QAAQ,CAAC;YACN,OAAO,EAAE,eAAe;SAC3B,CAAC;mDAA6B;IAK5B;QAJF,QAAQ,CAAC;YACN,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK;YACvC,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;YACjD,OAAO,EAAE,4DAA4D;SACxE,CAAC;mDAAyB;IAKxB;QAJF,QAAQ,CAAC;YACN,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK;YACvC,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;YACjD,OAAO,EAAE,4DAA4D;SACxE,CAAC;mDAAyB;IACK;QAA/B,QAAQ,CAAC,EAAE,IAAI,EAAE,iBAAU,EAAE,CAAC;kDAA0C;IAItE;QAHF,QAAQ,CAAC;YACN,IAAI,EAAE,iBAAU;YAChB,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;SACpD,CAAC;+CAA6C;IAa5C;QAHF,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,MAAM;YACf,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;SAC1F,CAAC;oDAAgC;IAK/B;QAHF,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,WAAW;YACpB,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;SAChG,CAAC;kDAAmC;IAIlC;QAHF,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,WAAW;YACpB,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;SAChG,CAAC;oDAAqC;IAKpC;QAFF,QAAQ,CAAC;YACN,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;SAC/F,CAAC;iDAA8C;IAG7C;QAFF,QAAQ,CAAC;YACN,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;SAC/F,CAAC;mDAA0D;IAMzD;QAFF,QAAQ,CAAC;YACN,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;SAC3F,CAAC;iDAAwC;IAGvC;QAFF,QAAQ,CAAC;YACN,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;SAC3F,CAAC;mDAA8C;IAI7C;QAFF,QAAQ,CAAC;YACN,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,IAAI,iBAAU,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAA,CAAC,CAAC;SACtI,CAAC;yDAAiC;IAMhC;QALF,QAAQ,CAAC;YACN,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;YACd,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,CAAC;YACP,OAAO,EAAE,oBAAoB;SAChC,CAAC;oDAA0B;IAGzB;QAFF,QAAQ,CAAC;YACN,OAAO,EAAE,kBAAkB;SAC9B,CAAC;qDAAgC;IAI/B;QAHF,QAAQ,CAAC;YACN,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,cAAc,CAAA,CAAC,CAAC;YACnD,OAAO,EAAE,YAAY;SACxB,CAAC;mDAAyB;IAhFlB,SAAS;QADrB,OAAO;OACK,SAAS,CAqbrB;IAAD,gBAAC;CArbD,AAqbC,CArb8B,EAAE,CAAC,SAAS,GAqb1C;AArbY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["import { ScrollAdapter } from '../abstract/ScrollAdapter';\nimport { Orientation, ScrollbarDirection, Transition } from '../define/enum';\nimport { Helper } from '../help/helper';\nimport { ADAPTER, ScrollManager } from '../manager/ScrollManager';\nconst { ccclass, property } = cc._decorator;\nconst MIN_SIZE_PERCENTAGE = 0.01\nconst _tempColor = new cc.Color()\ninterface ITransitionInfo {\n    time: number\n    current?: cc.Color | cc.Vec2\n    from: cc.Color | cc.Vec3\n    to: cc.Color | cc.Vec2 | cc.Vec3\n}\n@ccclass\nexport class Scrollbar extends cc.Component {\n    @property(ScrollAdapter) adapter: ScrollAdapter = null\n    @property(cc.Sprite) handle: cc.Sprite = null\n    @property({\n        type: ScrollbarDirection,\n        tooltip: \"滚动方向\"\n    }) direction: ScrollbarDirection = ScrollbarDirection.Top_To_Bottom\n    @property({\n        tooltip: \"开启后会允许用户滑动进度条\"\n    }) interactable: boolean = true\n    @property({\n        range: [0, 1], slide: true, step: 0.001,\n        visible: function () { return this.interactable },\n        tooltip: \"可拖拽的最小限制，默认=0不限制,仅当你开启了循环,并且你的item会实时修改主轴尺寸时,那么你应该适当限制拖拽区域\"\n    }) dragMinLimit: number = 0\n    @property({\n        range: [0, 1], slide: true, step: 0.001,\n        visible: function () { return this.interactable },\n        tooltip: \"可拖拽的最大限制，默认=1不限制,仅当你开启了循环,并且你的item会实时修改主轴尺寸时,那么你应该适当限制拖拽区域\"\n    }) dragMaxLimit: number = 1\n    @property({ type: Transition }) _transition: Transition = Transition.None\n    @property({\n        type: Transition,\n        visible: function () { return this.interactable }\n    }) get transition() { return this._transition }\n    set transition(value: Transition) {\n        if (value == this._transition) return\n        this._transition = value\n        if (value != Transition.None) {\n            if (!this.targetGraphic) {\n                this.targetGraphic = this.handle\n            }\n        }\n    }\n    @property({\n        type: cc.Sprite,\n        visible: function () { return this.transition != Transition.None && this.interactable }\n    }) targetGraphic: cc.Sprite = null\n    //#region Sprite Transition\n    @property({\n        type: cc.SpriteFrame,\n        visible: function () { return this.transition == Transition.SpriteSwap && this.interactable }\n    }) hoverSprite: cc.SpriteFrame = null\n    @property({\n        type: cc.SpriteFrame,\n        visible: function () { return this.transition == Transition.SpriteSwap && this.interactable }\n    }) pressedSprite: cc.SpriteFrame = null\n    //#endregion\n    //#region Color Transition\n    @property({\n        visible: function () { return this.transition == Transition.ColorTint && this.interactable }\n    }) hoverColor: cc.Color = cc.Color.WHITE.clone()\n    @property({\n        visible: function () { return this.transition == Transition.ColorTint && this.interactable }\n    }) pressedColor: cc.Color = new cc.Color(211, 211, 211, 255)\n\n    //#endregion\n    //#region Scale Transition\n    @property({\n        visible: function () { return this.transition == Transition.Scale && this.interactable }\n    }) hoverScale: cc.Vec2 = new cc.Vec2(1, 1)\n    @property({\n        visible: function () { return this.transition == Transition.Scale && this.interactable }\n    }) pressedScale: cc.Vec2 = new cc.Vec2(1.2, 1.2)\n    //#endregion\n    @property({\n        visible: function () { return this.transition == Transition.Scale || this.transition == Transition.ColorTint && this.interactable }\n    }) transitionDuration: number = 0.2\n    @property({\n        range: [0, 11],\n        slide: true,\n        step: 1,\n        tooltip: \"用于进度的步数。值为 < 2 将禁用\"\n    }) numberOfSteps: number = 0\n    @property({\n        tooltip: \"开启后会在滚动条无更新时自动隐藏\"\n    }) enableAutoHide: boolean = false\n    @property({\n        visible: function () { return this.enableAutoHide },\n        tooltip: \"自动隐藏滚动条的时间\"\n    }) autoHideTime: number = 1\n\n    private _transitionInfo: ITransitionInfo\n    private _targetEnter: boolean\n    private _targetStart: boolean\n    private _isDirty: boolean = false\n    private _transform: cc.Node\n    private _handleTransform: cc.Node\n    private _size: number = 0\n    private _value: number = -1\n    private _pointerEvent: cc.Event.EventTouch\n    private _offset: cc.Vec3\n    private _isHide: boolean\n    private _opacity = 255\n    private _autoHideRemainingTime: number\n    private _rawTargetScale: cc.Vec3\n    private _rawTargetFrame: cc.SpriteFrame\n    private _rawTargetColor: cc.Color\n    get size() { return this._size }\n    set size(v: number) {\n        if (v != this._size) {\n            this._size = Helper.clamp(v, MIN_SIZE_PERCENTAGE, 1)\n            this._isDirty = true\n        }\n    }\n    public get value() { return this._value }\n    public set value(v: number) {\n        if (v != this._value) {\n            this._value = this.getSteps(v)\n            this._isDirty = true\n        }\n    }\n    public get stepSize() {\n        return (this.numberOfSteps > 1) ? 1 / (this.numberOfSteps - 1) : 0.1\n    }\n    public get transform() {\n        if (!this._transform) {\n            this._transform = this.node\n        }\n        return this._transform\n    }\n    public get handleTransform() {\n        if (!this.handle) return null\n        if (!this._handleTransform) {\n            this._handleTransform = this.handle.node\n        }\n        return this._handleTransform\n    }\n    protected get xy() { return this.axis == Orientation.Horizontal ? \"x\" : \"y\" }\n    protected get wh() { return this.axis == Orientation.Horizontal ? \"width\" : \"height\" }\n\n    public get axis() {\n        return (this.direction == ScrollbarDirection.Left_To_Right || this.direction == ScrollbarDirection.Right_To_Left) ? Orientation.Horizontal : Orientation.Vertical\n    }\n    protected __preload() {\n        this.transform.setAnchorPoint(0.5, 0.5)\n        this.handleTransform.setAnchorPoint(0.5, 0.5)\n        this.handle.node.setPosition(0, 0)\n        if (this.adapter) {\n            this.adapter.scrollManager.on(ScrollManager.Event.ON_UPDATE_PERCENTAGE, this._onUpdateScrollbar, this)\n            this._updateVisuals()\n        }\n        if (this.targetGraphic) {\n            this.targetGraphic.node.getScale(this._rawTargetScale)\n            this._rawTargetFrame = this.targetGraphic.spriteFrame\n            this._rawTargetColor = this.targetGraphic.node.color.clone()\n        }\n        this._openAutoHide(true)\n    }\n    protected onEnable() {\n        const renderComp = this.node\n        if (renderComp) {\n            this._opacity = renderComp.opacity\n        }\n        if (this.adapter) {\n            this.node[ADAPTER] = true\n            this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchStart, this)\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this)\n            this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this)\n            this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this)\n            this.node.on(cc.Node.EventType.MOUSE_ENTER, this._mouseEnter, this)\n            this.node.on(cc.Node.EventType.MOUSE_LEAVE, this._mouseLeave, this)\n            if (this.targetGraphic) {\n                this.targetGraphic.node.on(cc.Node.EventType.MOUSE_ENTER, this._targetMouseEnter, this)\n                this.targetGraphic.node.on(cc.Node.EventType.MOUSE_LEAVE, this._targetMouseLeave, this)\n            }\n        }\n    }\n    protected onDisable() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this._onTouchStart, this)\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this)\n        this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this)\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this)\n        this.node.off(cc.Node.EventType.MOUSE_ENTER, this._mouseEnter, this)\n        this.node.off(cc.Node.EventType.MOUSE_LEAVE, this._mouseLeave, this)\n        if (this.targetGraphic) {\n            this.targetGraphic.node.off(cc.Node.EventType.MOUSE_ENTER, this._targetMouseEnter, this)\n            this.targetGraphic.node.off(cc.Node.EventType.MOUSE_LEAVE, this._targetMouseLeave, this)\n        }\n    }\n    private _targetMouseEnter() {\n        this._targetEnter = true\n        this._openAutoHide(false)\n        switch (this.transition) {\n            case Transition.Scale:\n                this._transitionScale(this._targetStart ? this.pressedScale : this.hoverScale)\n                break\n            case Transition.SpriteSwap:\n                this._transitionSprite(this._targetStart ? this.pressedSprite : this.hoverSprite)\n                break\n            case Transition.ColorTint:\n                this._transitionColor(this._targetStart ? this.pressedColor : this.hoverColor)\n                break\n        }\n    }\n    private _targetMouseLeave() {\n        this._targetEnter = false\n        this._openAutoHide(true)\n        switch (this.transition) {\n            case Transition.Scale:\n                this._transitionScale(this._targetStart ? this.pressedScale : this._rawTargetScale)\n                break\n            case Transition.SpriteSwap:\n                this._transitionSprite(this._targetStart ? this.pressedSprite : this._rawTargetFrame)\n                break\n            case Transition.ColorTint:\n                this._transitionColor(this._targetStart ? this.pressedColor : this._rawTargetColor)\n                break\n        }\n    }\n    private _transitionScale(to: cc.Vec2 | cc.Vec3) {\n        if (!to || !this.targetGraphic) return\n        var from = new cc.Vec3()\n        this.targetGraphic.node.getScale(from)\n        this._transitionInfo = {\n            time: 0,\n            from: from,\n            to: to,\n        }\n    }\n    private _transitionColor(to: cc.Color) {\n        if (!to || !this.targetGraphic) return\n        this._transitionInfo = {\n            time: 0,\n            from: this.targetGraphic.node.color,\n            to: to,\n        }\n    }\n    private _transitionSprite(to: cc.SpriteFrame) {\n        if (!to || !this.targetGraphic) return\n        this.targetGraphic.spriteFrame = to\n    }\n    private _mouseEnter(event: cc.Event.EventMouse) {\n        if (!this.interactable) return\n        this._openAutoHide(false)\n    }\n    private _mouseLeave(event: cc.Event.EventMouse) {\n        if (!this.interactable) return\n        this._openAutoHide(true)\n    }\n    private _openAutoHide(open: boolean) {\n        if (!this.enableAutoHide) return\n        this._autoHideRemainingTime = this.autoHideTime\n        this._isHide = open\n        if (!open) {\n            this._setOpacity(this._opacity)\n        }\n    }\n    private _onTouchStart(event: cc.Event.EventTouch) {\n        if (!this.interactable || this.size == 1 || this.size == 0) return\n        this._openAutoHide(false)\n        this._pointerEvent = null\n        this._targetStart = true\n        var startCursor = event.getStartLocation()\n        this._offset = this.handleTransform.convertToNodeSpaceAR(cc.v3(startCursor.x, startCursor.y))\n        if (Math.abs(this._offset[this.xy]) > this.handleTransform[this.wh] * 0.5) {\n            this._offset = null\n            this._pointerEvent = event\n            var percentage = this._calcPercentage(event)\n            this._setPercentage(percentage)\n        }\n        if (this.transition == Transition.Scale) {\n            this._transitionScale(this.pressedScale)\n        } else if (this.transition == Transition.SpriteSwap) {\n            this._transitionSprite(this.pressedSprite)\n        } else if (this.transition == Transition.ColorTint) {\n            this._transitionColor(this.pressedColor)\n        }\n    }\n    private _onTouchMove(event: cc.Event.EventTouch) {\n        if (!this.interactable || this.size == 1 || this.size == 0) return\n        if (this._offset) {\n            var percentage = this._calcPercentage(event, this._offset[this.xy])\n            this._setPercentage(percentage)\n        }\n    }\n    private _onTouchEnd(event: cc.Event.EventTouch) {\n        if (!this.interactable || this.size == 1 || this.size == 0) return\n        this._offset = null\n        this._pointerEvent = null\n        this._targetStart = false\n        switch (this.transition) {\n            case Transition.Scale:\n                this._transitionScale(this._targetEnter ? this.hoverScale : this._rawTargetScale)\n                break\n            case Transition.SpriteSwap:\n                this._transitionSprite(this._targetEnter ? this.hoverSprite : this._rawTargetFrame)\n                break\n            case Transition.ColorTint:\n                this._transitionColor(this._targetEnter ? this.hoverColor : this._rawTargetColor)\n                break\n        }\n        this.adapter.centerManager.scrollToCenter()\n    }\n    private _setPercentage(percentage: number) {\n        this.adapter.scrollManager.stopScroll()\n        this.adapter.scrollManager.setPercentage(percentage)\n    }\n    private _calcPercentage(event: cc.Event.EventTouch, offset: number = 0) {\n        var parentSize = this.axis == Orientation.Horizontal ? this.transform.width : this.transform.height\n        var remainingSize = parentSize * (1 - this.size)\n        var localCursor = event.getLocation()\n        var pos = this.transform.convertToNodeSpaceAR(cc.v3(localCursor.x, localCursor.y))\n        var handleCorner = pos[this.xy] - offset - -this.transform[this.wh] * 0.5\n        handleCorner -= this.handleTransform[this.wh] * 0.5\n        var percentage = this.adapter.scrollManager.percentage\n\n        switch (this.direction) {\n            case ScrollbarDirection.Right_To_Left:\n            case ScrollbarDirection.Top_To_Bottom:\n                percentage = Helper.clamp(1 - (handleCorner / remainingSize), this.dragMinLimit, this.dragMaxLimit)\n                break\n            case ScrollbarDirection.Left_To_Right:\n            case ScrollbarDirection.Bottom_To_Top:\n                percentage = Helper.clamp(handleCorner / remainingSize, this.dragMinLimit, this.dragMaxLimit)\n                break\n        }\n        return this.getSteps(percentage)\n    }\n    private _onUpdateScrollbar(percentage: number, offset: number) {\n        var size = 0\n        var value = 0\n        if (this.adapter.viewManager.virtualSize > 0) {\n            if (this.adapter.viewManager.virtualSize >= this.adapter.mainAxisSize) {\n                size = Helper.clamp01((this.adapter.mainAxisSize - Math.abs(offset)) / this.adapter.viewManager.virtualSize)\n            } else {\n                size = 1\n            }\n        }\n        value = percentage\n        this.size = size\n        if (this.numberOfSteps > 1) {\n            value = Math.round(value * (this.numberOfSteps - 1)) / (this.numberOfSteps - 1)\n            value = Helper.clamp01(value)\n        }\n        this.value = value\n        this._autoHideRemainingTime = this.autoHideTime\n        this._setOpacity(this._opacity)\n    }\n    private _updateVisuals() {\n        if (!this.handleTransform || !this.adapter) return\n        var min = { x: 0, y: 0 }\n        var max = { x: 0, y: 0 }\n        var mainAxis = this.adapter.mainAxis\n        var movement = Helper.clamp01(this.value) * (1 - this.size)\n        min[mainAxis] = movement\n        max[mainAxis] = movement + this.size\n        var header = this.transform.getContentSize()[this.wh] - max[mainAxis] * this.transform.getContentSize()[this.wh]\n        var footer = min[mainAxis] * this.transform.getContentSize()[this.wh]\n        var pos = this.handle.node.getPosition()\n        switch (this.direction) {\n            case ScrollbarDirection.Bottom_To_Top:\n            case ScrollbarDirection.Left_To_Right:\n                pos[this.xy] = (footer - header) * 0.5\n                break\n            case ScrollbarDirection.Top_To_Bottom:\n            case ScrollbarDirection.Right_To_Left:\n                pos[this.xy] = (header - footer) * 0.5\n                break\n        }\n        this.handleTransform[this.wh] = this.transform.getContentSize()[this.wh] - header - footer\n        this.handle.node.setPosition(pos)\n    }\n    protected update(deltaTime: number) {\n        this._clearDirty()\n        this._autoHide(deltaTime)\n        this._tranitionHandler(deltaTime)\n    }\n    private _clearDirty() {\n        if (this._isDirty) {\n            this._isDirty = false\n            this._updateVisuals()\n            if (this._pointerEvent) {\n                var startCursor = this._pointerEvent.getLocation()\n                this._offset = this.handleTransform.convertToNodeSpaceAR(cc.v3(startCursor.x, startCursor.y))\n                this._pointerEvent = null\n            }\n        }\n    }\n    private _autoHide(deltaTime: number) {\n        if (!this.enableAutoHide) return\n        if (!this._isHide || this._autoHideRemainingTime <= 0) return\n        this._autoHideRemainingTime -= deltaTime\n        if (this._autoHideRemainingTime <= this.autoHideTime) {\n            this._autoHideRemainingTime = Math.max(0, this._autoHideRemainingTime)\n            var opacity = this._opacity * (this._autoHideRemainingTime / this.autoHideTime)\n            this._setOpacity(opacity)\n        }\n    }\n    private _tranitionHandler(deltaTime: number) {\n        var target = this.targetGraphic\n        if (this.transition == Transition.None || !target || !this._transitionInfo) return\n        this._transitionInfo.time += deltaTime\n        let ratio = 1.0\n        if (this.transitionDuration > 0) {\n            ratio = this._transitionInfo.time / this.transitionDuration\n        }\n        if (ratio >= 1) {\n            ratio = 1\n        }\n        if (this.transition == Transition.Scale) {\n            this._transitionInfo.current = target.node.getScale(cc.v2())\n            let from = this._transitionInfo.from as cc.Vec3\n            let to = this._transitionInfo.to as cc.Vec2\n            this._transitionInfo.current.x = Helper.lerp(from.x, to.x, ratio)\n            this._transitionInfo.current.y = Helper.lerp(from.y, to.y, ratio)\n            target.node.setScale(this._transitionInfo.current)\n        } else if (this.transition == Transition.ColorTint) {\n            let from = this._transitionInfo.from as cc.Color\n            let to = this._transitionInfo.to as cc.Color\n            // _tempColor = from.lerp(to, ratio)\n            target.node.color = from.lerp(to, ratio)\n        }\n        if (ratio === 1) {\n            this._transitionInfo = null\n        }\n    }\n    private _setOpacity(opacity: number) {\n        if (!this.handle) return\n        const handler = function (comp: any) {\n            if (comp) {\n                comp.opacity = opacity\n                // _tempColor.set(comp.color)\n                // _tempColor.a = opacity\n                // comp.color = _tempColor\n            }\n        }\n        handler(this.node.getComponent(cc.Sprite))\n        handler(this.handle.getComponent(cc.Sprite))\n    }\n    private getSteps(percentage: number) {\n        if (this.numberOfSteps > 1) {\n            percentage = Math.round(percentage * (this.numberOfSteps - 1)) / (this.numberOfSteps - 1)\n            percentage = Helper.clamp(percentage, this.dragMinLimit, this.dragMaxLimit)\n        }\n        return percentage\n    }\n}\n\n\n"]}