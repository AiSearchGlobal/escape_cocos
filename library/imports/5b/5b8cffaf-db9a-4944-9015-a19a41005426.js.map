{"version":3,"sources":["assets/script/framework/component/ViewModel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Log } from '../../utils/Log';\nimport { JsonOb } from '../core/JsonOb';\n\nconst VM_EMIT_HEAD = 'VC:';\nconst DEBUG_SHOW_PATH = false;\n\n\n//通过 .  路径 设置值\nfunction setValueFromPath(obj:any,path: string, value: any, tag:string = '') {\n    let props = path.split('.');\n    for (let i = 0; i < props.length; i++) {\n        const propName = props[i];\n        if (propName in obj === false) { Log.error('['+propName + '] not find in ' +tag+'.'+ path); break; }\n        if (i == props.length - 1) {\n            obj[propName] = value;\n        } else {\n            obj = obj[propName];\n        }\n    }\n\n}\n\n//通过 . 路径 获取值\nfunction getValueFromPath(obj:any,path: string,def?:any, tag:string = ''):any {\n    let props = path.split('.');\n    for (let i = 0; i < props.length; i++) {\n        const propName = props[i];\n        if ((propName in obj === false)) { Log.error('['+propName + '] not find in '+tag+'.'+ path); return def; }\n        // Log.log(\"class name ViewModel, func:getValueFromPath, \",obj,path)\n        obj = obj[propName];\n    }\n    if(obj === null||typeof obj === \"undefined\")obj = def;//如果g == null 则返回一个默认值\n    return obj;\n\n}\n\n\n\n/**\n * ModelViewer 类\n */\nclass ViewModel<T>{\n    constructor(data:T,tag:string) {\n        new JsonOb(data,this._callback.bind(this));\n        this.$data = data;\n        this._tag = tag;\n    }\n\n    public $data:T;\n\n    //索引值用的标签\n    private _tag:string = null;\n\n    /**激活状态, 将会通过 cc.director.emit 发送值变动的信号, 适合需要屏蔽的情况 */\n    public active:boolean = true;\n\n    /**是否激活根路径回调通知, 不激活的情况下 只能监听末端路径值来判断是否变化 */\n    public emitToRootPath:boolean = false;\n\n    //回调函数 请注意 回调的 path 数组是 引用类型，禁止修改\n    private _callback(n: any, o: any, path:string[]):void{\n            if(this.active == true){\n                let name = VM_EMIT_HEAD + this._tag+'.'+ path.join('.')\n                if(DEBUG_SHOW_PATH)cc.log('>>',n,o,path);\n                cc.director.emit(name,n,o,[this._tag].concat(path)); //通知末端路径\n\n                if(this.emitToRootPath)cc.director.emit(VM_EMIT_HEAD+this._tag,n,o,path);//通知主路径\n\n                if(path.length>=2){\n                    for (let i = 0; i < path.length-1; i++) {\n                        const e = path[i];\n                        //cc.log('中端路径');\n                        \n                    }\n                }\n\n            }\n    }\n\n    //通过路径设置数据的方法\n    public setValue(path: string, value: any) {\n        setValueFromPath(this.$data,path,value,this._tag);\n    }\n    //获取路径的值\n    public getValue(path: string,def?:any):any {\n        return getValueFromPath(this.$data,path,def,this._tag);\n    }\n}\n\n/**\n * VM 对象管理器(工厂)\n */\nclass VMManager {\n        /**静态数组，保存创建的 mv 组件 */\n        private _mvs:Array<{tag:string,vm:ViewModel<any>}> = [];\n\n        private EMIT_HEAD = VM_EMIT_HEAD;\n\n\n        /**\n         * 绑定一个数据，并且可以由VM所管理\n         * @param data 需要绑定的数据\n         * @param tag 对应该数据的标签(用于识别为哪个VM，不允许重复)\n         * @param activeRootObject 激活主路径通知，可能会有性能影响，一般不使用\n         */\n        add<T>(data:T,tag:string = 'global',activeRootObject:boolean = false){\n            let vm = new ViewModel<T>(data,tag);\n            let has = this._mvs.find(v=>v.tag === tag);\n            if(tag.includes('.')){\n                Log.error('cant write . in tag:',tag);\n                return;\n            }\n            if(has){\n                Log.error('already set VM tag:'+ tag);\n                return;\n            }\n\n            vm.emitToRootPath = activeRootObject;\n            this._mvs.push({tag:tag,vm:vm});\n            \n        }\n\n        /**\n         * 移除并且销毁 VM 对象\n         * @param tag \n         */\n        remove(tag:string){\n            let index = this._mvs.findIndex(v => v.tag === tag);\n            if(index >=0 ) this._mvs.splice(index,1);\n        }\n\n        /**\n         * 获取绑定的数据\n         * @param tag 数据tag\n         */\n        get<T>(tag:string):ViewModel<T>{\n            let res = this._mvs.find(v => v.tag === tag);\n            if(res == null){\n                Log.error('cant find VM from:',tag);\n            }else{\n                return res.vm;\n            }\n        }\n\n        /**\n         * 通过全局路径,而不是 VM 对象来 设置值\n         * @param path - 全局取值路径\n         * @param value - 需要增加的值\n         */\n        addValue(path: string, value: any) {\n            path =  path.trim();//防止空格,自动剔除\n            let rs = path.split('.');\n            if(rs.length<2){Log.error('Cant find path:'+path)};\n            let vm = this.get(rs[0]);\n            if(!vm){Log.error('Cant Set VM:'+rs[0]);return;};\n            let resPath = rs.slice(1).join('.');\n            vm.setValue(resPath,vm.getValue(resPath)+value);\n        }\n\n        /**\n         * 通过全局路径,而不是 VM 对象来 获取值\n         * @param path - 全局取值路径\n         * @param def - 如果取不到值的返回的默认值\n         */\n        getValue(path: string,def?:any):any {\n            path =  path.trim();//防止空格,自动剔除\n            let rs = path.split('.');\n            if(rs.length<2){Log.error('Get Value Cant find path:'+path);return;};\n            let vm = this.get(rs[0]);\n            if(!vm){Log.error('Cant Get VM:'+rs[0]);return;};\n            return vm.getValue(rs.slice(1).join('.'),def);\n        }\n\n        /**\n         * 通过全局路径,而不是 VM 对象来 设置值\n         * @param path - 全局取值路径\n         * @param value - 需要设置的值\n         */\n        setValue(path: string, value: any) {\n            path =  path.trim();//防止空格,自动剔除\n            let rs = path.split('.');\n            if(rs.length<2){Log.error('Set Value Cant find path:'+path);return;};\n            let vm = this.get(rs[0]);\n            if(!vm){Log.error('Cant Set VM:'+rs[0]);return;};\n            vm.setValue(rs.slice(1).join('.'),value);\n  \n        }\n\n        setObjValue = setValueFromPath;\n        getObjValue = getValueFromPath;\n\n        /**等同于 cc.director.on */\n        bindPath(path: string, callback: Function, target?: any, useCapture?: boolean):void{\n            path =  path.trim();//防止空格,自动剔除\n            if(path == ''){\n                Log.error(target.node.name,'节点绑定的路径为空');\n                return;\n            }\n            if(path.split('.')[0] === '*'){\n                Log.error(path,'路径不合法,可能错误覆盖了 VMParent 的onLoad 方法, 或者父节点并未挂载 VMParent 相关的组件脚本');\n                return;\n            }\n            cc.director.on(VM_EMIT_HEAD + path, callback, target, useCapture);\n        }\n\n        /**等同于 cc.director.off */\n        unbindPath(path: string, callback: Function, target?: any):void{\n            path =  path.trim();//防止空格,自动剔除\n            if(path.split('.')[0] === '*'){\n                Log.error(path,'路径不合法,可能错误覆盖了 VMParent 的onLoad 方法, 或者父节点并未挂载 VMParent 相关的组件脚本');\n                return;\n            }\n            cc.director.off(VM_EMIT_HEAD + path, callback, target);\n        }\n\n\n        /**冻结所有标签的 VM，视图将不会受到任何信息 */\n        inactive():void{\n            this._mvs.forEach(mv=>{\n                mv.vm.active = false;\n            })\n        }\n\n        /**激活所有标签的 VM*/\n        active():void{\n            this._mvs.forEach(mv=>{\n                mv.vm.active = true;\n            })\n        }\n\n \n\n}\n\n//   整数、小数、时间、缩写\n\n/**\n * VM管理对象,使用文档: \n *  https://github.com/wsssheep/cocos_creator_mvvm_tools/blob/master/docs/ViewModelScript.md\n */\nexport let VM = new VMManager();"]}