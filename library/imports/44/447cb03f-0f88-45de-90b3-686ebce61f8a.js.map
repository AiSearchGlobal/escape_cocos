{"version":3,"sources":["assets/script/framework/lib/base64.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\ndeclare function unescape(s: string): string;\n\n@ccclass\nexport class base64 {\n    public static encode(str) {\n        var base64EncodeChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n        var out, i, len;\n        var c1, c2, c3;\n        len = str.length;\n        i = 0;\n        out = \"\";\n        while (i < len) {\n            c1 = str.charCodeAt(i++) & 0xff;\n            if (i == len) {\n                out += base64EncodeChars.charAt(c1 >> 2);\n                out += base64EncodeChars.charAt((c1 & 0x3) << 4);\n                out += \"==\";\n                break;\n            }\n            c2 = str.charCodeAt(i++);\n            if (i == len) {\n                out += base64EncodeChars.charAt(c1 >> 2);\n                out += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));\n                out += base64EncodeChars.charAt((c2 & 0xF) << 2);\n                out += \"=\";\n                break;\n            }\n            c3 = str.charCodeAt(i++);\n            out += base64EncodeChars.charAt(c1 >> 2);\n            out += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));\n            out += base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >> 6));\n            out += base64EncodeChars.charAt(c3 & 0x3F);\n        }\n        return out;\n    }\n    public static decode(str) {\n        var base64DecodeChars = new Array(\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,\n        52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,\n        -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n        15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n        -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);\n        var c1, c2, c3, c4;\n        var i, len, out;\n        len = str.length;\n        i = 0;\n        out = \"\";\n        while (i < len) {\n            /* c1 */\n            do {\n                c1 = base64DecodeChars[str.charCodeAt(i++) & 0xff];\n            } while (i < len && c1 == -1);\n            if (c1 == -1)\n                break;\n            /* c2 */\n            do {\n                c2 = base64DecodeChars[str.charCodeAt(i++) & 0xff];\n            } while (i < len && c2 == -1);\n            if (c2 == -1)\n                break;\n            out += String.fromCharCode((c1 << 2) | ((c2 & 0x30) >> 4));\n            /* c3 */\n            do {\n                c3 = str.charCodeAt(i++) & 0xff;\n                if (c3 == 61)\n                    return out;\n                c3 = base64DecodeChars[c3];\n            } while (i < len && c3 == -1);\n            if (c3 == -1)\n                break;\n            out += String.fromCharCode(((c2 & 0XF) << 4) | ((c3 & 0x3C) >> 2));\n            /* c4 */\n            do {\n                c4 = str.charCodeAt(i++) & 0xff;\n                if (c4 == 61)\n                    return out;\n                c4 = base64DecodeChars[c4];\n            } while (i < len && c4 == -1);\n            if (c4 == -1)\n                break;\n            out += String.fromCharCode(((c3 & 0x03) << 6) | c4);\n        }\n        return out;\n    }\n    \n    \n    public static utf16to8(str) {\n        var out, i, len, c;\n        out = \"\";\n        len = str.length;\n        for (i = 0; i < len; i++) {\n            c = str.charCodeAt(i);\n            if ((c >= 0x0001) && (c <= 0x007F)) {\n                out += str.charAt(i);\n            } else if (c > 0x07FF) {\n                out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n                out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n            } else {\n                out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n            }\n        }\n        return out;\n    }\n    public static utf8to16(str) {\n        var out, i, len, c;\n        var char2, char3;\n        out = \"\";\n        len = str.length;\n        i = 0;\n        while (i < len) {\n            c = str.charCodeAt(i++);\n            switch (c >> 4) {\n                case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n                    // 0xxxxxxx\n                    out += str.charAt(i - 1);\n                    break;\n                case 12: case 13:\n                    // 110x xxxx 10xx xxxx\n                    char2 = str.charCodeAt(i++);\n                    out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n                    break;\n                case 14:\n                    // 1110 xxxx 10xx xxxx 10xx xxxx\n                    char2 = str.charCodeAt(i++);\n                    char3 = str.charCodeAt(i++);\n                    out += String.fromCharCode(((c & 0x0F) << 12) |\n                        ((char2 & 0x3F) << 6) |\n                        ((char3 & 0x3F) << 0));\n                    break;\n            }\n        }\n        return out;\n    }\n}"]}