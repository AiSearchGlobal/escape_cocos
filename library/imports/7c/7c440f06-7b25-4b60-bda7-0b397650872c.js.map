{"version":3,"sources":["assets/script/framework/adapter/manager/CenterManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// import { _decorator, v3 } from 'cc';\nimport { Group } from '../abstract/Group';\nimport { Manager } from '../abstract/Manager';\nimport { AlwaysScroll } from '../define/enum';\nimport { ScrollManager } from './ScrollManager';\nimport { ViewManager } from './ViewManager';\nconst { ccclass, property } = cc._decorator;\n@ccclass('CenterManager')\nexport class CenterManager extends Manager {\n    @property() private _enabled: boolean = false\n    @property() get enabled() { return this._enabled }\n    set enabled(value: boolean) {\n        if (value == this._enabled) return\n        this._enabled = value\n    }\n    @property({\n        visible: function () { return this.enabled },\n        tooltip: \"自动居中动画的时长\"\n    }) duration: number = 1\n    @property({\n        range: [0, 1],\n        slide: true,\n        step: 0.1,\n        tooltip: \"容器(view)的锚点,当滚动停止时,元素锚点位置会和容器锚点位置重合\"\n    }) containerAnchorPoint: number = 0\n    @property({\n        range: [0, 1],\n        slide: true,\n        step: 0.1,\n        tooltip: \"元素(item)的锚点位置,当滚动停止时,元素锚点位置会和容器锚点位置重合\"\n    }) elementAnchorPoint: number = 0\n\n    public get max() {\n        var cantainerOffset = this.getContainerOffset(this.containerAnchorPoint)\n        if (this.adapter.isArrangeAxisStart) {\n            return cantainerOffset\n        }\n        return this.adapter.mainAxisSize - cantainerOffset\n    }\n    public get min() {\n        var cantainerOffset = this.getContainerOffset(this.containerAnchorPoint)\n        if (this.adapter.isArrangeAxisStart) {\n            return this.adapter.mainAxisSize - cantainerOffset\n        } else {\n            return cantainerOffset\n        }\n    }\n\n    public getContainerOffset(containerAnchorPoint: number = this.containerAnchorPoint) {\n        var offset = 0\n        var point = 0\n        if (this.adapter.isHorizontal) {\n            point = this.adapter.multiplier == -1 ? containerAnchorPoint : 1 - containerAnchorPoint\n        } else {\n            point = this.adapter.multiplier == 1 ? containerAnchorPoint : 1 - containerAnchorPoint\n        }\n        offset = this.adapter.mainAxisSize * point\n        return offset\n    }\n    public getElementOffset(elementAnchorPoint: number = this.elementAnchorPoint) {\n        var offset = 0\n        if (this.adapter.isHorizontal) {\n            offset = this.adapter.multiplier == -1 ? elementAnchorPoint : 1 - elementAnchorPoint\n        } else {\n            offset = this.adapter.multiplier == 1 ? elementAnchorPoint : 1 - elementAnchorPoint\n        }\n        return offset\n    }\n    protected onInit(): void {\n        this.adapter.scrollManager.on(ScrollManager.Event.ON_ABOUT_TO_STOP, this._onAboutToStop, this)\n        this.adapter.viewManager.on(ViewManager.Event.ON_UPDATE_VIEWS, this.scrollToCenter, this, true)\n    }\n    private _onAboutToStop() {\n        this.scrollToCenter()\n    }\n    /**\n     * 自动居中\n     * @param duration 滚动事件\n     */\n    public scrollToCenter(duration: number = this.duration) {\n        if (!this.enabled) return\n        var visibleIndex = this.getCenterVisibleIndex()\n        if (-1 == visibleIndex) return\n        var view = this.adapter.viewManager.getVisibleView(visibleIndex)\n        this.adapter.scrollManager.scrollToGroupIndex(duration, view.index)\n    }\n    /**\n     * 获取距离给定锚点最近的单行索引\n     * @param containerAnchorPoint 容器锚点\n     * @param elementAnchorPoint 元素锚点\n     * @returns 单行索引 groupIndex\n     */\n    public getCenterVisibleIndex(containerAnchorPoint: number = this.containerAnchorPoint, elementAnchorPoint: number = this.elementAnchorPoint) {\n        var mainAxis = this.adapter.mainAxis\n        var center = this.getContainerOffset(containerAnchorPoint)\n        var visibleIndex = -1\n        var minDistance = Number.MAX_SAFE_INTEGER\n        for (let i = 0; i < this.adapter.viewManager.visibleLength; i++) {\n            const view = this.adapter.viewManager.getVisibleView(i)\n            if (!view || !view.group) break\n            var position = { x: view.group.position.x, y: view.group.position.y }\n            position[mainAxis] -= this.adapter.multiplier * view.group.size[mainAxis] * elementAnchorPoint\n            var world = this.adapter.scrollManager.content.convertToWorldSpaceAR(cc.v3(position.x, position.y))\n            var local = this.adapter.scrollManager.view.convertToNodeSpaceAR(world)\n            var distance = Math.abs(local[mainAxis] + this.adapter.multiplier * center)\n            if (distance < minDistance) {\n                minDistance = distance\n                visibleIndex = i\n            }\n        }\n        return visibleIndex\n    }\n    /**\n     * 获取单行索引的坐标\n     * @param index 单行索引 optionsIndex\n     * @param alwaysScroll 滚动方向，默认：AlwaysScroll.Auto\n     * @param priorityCheckExists 当 alwaysScroll != AlwaysScroll.Auto时 是否优先从可见列表中查找 默认false\n     * @returns 坐标\n     */\n    public getPositionByGroupIndex(index: number, alwaysScroll: AlwaysScroll = AlwaysScroll.Auto, priorityCheckExists: boolean = false) {\n        var group = this.adapter.viewManager.getGroup(index)\n        if (!group) {\n            return null\n        }\n        var target: { position: number, size: number, anchor: number } = null\n        if (alwaysScroll == AlwaysScroll.Header && this.adapter.viewManager.loopHeader) {\n            // 向头部滚动\n            if (priorityCheckExists) {\n                target = this._checkExists(index)\n            }\n            if (target == null) {\n                target = this._alwaysHeader(index, group)\n            }\n        } else if (alwaysScroll == AlwaysScroll.Footer && this.adapter.viewManager.loopFooter) {\n            // 向尾部滚动\n            if (priorityCheckExists) {\n                target = this._checkExists(index)\n            }\n            if (target == null) {\n                target = this._alwaysFooter(index, group)\n            }\n        } else {\n            // 如果目标已存在\n            target = this._checkExists(index)\n            if (target == null) {\n                // 目标不存在\n                var header = this.adapter.viewManager.header\n                var footer = this.adapter.viewManager.footer\n                if (header) {\n                    if (index > footer.index) {\n                        // 向尾部滚动\n                        target = this._calcTargetFooter(footer.group, footer.index + 1, index, group)\n                    } else if (index < header.index) {\n                        // 向头部滚动\n                        target = this._calcTargetHeader(header.group, header.index - 1, index, group)\n                    }\n                } else {\n                    // 当前可见区域为空，没有参考点\n                    // var startOptions = this.adapter.viewManager.getViewOptions(0)\n                    // target = this.calcTargetFooter(startOptions, startOptions.index, index)\n                    // TODO 测试\n                    target = {\n                        position: group.position[this.adapter.mainAxis],\n                        size: group.size[this.adapter.mainAxis],\n                        anchor: group.anchorPoint[this.adapter.mainAxis]\n                    }\n                }\n            }\n        }\n        return this._convertTargetToPosition(target)\n    }\n    private _convertTargetToPosition(target: any) {\n        var position = null\n        if (target) {\n            var multiplier = this.adapter.multiplier\n            var anchor = multiplier == -1 ? target.anchor : 1 - target.anchor\n            position = -target.position\n            position -= this.getContainerOffset() * multiplier\n            position -= target.size * anchor * multiplier\n            position += target.size * this.getElementOffset() * multiplier\n        }\n        return position\n    }\n    private _checkExists(index: number) {\n        var visibleIndex = this.adapter.viewManager.getVisibleIndexByGroupIndex(index)\n        if (-1 != visibleIndex) {\n            let view = this.adapter.viewManager.getVisibleView(visibleIndex)\n            return {\n                position: view.group.position[this.adapter.mainAxis],\n                size: view.group.size[this.adapter.mainAxis],\n                anchor: view.group.anchorPoint[this.adapter.mainAxis]\n            }\n        }\n        return null\n    }\n    /**\n     * 正序累计尺寸\n     */\n    private _calcTargetFooter(group: Group<any>, start: number, end: number, target: Group<any>) {\n        let size = this.adapter.viewManager.internal_getInitFooterSize(group)\n        for (let i = start; i <= end; i++) {\n            size += this.adapter.viewManager.internal_accumulationSize(i)\n        }\n        return {\n            position: this.adapter.viewManager.internal_convertSizeToFooterPosition(size, target),\n            size: target.size[this.adapter.mainAxis],\n            anchor: target.anchorPoint[this.adapter.mainAxis]\n        }\n    }\n    /**\n     * 倒序累计尺寸\n     */\n    private _calcTargetHeader(group: Group<any>, start: number, end: number, target: Group<any>) {\n        let size = this.adapter.viewManager.internal_getInitHeaderSize(group)\n        for (let i = start; i >= end; i--) {\n            size += this.adapter.viewManager.internal_accumulationSize(i)\n        }\n        return {\n            position: this.adapter.viewManager.internal_convertSizeToHeaderPosition(size, target),\n            size: target.size[this.adapter.mainAxis],\n            anchor: target.anchorPoint[this.adapter.mainAxis]\n        }\n    }\n    /**\n     * 朝向头部计算目标位置\n     */\n    private _alwaysHeader(index: number, target: Group<any>) {\n        var size = 0\n        var start = index\n        var header = this.adapter.viewManager.header\n        if (header) {\n            size = this.adapter.viewManager.internal_getInitHeaderSize(header.group)\n            start = header.index\n        }\n        if (index != start) {\n            size = this._calcSizeToHeader(start, index, size)\n        }\n        return {\n            position: this.adapter.viewManager.internal_convertSizeToHeaderPosition(size, target),\n            size: target.size[this.adapter.mainAxis],\n            anchor: target.anchorPoint[this.adapter.mainAxis]\n        }\n    }\n    /**\n     * 朝向尾部计算目标位置\n     * @returns \n     */\n    private _alwaysFooter(index: number, target: Group<any>) {\n        var size = 0\n        var start = index\n        var footer = this.adapter.viewManager.footer\n        if (footer) {\n            size = this.adapter.viewManager.internal_getInitFooterSize(footer.group)\n            start = footer.index\n        }\n        if (index != start) {\n            size = this._calcSizeToFooter(start, index, size)\n        }\n        return {\n            position: this.adapter.viewManager.internal_convertSizeToFooterPosition(size, target),\n            size: target.size[this.adapter.mainAxis],\n            anchor: target.anchorPoint[this.adapter.mainAxis]\n        }\n    }\n    /**\n     * 倒序累计尺寸，直到找到目标为止\n     */\n    private _calcSizeToHeader(index: number, targetIndex: number, size: number) {\n        do {\n            index--\n            if (index < 0) {\n                if (!this.adapter.viewManager.loopHeader) {\n                    return size\n                }\n                index = this.adapter.viewManager.groupLength - 1\n            }\n            size += this.adapter.viewManager.internal_accumulationSize(index)\n            if (targetIndex == index) return size\n        } while (true)\n    }\n    /**\n     * 正序累计尺寸，直到找到目标为止\n     */\n    private _calcSizeToFooter(index: number, targetIndex: number, size: number) {\n        do {\n            index++\n            if (index >= this.adapter.viewManager.groupLength) {\n                if (!this.adapter.viewManager.loopFooter) {\n                    return size\n                }\n                index = 0\n            }\n            size += this.adapter.viewManager.internal_accumulationSize(index)\n            if (index == targetIndex) return size\n        } while (true)\n    }\n}\n\n"]}