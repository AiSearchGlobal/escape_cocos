{"version":3,"sources":["assets/script/framework/component/VMAvatar.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAA8B;AAC9B,uCAAkC;AAClC,uCAAsC;AAEhC,IAAA,KAAsD,EAAE,CAAC,UAAU,EAAjE,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAA,EAAE,iBAAiB,uBAAA,EAAC,IAAI,UAAkB,CAAC;AAE1E,IAAK,WAGJ;AAHD,WAAK,WAAW;IACZ,2CAAG,CAAA;IACH,+CAAK,CAAA;AACT,CAAC,EAHI,WAAW,KAAX,WAAW,QAGf;AAED;;;GAGG;AAIH;IAAsC,4BAAM;IAA5C;QAAA,qEAgDC;QA9CG,eAAS,GAAW,EAAE,CAAC;QAMvB,gBAAU,GAAe,WAAW,CAAC,GAAG,CAAC;QAOzC,YAAM,GAAkB,IAAI,CAAC;;IAiCjC,CAAC;IA/BG,yBAAM,GAAN;QACI,iBAAM,MAAM,WAAE,CAAC;IACnB,CAAC;IAED,wBAAK,GAAL;QACI,IAAI,SAAS;YAAE,OAAO;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;IACb,8BAAW,GAAX;QACI,SAAG,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,kBAAkB;IAClB,iCAAc,GAAd,UAAe,CAAC,EAAE,CAAC,EAAE,OAAiB;QAClC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,iCAAc,GAAd,UAAe,KAAK;QAChB,IAAG,IAAI,CAAC,UAAU,IAAI,WAAW,CAAC,KAAK,EAAC;YACpC,IAAG,IAAI,CAAC,MAAM,EAAC;gBACX,gBAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aACxD;iBAAI;gBACD,SAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aACzB;SACJ;aAAI;YACD,gBAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3C;IACL,CAAC;IA7CD;QADC,QAAQ,EAAE;+CACY;IAMvB;QAJC,QAAQ,CAAC;YACN,IAAI,EAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC;YACzB,OAAO,EAAE,QAAQ;SACpB,CAAC;gDACuC;IAOzC;QALC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,WAAW;YACpB,OAAO,EAAE,QAAQ;YACjB,OAAO,EAAC,cAAW,OAAO,IAAI,CAAC,UAAU,IAAI,WAAW,CAAC,KAAK,CAAA,CAAA,CAAC;SAClE,CAAC;4CAC2B;IAfZ,QAAQ;QAH5B,OAAO;QACP,iBAAiB;QACjB,IAAI,CAAC,iCAAiC,CAAC;OACnB,QAAQ,CAgD5B;IAAD,eAAC;CAhDD,AAgDC,CAhDqC,gBAAM,GAgD3C;kBAhDoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import VMBase from './VMBase';\nimport UIHelp from '../ui/UIHelp';\nimport { Log } from '../../utils/Log';\n\nconst { ccclass, property, menu, executeInEditMode,help } = cc._decorator;\n\nenum AVATAR_TYPE {\n    URL,\n    LOCAL\n}\n\n/**\n *  [VM-Avatar]\n *  加载头像,网络or本地\n */\n@ccclass\n@executeInEditMode\n@menu('ModelViewer/VM-Avatar(网络or本地头像)')\nexport default class VMAvatar extends VMBase {\n    @property()\n    watchPath: string = \"\";\n\n    @property({\n        type:cc.Enum(AVATAR_TYPE),\n        tooltip: \"网络or本地\"\n    })\n    avatarTpye:AVATAR_TYPE = AVATAR_TYPE.URL;\n\n    @property({\n        type: cc.SpriteAtlas,\n        tooltip: '本地图片图集',\n        visible:function(){return this.avatarTpye == AVATAR_TYPE.LOCAL}\n    })\n    dAtlas:cc.SpriteAtlas = null;\n\n    onLoad() {\n        super.onLoad();\n    }\n\n    start(){\n        if (CC_EDITOR) return;\n        this.onValueInit();\n    }\n\n    /**初始化获取数据 */\n    onValueInit() {\n        Log.log(\"avatar onValueInit\");\n        this.setSpriteImage(this.VM.getValue(this.watchPath));\n    }\n\n    /**监听数据发生了变动的情况 */\n    onValueChanged(n, o, pathArr: string[]) {\n        this.setSpriteImage(n);\n    }\n\n    setSpriteImage(value) {\n        if(this.avatarTpye == AVATAR_TYPE.LOCAL){\n            if(this.dAtlas){\n                UIHelp.SetSpriteFrame(this.node, this.dAtlas, value);\n            }else{\n                Log.error(\"没有绑定头像图集\");\n            }\n        }else{\n            UIHelp.SetSpriteFrame(this.node, value);\n        }\n    }\n}\n"]}