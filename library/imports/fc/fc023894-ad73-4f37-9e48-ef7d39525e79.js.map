{"version":3,"sources":["assets/script/framework/lib/crypto.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\ndeclare function unescape(s: string): string;\n\n@ccclass\nexport class Cryptos {\n\tpublic static base64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\tpublic static util = {\n\n\t\t// Bit-wise rotate left\n\t\trotl: function (n, b) {\n\t\t\treturn (n << b) | (n >>> (32 - b));\n\t\t},\n\t\n\t\t// Bit-wise rotate right\n\t\trotr: function (n, b) {\n\t\t\treturn (n << (32 - b)) | (n >>> b);\n\t\t},\n\t\n\t\t// Swap big-endian to little-endian and vice versa\n\t\tendian: function (n) {\n\t\n\t\t\t// If number given, swap endian\n\t\t\tif (n.constructor == Number) {\n\t\t\t\treturn this.util.rotl(n,  8) & 0x00FF00FF |\n\t\t\t\tthis.util.rotl(n, 24) & 0xFF00FF00;\n\t\t\t}\n\t\n\t\t\t// Else, assume array and swap all items\n\t\t\tfor (var i = 0; i < n.length; i++)\n\t\t\t\tn[i] = this.util.endian(n[i]);\n\t\t\treturn n;\n\t\n\t\t},\n\t\n\t\t// Generate an array of any length of random bytes\n\t\trandomBytes: function (n) {\n\t\t\tfor (var bytes = []; n > 0; n--)\n\t\t\t\tbytes.push(Math.floor(Math.random() * 256));\n\t\t\treturn bytes;\n\t\t},\n\t\n\t\t// Convert a string to a byte array\n\t\tstringToBytes: function (str) {\n\t\t\tvar bytes = [];\n\t\t\tfor (var i = 0; i < str.length; i++)\n\t\t\t\tbytes.push(str.charCodeAt(i));\n\t\t\treturn bytes;\n\t\t},\n\t\n\t\t// Convert a byte array to a string\n\t\tbytesToString: function (bytes) {\n\t\t\tvar str = [];\n\t\t\tfor (var i = 0; i < bytes.length; i++)\n\t\t\t\tstr.push(String.fromCharCode(bytes[i]));\n\t\t\treturn str.join(\"\");\n\t\t},\n\t\n\t\t// Convert a string to big-endian 32-bit words\n\t\tstringToWords: function (str) {\n\t\t\tvar words = [];\n\t\t\tfor (var c = 0, b = 0; c < str.length; c++, b += 8)\n\t\t\t\twords[b >>> 5] |= str.charCodeAt(c) << (24 - b % 32);\n\t\t\treturn words;\n\t\t},\n\t\n\t\t// Convert a byte array to big-endian 32-bits words\n\t\tbytesToWords: function (bytes) {\n\t\t\tvar words = [];\n\t\t\tfor (var i = 0, b = 0; i < bytes.length; i++, b += 8)\n\t\t\t\twords[b >>> 5] |= bytes[i] << (24 - b % 32);\n\t\t\treturn words;\n\t\t},\n\t\n\t\t// Convert big-endian 32-bit words to a byte array\n\t\twordsToBytes: function (words) {\n\t\t\tvar bytes = [];\n\t\t\tfor (var b = 0; b < words.length * 32; b += 8)\n\t\t\t\tbytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n\t\t\treturn bytes;\n\t\t},\n\t\n\t\t// Convert a byte array to a hex string\n\t\tbytesToHex: function (bytes) {\n\t\t\tvar hex = [];\n\t\t\tfor (var i = 0; i < bytes.length; i++) {\n\t\t\t\thex.push((bytes[i] >>> 4).toString(16));\n\t\t\t\thex.push((bytes[i] & 0xF).toString(16));\n\t\t\t}\n\t\t\treturn hex.join(\"\");\n\t\t},\n\t\n\t\t// Convert a hex string to a byte array\n\t\thexToBytes: function (hex) {\n\t\t\tvar bytes = [];\n\t\t\tfor (var c = 0; c < hex.length; c += 2)\n\t\t\t\tbytes.push(parseInt(hex.substr(c, 2), 16));\n\t\t\treturn bytes;\n\t\t},\n\t\n\t\t// Convert a byte array to a base-64 string\n\t\tbytesToBase64: function (bytes) {\n\t\n\t\t\t// Use browser-native function if it exists\n\t\t\tif (typeof btoa == \"function\") return btoa(this.util.bytesToString(bytes));\n\t\n\t\t\tvar base64 = [],\n\t\t\t\toverflow;\n\t\n\t\t\tfor (var i = 0; i < bytes.length; i++) {\n\t\t\t\tswitch (i % 3) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tbase64.push(Cryptos.base64map.charAt(bytes[i] >>> 2));\n\t\t\t\t\t\toverflow = (bytes[i] & 0x3) << 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tbase64.push(Cryptos.base64map.charAt(overflow | (bytes[i] >>> 4)));\n\t\t\t\t\t\toverflow = (bytes[i] & 0xF) << 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tbase64.push(Cryptos.base64map.charAt(overflow | (bytes[i] >>> 6)));\n\t\t\t\t\t\tbase64.push(Cryptos.base64map.charAt(bytes[i] & 0x3F));\n\t\t\t\t\t\toverflow = -1;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Encode overflow bits, if there are any\n\t\t\tif (overflow != undefined && overflow != -1)\n\t\t\t\tbase64.push(Cryptos.base64map.charAt(overflow));\n\t\n\t\t\t// Add padding\n\t\t\twhile (base64.length % 4 != 0) base64.push(\"=\");\n\t\n\t\t\treturn base64.join(\"\");\n\t\n\t\t},\n\t\n\t\t// Convert a base-64 string to a byte array\n\t\tbase64ToBytes: function (base64) {\n\t\t\t// Use browser-native function if it exists\n\t\t\tif (typeof atob == \"function\") return this.util.stringToBytes(atob(base64));\n\t\n\t\t\t// Remove non-base-64 characters\n\t\t\tbase64 = base64.replace(/[^A-Z0-9+\\/]/ig, \"\");\n\t\n\t\t\tvar bytes = [];\n\t\n\t\t\tfor (var i = 0; i < base64.length; i++) {\n\t\t\t\tswitch (i % 4) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tbytes.push((Cryptos.base64map.indexOf(base64.charAt(i - 1)) << 2) |\n\t\t\t\t\t\t\t\t   (Cryptos.base64map.indexOf(base64.charAt(i)) >>> 4));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tbytes.push(((Cryptos.base64map.indexOf(base64.charAt(i - 1)) & 0xF) << 4) |\n\t\t\t\t\t\t\t\t   (Cryptos.base64map.indexOf(base64.charAt(i)) >>> 2));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tbytes.push(((Cryptos.base64map.indexOf(base64.charAt(i - 1)) & 0x3) << 6) |\n\t\t\t\t\t\t\t\t   (Cryptos.base64map.indexOf(base64.charAt(i))));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn bytes;\n\t\n\t\t}\n\t};\n\n\tpublic static HMAC = function (message, key, options) {\n\n\t\t// Allow arbitrary length keys\n\t\tkey = key.length > this._blocksize * 4 ?\n\t\t\t  this.SHA1(key, { asBytes: true }) :\n\t\t\t  this.util.stringToBytes(key);\n\t\n\t\t// XOR keys with pad constants\n\t\tvar okey = key,\n\t\t\tikey = key.slice(0);\n\t\tfor (var i = 0; i < this._blocksize * 4; i++) {\n\t\t\tokey[i] ^= 0x5C;\n\t\t\tikey[i] ^= 0x36;\n\t\t}\n\t\n\t\tvar hmacbytes = this.SHA1(this.util.bytesToString(okey) + this.SHA1(this.util.bytesToString(ikey) + message, { asString: true }),\n\t\t\t\t\t\t\t   { asBytes: true });\n\t\treturn options && options.asBytes ? hmacbytes :\n\t\t\t   options && options.asString ? this.util.bytesToString(hmacbytes) :\n\t\t\t   this.util.bytesToHex(hmacbytes);\n\t\n\t};\n\n\tpublic static SHA1  = function (message, options) {\n\t\tvar digestbytes = this.util.wordsToBytes(this._sha1(message));\n\t\treturn options && options.asBytes ? digestbytes :\n\t\t\t   options && options.asString ? this.util.bytesToString(digestbytes) :\n\t\t\t   this.util.bytesToHex(digestbytes);\n\t};\n\n\tpublic static _sha1 = function (message) {\n\n\t\tvar m  = this.util.stringToWords(message),\n\t\t\tl  = message.length * 8,\n\t\t\tw  =  [],\n\t\t\tH0 =  1732584193,\n\t\t\tH1 = -271733879,\n\t\t\tH2 = -1732584194,\n\t\t\tH3 =  271733878,\n\t\t\tH4 = -1009589776;\n\t\n\t\t// Padding\n\t\tm[l >> 5] |= 0x80 << (24 - l % 32);\n\t\tm[((l + 64 >>> 9) << 4) + 15] = l;\n\t\n\t\tfor (var i = 0; i < m.length; i += 16) {\n\t\n\t\t\tvar a = H0,\n\t\t\t\tb = H1,\n\t\t\t\tc = H2,\n\t\t\t\td = H3,\n\t\t\t\te = H4;\n\t\n\t\t\tfor (var j = 0; j < 80; j++) {\n\t\n\t\t\t\tif (j < 16) w[j] = m[i + j];\n\t\t\t\telse {\n\t\t\t\t\tvar n = w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16];\n\t\t\t\t\tw[j] = (n << 1) | (n >>> 31);\n\t\t\t\t}\n\t\n\t\t\t\tvar t = ((H0 << 5) | (H0 >>> 27)) + H4 + (w[j] >>> 0) + (\n\t\t\t\t\t\t j < 20 ? (H1 & H2 | ~H1 & H3) + 1518500249 :\n\t\t\t\t\t\t j < 40 ? (H1 ^ H2 ^ H3) + 1859775393 :\n\t\t\t\t\t\t j < 60 ? (H1 & H2 | H1 & H3 | H2 & H3) - 1894007588 :\n\t\t\t\t\t\t\t\t  (H1 ^ H2 ^ H3) - 899497514);\n\t\n\t\t\t\tH4 =  H3;\n\t\t\t\tH3 =  H2;\n\t\t\t\tH2 = (H1 << 30) | (H1 >>> 2);\n\t\t\t\tH1 =  H0;\n\t\t\t\tH0 =  t;\n\t\n\t\t\t}\n\t\n\t\t\tH0 += a;\n\t\t\tH1 += b;\n\t\t\tH2 += c;\n\t\t\tH3 += d;\n\t\t\tH4 += e;\n\t\n\t\t}\n\t\n\t\treturn [H0, H1, H2, H3, H4];\n\t\n\t};\n\n\tpublic static _blocksize = 16;\n}"]}