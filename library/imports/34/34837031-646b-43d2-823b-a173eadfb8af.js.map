{"version":3,"sources":["assets/script/framework/component/VMCamera.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Log } from \"../../utils/Log\";\nimport EventMng from \"../manager/EventMng\";\nimport UIBase from \"../ui/UIBase\";\nimport UIHelp from \"../ui/UIHelp\";\nconst { ccclass, menu, property } = cc._decorator;\n\n//1:相册，2:拍照\nexport enum CameraType{\n    PHOTO,\n    CAMERE,\n    All\n}\n\nexport enum XxsType{\n    OSS = 1,\n    OBS = 2,\n    AWS = 3,\n}\n\n/**\n *  [VM-Camera]\n *  专门处理 拉取手机相册或拍照\n */\n\n@ccclass\n@menu('ModelViewer/VM-Camera(拉取手机相册或拍照)')\nexport default class VMCamera extends UIBase {\n    protected static className = \"VM-Camera\";\n\n    @property({type: cc.Sprite, displayName:\"需要渲染的节点\"})\n    spr: cc.Sprite = null;\n\n    @property({\n        type: cc.Enum(CameraType),\n        displayName: \"相册or拍照or所有\"\n    })\n    cameraType:CameraType = CameraType.PHOTO;\n\n    @property({\n        type: cc.Node, displayName:\"相册按钮\",\n        visible: function () { return this.cameraType === CameraType.PHOTO || this.cameraType === CameraType.All}\n    })\n    btnPhoto: cc.Node = null;\n\n    @property({\n        type: cc.Node, displayName:\"拍照按钮\",\n        visible: function () { return this.cameraType === CameraType.CAMERE || this.cameraType === CameraType.All}\n    })\n    btnCamera: cc.Node = null;\n\n    @property({type: cc.Integer, displayName:\"图片最大MB\"})\n    maxMb: number = 5;\n\n    @property({\n        type: cc.Enum(XxsType),\n        displayName: \"云服务器\"\n    })\n    xxs:XxsType = XxsType.OSS;\n\n    @property()\n    accessKeyId: string = \"\";\n\n    @property()\n    accessKeySecret: string = \"\";\n\n    @property({\n        tooltip: '阿里云region',\n        visible: function () { return this.xxs === XxsType.OSS || this.xxs === XxsType.AWS}\n    })\n    region: string = this.xxs == XxsType.OSS ? \"oss-cn-beijing\" : \"s3.amazonaws.com\";\n\n    @property({\n        tooltip: '华为云endpoint',\n        visible: function () { return this.xxs === XxsType.OBS }\n    })\n    endpoint: string = \"obs.cn-north-4.myhuaweicloud.com\";\n\n    @property()\n    bucket: string = \"\";\n\n    @property({displayName: \"bucket下文件夹名字\"})\n    dir: string = \"\";\n\n    @property({displayName: \"域名\"})\n    realmName: string = \"\";\n\n    @property({type: [cc.Component.EventHandler], tooltip: '上传成功后，通知页面把url发送给服务端'})\n    successEvents:cc.Component.EventHandler[] = [];\n\n    onShow(){\n        if(this.btnPhoto) this.onRegisterEvent(this.btnPhoto, this.photoClick);\n        if(this.btnCamera) this.onRegisterEvent(this.btnCamera, this.cameraClick);\n    }\n\n    onHide(){\n    }\n\n    onStart(){\n    }\n\n    photoClick(){\n        this.openFile(1);\n    }\n\n    cameraClick(){\n        this.openFile(2);\n    }\n    \n    /**\n     * 打开文件操作\n     */\n    openFile(type: number) {\n        if(type == 1){\n            var input_imageFile = document.getElementById('OpenTextFile');\n        }else{\n            var input_imageFile = document.getElementById('OpenImageFile');\n        }\n        \n        if (input_imageFile == null) return;\n        // 添加需要处理的代码\n        input_imageFile.onchange = function (event) {\n            let files = event.target.files;\n\n            if (files && files.length > 0) {\n                try {\n                    this.uploading(files[0]);\n                    \n                } catch (e) {\n                    alert('文件读取失败，请再试一次');\n                    this.canRepeatUpload();\n                    return;\n                }\n            }\n        }.bind(this);\n        input_imageFile.click();\n    }\n\n    /**\n     * 允许重复上传\n     * 这里的函数操作主要是为了允许可以重复打开同一个文件\n     */\n     canRepeatUpload() {\n        let input_imageFile = document.getElementById('OpenImageFile');\n        if (input_imageFile == null) {\n            cc.log('上传失败');\n            return;\n        }\n        if (input_imageFile.outerHTML) {\n            input_imageFile.outerHTML = input_imageFile.outerHTML;\n        }\n        if (input_imageFile[\"value\"]){\n            input_imageFile[\"value\"] = null;\n        } \n    }\n\n    //将文件转为blob类型\n    readFileAsBuffer(file) {\n        const reader = new FileReader();\n        return new Promise(function(resolve, reject){\n            // reader.readAsDataURL(file);\n            // reader.onload = function(e) {\n            //     this.canRepeatUpload();\n            //     if(this.spr){\n            //         let strImg = e.target.result;\n            //         let img = new Image();\n            //         img.src = strImg;\n            //         img.onload = function () {\n            //             //将读取到图片生成一个可以给sprite使用的texture\n            //             let texture = new cc.Texture2D();\n            //             texture.initWithElement(img);\n            //             var frame = new cc.SpriteFrame(texture);\n            //             if (this.spr.node.isValid) {\n            //                 this.spr.spriteFrame = frame;\n            //             }\n            //         }.bind(this);\n            //     }\n\n            //     const base64File = reader.result[\"replace\"](/^data:\\w+\\/\\w+;base64,/,\"\");\n            //     resolve(new OSS[\"Buffer\"](base64File, \"base64\"));\n            resolve(\"\")\n            // }.bind(this);\n        }.bind(this));\n    }\n\n    async uploading(imgFile) {\n        let upType = imgFile.type;\n\n        if (upType == 'image/gif' || upType.indexOf(\"image\") < 0) {\n            UIHelp.ShowTips('只允许上传图片文件！');\n            this.canRepeatUpload();\n            return;\n        }\n\n        //限制允许上传的图片最大为5m\n        if (imgFile.size > (1024 * 1024 * this.maxMb)) {\n            UIHelp.ShowTips(`图片过大，请重新选择${this.maxMb}MB以内的图片`);\n            this.canRepeatUpload();\n            return;\n        }\n\n        if(this.xxs === XxsType.OSS){\n            this.updateOSS(imgFile);\n        }else if(this.xxs === XxsType.OBS){\n\n        }else if(this.xxs === XxsType.AWS){\n            this.updateAWS(imgFile);\n        }\n    }\n\n    async updateOSS(imgFile){\n        // let client = new OSS({\n        //     region: this.region, //你的oss地址 ，具体位置见下图\n        //     accessKeyId: this.accessKeyId, //你的ak\n        //     accessKeySecret: this.accessKeySecret, //你的secret\n        //     // stsToken: oss_obj.SecurityToken, //这里我暂时没用，注销掉\n        //     bucket: this.bucket //你的oss名字\n        // })\n\n        // var file_re = await this.readFileAsBuffer(imgFile)\n        // var imgtype = imgFile.type.substr(6,4);\n\n        // if(this.dir && this.dir[this.dir.length - 1] != \"/\"){\n        //     this.dir += \"/\"\n        // }\n\n        // var store = this.dir + new Date().getTime() + '.' + imgtype;\n        // client.put(store,  file_re).then(res =>{\n        //     //这个结果应该就是url吧\n\n        //     var url = res.url;\n\n        //     if(this.realmName){\n        //         url = this.realmName.indexOf(\"http\") >= 0 ? `${this.realmName}/${res.name}` : `http://${this.realmName}/${res.name}`\n        //     }\n        //     Log.log(res)\n        //     // var a = client.signatureUrl(store);\n        //     if(Array.isArray(this.successEvents)){\n        //         this.successEvents.forEach(v=>{\n        //             v.emit([url]);\n        //         })\n        //     }\n        //     Log.log(\"url:\", url)\n        // })\n    }\n\n    async updateAWS(file){\n        // console.log('file', file)\n        // const fileSuffix = file.name.split('.').pop()\n        // const objName = new Date().getTime() + '_' + (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1) + '.' + fileSuffix\n\n        // if(this.dir && this.dir[this.dir.length - 1] != \"/\"){\n        //     this.dir += \"/\"\n        // }\n    \n        // let s3 = new AWS.S3({\n        //     'apiVersion': '2006-03-01', // 版本\n        //     'accessKeyId': this.accessKeyId, // accessKeyId\n        //     'secretAccessKey': this.accessKeySecret, // secretAccessKey\n        //     'sessionToken': ''\n        // })\n\n        // var file_re = await this.readFileAsBuffer(file)\n        // var date = new Date()\n        // var year = date.getFullYear()\n        // var month = date.getMonth() + 1\n        // var path = `${this.dir}${year}/${month}/${objName}`;\n        // let params = {\n        //     Bucket: this.bucket, /* 储存桶名称 */\n        //     Key: path, /* 储存地址及文件名 */\n        //     Body: file_re, // 文件流\n        //     ContentType: file.type\n        // }\n        // s3.putObject(params, (err, data) => {\n        //     if (err) {\n        //         console.log('失败', err)\n        //     } else {\n        //         // successful response\n        //         if(this.realmName){\n        //             var url = `https://${this.realmName}/${path}`;\n        //         }else{\n        //             var url = `https://${this.bucket}.${this.region}/${path}`;\n        //         }\n        //         console.log(\"url：\", url);\n        //         if(Array.isArray(this.successEvents)){\n        //             this.successEvents.forEach(v=>{\n        //                 v.emit([url]);\n        //             })\n        //         }\n        //     }\n        // });\n    }\n}"]}