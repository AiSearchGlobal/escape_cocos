{"version":3,"sources":["assets/script/framework/adapter/manager/ViewManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// import { _decorator, Node, instantiate } from 'cc';\nimport { Group } from '../abstract/Group';\nimport { Holder } from '../abstract/Holder';\nimport { Manager } from '../abstract/Manager';\nimport { ScrollAdapter } from '../abstract/ScrollAdapter';\nimport { View } from '../abstract/View';\nimport { ArrangeAxis, MagneticDirection, ScrollDirection, StretchDirection } from '../define/enum';\nimport { ILike, IModel } from '../define/interface';\nimport { Helper } from '../help/helper';\nimport { ModelManager } from './ModelManager';\nimport { ScrollManager } from './ScrollManager';\nconst { ccclass, property } = cc._decorator;\nenum Event {\n    ON_SCROLL,\n    ON_LATEUPDATE,\n    ON_CLEARVIEWS,\n    ON_UPDATE_VIEWS,\n    ON_CHANGED_VIRTUALSIZE,\n    ON_MAGNETIC,\n    ON_CHANGED_OVERFLOWHEADER,\n    ON_RESET_ALL_STATE,\n    ON_CHANGED_SPACING,\n}\n@ccclass('ViewManager')\nexport class ViewManager<T = any> extends Manager {\n    public static Event = Event\n    @property({ type: ArrangeAxis }) private _arrangeAxis: ArrangeAxis = ArrangeAxis.Start\n    @property({\n        type: ArrangeAxis,\n        tooltip: `主轴方向的排列方式\n        Start: 从上到下、从左到右\n        End: 从下到上、从右到左`\n    }) public get arrangeAxis() { return this._arrangeAxis }\n    public set arrangeAxis(value: ArrangeAxis) {\n        if (value == this._arrangeAxis) return\n        this._arrangeAxis = value\n        this._resetAllState()\n    }\n    @property({\n        type: StretchDirection,\n        tooltip: `当元素的尺寸、缩放改变时，受影响的其他元素应该如何计算新的位置\n        Auto: 以可视区域中心为起点，所有其他元素向两边延伸\n        Center: 以当前变化的元素为起点，所有其他元素向两边延伸\n        Header: 以当前变化的元素和它头部的所有元素向头部延伸\n        Footer: 以当前变化的元素和它尾部的所有元素向尾部延伸`\n    }) stretchDirection: StretchDirection = StretchDirection.Auto\n    @property({\n        range: [0, 1],\n        slide: true,\n        step: 0.01,\n        tooltip: `当元素移动到可视区域外偏移多少时才进行回收\n        比如元素的尺寸为100，当元素超出可视范围 100+100*0.3 时就会被回收\n        没有特殊需求时，默认值即可`\n    }) overflowOffset: number = 0.3\n    @property({\n        range: [0, 1],\n        slide: true,\n        step: 0.01,\n        tooltip: `此值会影响填充元素的时机\n        没有特殊需求时，默认值即可`\n    }) enterOffset: number = 0\n    @property() _spacing: number = 0\n    @property({\n        tooltip: \"主轴方向元素的间隙\"\n    }) get spacing() { return this._spacing }\n    public set spacing(value: number) {\n        if (value == this._spacing) return\n        this._spacing = value\n        this._resetAllState()\n    }\n    @(property as any)({ group: { id: \"padding\", name: \"padding\" } }) left: number = 0\n    @(property as any)({ group: { id: \"padding\", name: \"padding\" } }) right: number = 0\n    @(property as any)({ group: { id: \"padding\", name: \"padding\" } }) top: number = 0\n    @(property as any)({ group: { id: \"padding\", name: \"padding\" } }) bottom: number = 0\n    @property({\n        tooltip: `磁性停靠\n        开启后，会在增加数据时，根据设置进行自动滚动到顶部或底部`\n    }) magnetic: boolean = false\n    @property({\n        type: MagneticDirection,\n        visible: function () { return this.magnetic },\n        tooltip: `停靠的方向`\n    }) magneticDirection: MagneticDirection = MagneticDirection.Header\n    @property({\n        visible: function () { return this.magnetic },\n        tooltip: \"停靠动画的时长\"\n    }) magneticDuration: number = 0.5\n    @property({\n        visible: function () { return this.magnetic },\n        tooltip: `默认情况下，仅当添加数据时才会触发停靠\n        当开启时，元素的尺寸改变时,也会否触发停靠`\n    }) magneticSizeChanges: boolean = false\n    @property({\n        tooltip: \"头部循环\"\n    }) loopHeader: boolean = false\n    @property({\n        tooltip: \"尾部循环\"\n    }) loopFooter: boolean = false\n    private _groupLength: number = 0\n    private _cacheGroups: Group<T>[] = []\n    private _groups: Group<T>[] = []\n    private _disableViews: View<T>[] = []\n    private _visibleViews: View<T>[] = []\n    private _fixedViews: View<T>[] = []\n    private _disableHolders: Holder<T>[] = []\n    private _isFill: boolean = false\n    private _headerIndex: number = -1\n    private _footerIndex: number = -1\n    private _virtualSize: number = 0\n    private _overflowHeader: number = 0\n    private _cacheHeadeDatas: T[] = []\n    private _cacheHeadePosition: ILike\n    public get header() { return this._visibleViews[0] }\n    public get footer() { return this._visibleViews[this._visibleViews.length - 1] }\n\n    public get overflowHeader() { return this._overflowHeader }\n    private set overflowHeader(value: number) {\n        if (value == this._overflowHeader) return\n        this._overflowHeader = value\n        this.emit(Event.ON_CHANGED_OVERFLOWHEADER, value)\n    }\n\n    public get virtualSize() { return this._virtualSize }\n    private set virtualSize(value: number) {\n        if (value == this._virtualSize) return\n        this._virtualSize = value\n        this.emit(Event.ON_CHANGED_VIRTUALSIZE)\n    }\n\n    public get groupLength() { return this._groupLength }\n\n    public get visibleLength() { return this._visibleViews.length }\n    public get min() {\n        if (!this.header) return 0\n        var value = this.adapter.isArrangeAxisStart\n            ? this.internal_getGroupFooterBoundary(this.footer.group)\n            : this.internal_getGroupHeaderBoundary(this.header.group)\n        return value\n    }\n    public get max() {\n        if (!this.header) return 0\n        var value = this.adapter.isArrangeAxisStart\n            ? this.internal_getGroupHeaderBoundary(this.header.group)\n            : this.internal_getGroupFooterBoundary(this.footer.group)\n        return value\n        // return this.adapter.isArrangeStart ? this.header.headerBoundary : this.footer.footerBoundary\n    }\n    protected onInit(): void {\n        this.adapter.modelManager.on(ModelManager.Event.ON_CHANGE_BEFORE, this._onModelChangeBefore, this)\n        this.adapter.modelManager.on(ModelManager.Event.ON_INSERT, this._updateGroups, this)\n        this.adapter.modelManager.on(ModelManager.Event.ON_REMOVE, this._updateGroups, this)\n        this.adapter.modelManager.on(ModelManager.Event.ON_MOVE, this._updateGroups, this)\n        this.adapter.modelManager.on(ModelManager.Event.ON_CLEAR, this._onClearModel, this)\n        this.adapter.scrollManager.on(ScrollManager.Event.ON_SCROLL, this._onScroll, this)\n        this.adapter.scrollManager.on(ScrollManager.Event.ON_VIEW_SIZE_CHANGED, this._resetAllState, this)\n        this.adapter.scrollManager.on(ScrollManager.Event.ON_CHANGED_ORIENTATION, this._resetAllState, this)\n    }\n    private _clearAll() {\n        for (let i = 0, len = this._visibleViews.length; i < len; i++) {\n            this._recycleViewToDisableViews(this._visibleViews[i])\n        }\n        this._cacheGroups.push(...this._groups)\n        this._clearFixedViews()\n        this._visibleViews.length = 0\n        this._groups.length = 0\n        this.virtualSize = 0\n        this.overflowHeader = 0\n    }\n    private _onClearModel() {\n        this._clearAll()\n        this.emit(Event.ON_CLEARVIEWS)\n    }\n    private _resetAllState() {\n        if (CC_EDITOR) return\n        this._clearAll()\n        this.internal_updateVisibleView(0)\n        this.emit(Event.ON_RESET_ALL_STATE)\n    }\n\n    /**\n     * 数据即将发生变化，在这之前缓存当前header信息\n     */\n    private _onModelChangeBefore() {\n        if (!this.header) return\n        // 优先以索引0为参考\n        if (this.virtualSize > this.adapter.mainAxisSize) {\n            var index = this.getVisibleIndexByGroupIndex(0)\n            if (-1 != index) {\n                var header = this._visibleViews[index]\n                this._cacheHeadeDatas = header.group.models.map(item => item.data)\n                this._cacheHeadePosition = {\n                    x: header.group.position.x,\n                    y: header.group.position.y,\n                }\n            } else {\n                this._cacheHeadeDatas = this.header.group.models.map(item => item.data)\n                this._cacheHeadePosition = { x: this.header.group.position.x, y: this.header.group.position.y }\n            }\n        }\n    }\n    /**\n     * 更新所有Group\n     */\n    private _updateGroups(insertIndex: number) {\n        var view = this._getViewFromDisibleViews(null)\n        var gindex = this.getGroupIndexByModelIndex(insertIndex)\n        if (-1 == gindex) {\n            gindex = this._groupLength - 1\n        }\n        var group: Group<T> = null\n        var clear = false\n        var options = { modelIndex: insertIndex, fixedIndex: -1 }\n        var prevGroup = this._groups[gindex - 1]\n        if (prevGroup) {\n            options.fixedIndex = prevGroup.fixedIndex\n        }\n        while (true) {\n            group = this._groups[gindex]\n            if (!group) {\n                group = this._getGroupFromCache()\n                group.internal_setIndex(this._groups.length)\n                this._groups.push(group)\n                gindex = this._groups.length\n            }\n            var ok = group.internal_insert(options, view, clear)\n            gindex++\n            clear = true\n            if (!ok) {\n                break\n            }\n        }\n        var caches = this._groups.splice(gindex, this._groups.length)\n        this._cacheGroups.push(...caches)\n        this._groupLength = this._groups.length\n        // 查询变化前的画面信息\n        var referIndex = -1\n        var virtualSize = 0\n        if (this._cacheHeadeDatas.length > 0) {\n            referIndex = this._groups.findIndex(item => item.internal_includes(this._cacheHeadeDatas))\n        }\n        var relative = this._groups[referIndex]\n        if (relative) {\n            // 如果参考点存在，则保持不动\n            virtualSize += relative.size[this.adapter.mainAxis] + this.spacing\n            relative.internal_setPosition(this._cacheHeadePosition[this.adapter.mainAxis])\n        }\n        // 以参考点为起始向下上扩展\n        for (let i = referIndex - 1; i >= 0; i--) {\n            var curr = this._groups[i]\n            this._calcMainAxisPosition(curr, relative, MagneticDirection.Header)\n            virtualSize += curr.size[this.adapter.mainAxis] + this.spacing\n            relative = curr\n        }\n        relative = this._groups[referIndex]\n        // 以参考点为起始向下扩展\n        for (let i = referIndex + 1; i < this.groupLength; i++) {\n            var curr = this._groups[i]\n            this._calcMainAxisPosition(curr, relative, MagneticDirection.Footer)\n            virtualSize += curr.size[this.adapter.mainAxis] + this.spacing\n            relative = curr\n        }\n        virtualSize -= this.spacing\n        this._virtualSize = Math.max(0, virtualSize)\n        this._resetOverflowHeader(this._groups[0])\n        view.internal_reset()\n        this._disableViews.push(view)\n        this.updateVisibles(referIndex)\n        this._cacheHeadeDatas = []\n        this._cacheHeadePosition = null\n    }\n    private updateVisibles(referIndex: number) {\n        var cacheHolders = []\n        referIndex = Math.max(0, referIndex)\n        const findHolder = (model: IModel<T>) => {\n            var index = cacheHolders.findIndex(holder => holder.oldData == model.data)\n            if (-1 != index) {\n                return cacheHolders.splice(index, 1)[0]\n            }\n            return null\n        }\n        // 将所有holder取出来\n        for (let i = 0; i < this._visibleViews.length; i++) {\n            const view = this._visibleViews[i];\n            cacheHolders = cacheHolders.concat(view.holderList)\n            view.internal_reset()\n        }\n        var mainAxisSize = this.adapter.mainAxisSize\n        var visibleIndex = 0\n        var length = this.visibleLength\n        for (let i = referIndex, len = this._groups.length; i < len; i++) {\n            const group = this._groups[i]\n            var visibleSize = this.getVisibleMainAxisSize()\n            if (visibleSize >= mainAxisSize && length <= 0) {\n                break\n            }\n            var view = this._visibleViews[visibleIndex++]\n            if (!view) {\n                view = this._getViewFromDisibleViews(group.index)\n                this._visibleViews.push(view)\n            }\n            // 只处理创建Holder的逻辑，不会马上显示\n            view.internal_preVisible(group, findHolder)\n            length--\n        }\n        // 回收空view\n        for (let i = this._visibleViews.length - 1; i >= 0; i--) {\n            var view = this._visibleViews[i]\n            if (view.holderList.length > 0) {\n                break\n            }\n            this._disableFromVisibleViews(i)\n        }\n        // 回收未使用的holder\n        for (let i = 0, len = cacheHolders.length; i < len; i++) {\n            const holder = cacheHolders[i];\n            holder.internal_disable()\n            this._disableHolders.push(holder)\n        }\n        // 最后将所有Holder显示（解决：向数据头部添加数据时，每个Holder在显示同时修改了尺寸，导致后续的Holder坐标没有更新）\n        // 解决办法：将显示的逻辑放到最后执行\n        for (let i = 0; i < this.visibleLength; i++) {\n            this._visibleViews[i].internal_visible()\n        }\n        this._forceFill()\n        this._calcMagnetic()\n        this.emit(Event.ON_UPDATE_VIEWS)\n    }\n    private _getGroupFromCache() {\n        var group = this._cacheGroups.pop()\n        if (!group) {\n            group = new Group<T>(this.adapter)\n        }\n        group.internal_reset()\n        return group\n    }\n    private _calcMagnetic() {\n        if (!this.magnetic) return\n        if (!this.header) return\n        var ok = false\n        if (this.adapter.scrollManager.velocity == 0) {\n            if (this.magneticDirection == MagneticDirection.Footer) {\n                if (this.footer.index == this._groupLength - 1) {\n                    this.adapter.scrollManager.scrollToFooter(this.magneticDuration)\n                    ok = true\n                }\n            } else {\n                if (this.header.index == 0) {\n                    this.adapter.scrollManager.scrollToHeader(this.magneticDuration)\n                    ok = true\n                }\n            }\n        }\n        this.emit(Event.ON_MAGNETIC, ok)\n    }\n    private _calcMainAxisPosition(group: Group<T>, relativeGroup: Group<T>, direction: MagneticDirection) {\n        if (!group) return\n        if (!relativeGroup) {\n            // this._setGroupPosition(group, this._getMainAxisHeaderPosition(group))\n            group.internal_setPosition(this._getMainAxisHeaderPosition(group))\n        } else {\n            var xy = this.adapter.mainAxis\n            var multiplier = this.adapter.multiplier\n            var dirMultiplier = direction == MagneticDirection.Footer ? 1 : -1\n            var relPoint, curPoint\n            if (direction == MagneticDirection.Footer) {\n                relPoint = multiplier == 1 ? relativeGroup.anchorPoint[xy] : 1 - relativeGroup.anchorPoint[xy]\n                curPoint = multiplier == 1 ? 1 - group.anchorPoint[xy] : group.anchorPoint[xy]\n            } else {\n                relPoint = multiplier == 1 ? 1 - relativeGroup.anchorPoint[xy] : relativeGroup.anchorPoint[xy]\n                curPoint = multiplier == 1 ? group.anchorPoint[xy] : 1 - group.anchorPoint[xy]\n            }\n            var position = relativeGroup.position[xy]\n            position -= (relativeGroup.size[xy] * relPoint * dirMultiplier) * multiplier\n            position -= this.spacing * multiplier * dirMultiplier\n            position -= (group.size[xy] * curPoint * dirMultiplier) * multiplier\n            // this._setGroupPosition(group, position)\n            group.internal_setPosition(position)\n        }\n    }\n    private _getMainAxisHeaderPosition(group: Group<T>) {\n        var position = 0\n        var anchor = 0\n        if (this.adapter.isVertical) {\n            position = this.adapter.isArrangeAxisStart ? -this.top : this.bottom\n            anchor = this.adapter.isArrangeAxisStart ? 1 - group.anchorPoint[this.adapter.mainAxis] : group.anchorPoint[this.adapter.mainAxis]\n        } else {\n            position = this.adapter.isArrangeAxisStart ? this.left : -this.right\n            anchor = this.adapter.isArrangeAxisStart ? group.anchorPoint[this.adapter.mainAxis] : 1 - group.anchorPoint[this.adapter.mainAxis]\n        }\n        position -= anchor * group.size[this.adapter.mainAxis] * this.adapter.multiplier\n        return position\n    }\n\n    private _getViewFromDisibleViews(groupIndex: number): View<T> {\n        var view = null\n        if (groupIndex != null) {\n            var index = this._fixedViews.findIndex(view => view.index == groupIndex)\n            if (-1 != index) {\n                var remView = this._fixedViews.splice(index, 1)[0]\n                this._recycleViewToDisableViews(remView)\n            }\n        }\n        if (!view) {\n            view = this._disableViews.pop()\n        }\n        if (!view) {\n            view = this.adapter.getView()\n        }\n        return view\n    }\n    private _getHolderFromDisableHolders(model: IModel<T>) {\n        var index = this._disableHolders.findIndex(holder => holder.code == model.code)\n        if (-1 != index) {\n            return this._disableHolders.splice(index, 1)[0]\n        }\n    }\n    /**\n     * 禁用 view 并回收所有节点\n     * @param visibleIndex 可视view索引\n     */\n    private _disableFromVisibleViews(visibleIndexOrView: number | View) {\n        var remIndex = -1\n        if (visibleIndexOrView instanceof View) {\n            remIndex = this._visibleViews.findIndex(item => item.index == visibleIndexOrView.index)\n        } else {\n            remIndex = visibleIndexOrView\n        }\n        this._recycleViewToDisableViews(this._visibleViews[remIndex])\n        this._visibleViews.splice(remIndex, 1)\n    }\n    private _recycleViewToDisableViews(view: View) {\n        if (!view) return\n        view.internal_recycleHolders(holder => this._disableHolders.push(holder))\n        view.internal_disable()\n        this._disableViews.push(view)\n    }\n    private _clearFixedViews() {\n        for (let i = 0, len = this._fixedViews.length; i < len; i++) {\n            const view = this._fixedViews[i];\n            this._recycleViewToDisableViews(view)\n        }\n        this._fixedViews.length = 0\n    }\n    private _checkHeaderInvisible() {\n        if (!this.header) return\n        if (!this.loopFooter && this.footer.index == this.groupLength - 1) {\n            return\n        }\n        if (this._isOverflowHeader(this.header.group)) {\n            this._disableFromVisibleViews(0)\n            this._checkHeaderInvisible()\n        }\n    }\n    private _checkFooterInvisible() {\n        if (!this.footer) return\n        if (!this.loopHeader && this.header.index == 0) {\n            return\n        }\n        if (this._isOverflowFooter(this.footer.group)) {\n            this._disableFromVisibleViews(this._visibleViews.length - 1)\n            this._checkFooterInvisible()\n        }\n    }\n\n    private _isOverflowHeader(group: Group<T>, defaultOffset: number = this.overflowOffset) {\n        var footerBoundary = this.internal_getGroupFooterBoundary(group)\n        defaultOffset = defaultOffset * group.size[this.adapter.mainAxis]\n        return this.adapter.multiplier == 1 ? footerBoundary >= defaultOffset : footerBoundary <= -defaultOffset\n    }\n    private _isOverflowFooter(group: Group<T>, defaultOffset: number = this.overflowOffset) {\n        var headerBoundary = this.internal_getGroupHeaderBoundary(group)\n        defaultOffset = defaultOffset * group.size[this.adapter.mainAxis]\n        return this.adapter.multiplier == 1\n            ? headerBoundary + this.adapter.mainAxisSize <= -defaultOffset\n            : headerBoundary - this.adapter.mainAxisSize >= defaultOffset\n    }\n\n    private _isEnterFooter(group: Group<T>) {\n        if (!group) return false\n        var footerBoundary = this.internal_getGroupFooterBoundary(group)\n        var defaultOffset = (this.enterOffset) * group.size[this.adapter.mainAxis]\n        return this.adapter.multiplier == 1\n            ? footerBoundary + this.adapter.mainAxisSize + defaultOffset >= 0\n            : footerBoundary - this.adapter.mainAxisSize - defaultOffset <= 0\n    }\n    private _isEnterHeader(group: Group<T>) {\n        if (!group) return false\n        var headerBoundary = this.internal_getGroupHeaderBoundary(group)\n        var defaultOffset = (this.overflowOffset) * group.size[this.adapter.mainAxis]\n        return this.adapter.multiplier == 1\n            ? headerBoundary - defaultOffset <= 0\n            : headerBoundary + defaultOffset >= 0\n    }\n\n    private _fillHeader() {\n        var group = this._groups[this._headerIndex]\n        if (!this._isEnterHeader(group)) {\n            return\n        }\n        // 初始化尺寸\n        var { index, size } = this._accumTargetSizeTowardsHeader(group.index, this.internal_getInitHeaderSize(group))\n        var target = this._groups[index]\n        if (!target) {\n            return\n        }\n        if (-1 != this.getVisibleIndexByGroupIndex(index)) {\n            return\n        }\n        var position = this.internal_convertSizeToHeaderPosition(size, target)\n        // this._setGroupPosition(target, position)\n        target.internal_setPosition(position)\n        var view = this._getViewFromDisibleViews(target.index)\n        this._visibleViews.unshift(view)\n        view.internal_preVisible(target).internal_visible()\n        if (view.index == 0) {\n            this._resetOverflowHeader(view.group)\n        }\n        this._headerIndex = target.index\n        this._fillHeader()\n    }\n    private _fillFooter() {\n        var group = this._groups[this._footerIndex]\n        if (!this._isEnterFooter(group)) {\n            return\n        }\n        // 初始化尺寸\n        var { index, size } = this._accumTargetSizeTowardsFooter(group.index, this.internal_getInitFooterSize(group))\n        var target = this._groups[index]\n        if (!target) {\n            return\n        }\n        if (-1 != this.getVisibleIndexByGroupIndex(index)) {\n            return\n        }\n        var position = this.internal_convertSizeToFooterPosition(size, target)\n        target.internal_setPosition(position)\n        // this._setGroupPosition(target, position)\n        var view = this._getViewFromDisibleViews(target.index)\n        this._visibleViews.push(view)\n        view.internal_preVisible(target).internal_visible()\n        if (view.index == 0) {\n            this._resetOverflowHeader(view.group)\n        }\n        this._footerIndex = target.index\n        this._fillFooter()\n    }\n    private _fillFixedView() {\n        if (!this.header || (this.header.group.fixedIndex == -1 && !this.header.group.isFixed)) {\n            return\n        }\n        var startIndex = this.header.index\n        var mainAxis = this.adapter.mainAxis\n        // 创建当前应该显示的fixed\n        var size = this.internal_getInitHeaderSize(this.header.group)\n        for (let i = startIndex - 1; i >= 0; i--) {\n            var group = this._groups[i]\n            if (!group) {\n                console.error(\"_fillFixedView错误 找不到group\", i)\n                return\n            }\n            size += group.size[mainAxis] + this.spacing\n            if (!group.isFixed) {\n                continue\n            }\n            var position = this.internal_convertSizeToHeaderPosition(size, group)\n            if (-1 != this._fixedViews.findIndex(view => view.index == group.index)) {\n                if (!Helper.approximately(position, group.position[mainAxis])) {\n                    // this._setGroupPosition(group, position)\n                    group.internal_setPosition(position)\n                    this.adapter.layoutManager.layout(group)\n                }\n                break\n            }\n            this._clearFixedViews()\n            var position = this.internal_convertSizeToHeaderPosition(size, group)\n            // this._setGroupPosition(group, position)\n            group.internal_setPosition(position)\n            var view = this._getViewFromDisibleViews(group.index)\n            view.internal_preVisible(group).internal_visible()\n            this._fixedViews.push(view)\n            break\n        }\n    }\n    private _accumTargetSizeTowardsHeader(index: number, size: number) {\n        var length = this._groups.length\n        do {\n            if (index == 0) {\n                if (this.loopHeader) {\n                    index = length\n                }\n            }\n            if (index == 0) {\n                return { index, size }\n            }\n            index--\n            var info = this._groups[index]\n            if (!info) {\n                return { index, size }\n            }\n            size += this.internal_accumulationSize(index)\n            if (size >= 0) {\n                return { index, size }\n            }\n        } while (true)\n    }\n    private _accumTargetSizeTowardsFooter(index: number, size: number) {\n        var length = this._groups.length\n        do {\n            if (index == length - 1) {\n                if (this.loopFooter) {\n                    index = -1\n                }\n            }\n            if (index == length - 1) {\n                return { index, size }\n            }\n            index++\n            var viewInfo = this._groups[index]\n            if (!viewInfo) {\n                return { index, size }\n            }\n            size += this.internal_accumulationSize(index)\n            if (size >= 0) {\n                return { index, size }\n            }\n        } while (true)\n    }\n\n    private _fillFooterHandle() {\n        this._checkHeaderInvisible()\n        this._fillFooter()\n    }\n    private _fillHeaderHandle() {\n        this._checkFooterInvisible()\n        this._fillHeader()\n    }\n    private _forceFill() {\n        this._updateHeaderFooterIndex()\n        this._fillHeaderHandle()\n        this._fillFooterHandle()\n    }\n    private _updateHeaderFooterIndex() {\n        this._headerIndex = this.header ? this.header.index : 0\n        this._footerIndex = this.footer ? this.footer.index : 0\n    }\n    private _onScroll(direction: ScrollDirection) {\n        if (this._groups.length == 0) return\n        this._updateHeaderFooterIndex()\n        switch (direction) {\n            case ScrollDirection.Up:\n            case ScrollDirection.Left:\n                // 向下填充 \n                if (this.adapter.isArrangeAxisStart) {\n                    this._fillFooterHandle()\n                } else {\n                    this._fillHeaderHandle()\n                }\n                break\n            case ScrollDirection.Down:\n            case ScrollDirection.Right:\n                // 向上填充\n                if (this.adapter.isArrangeAxisStart) {\n                    this._fillHeaderHandle()\n                } else {\n                    this._fillFooterHandle()\n                }\n                break\n        }\n        this._fillFixedView()\n        this.emit(Event.ON_SCROLL)\n    }\n    /**\n     * 向头部伸展\n     */\n    private _stretchToHeader(current: number, start: number) {\n        // 以当前改变的内容为基础 向上头部延伸\n        var prev = this._visibleViews[current]\n        for (let i = start; i >= 0; i--) {\n            const curr = this._visibleViews[i];\n            if (prev) {\n                this._calcMainAxisPosition(curr.group, prev.group, MagneticDirection.Header)\n                this.adapter.layoutManager.layout(curr.group)\n            } else if (this.getVisibleMainAxisSize() < this.adapter.mainAxisSize) {\n                this._calcMainAxisPosition(curr.group, null, MagneticDirection.Header)\n            }\n            prev = curr\n        }\n    }\n    /**\n     * 向尾部伸展\n     */\n    private _stretchToFooter(current: number, start: number) {\n        // 以当前改变的内容为基础 向上尾部延伸\n        var prev = this._visibleViews[current]\n        for (let i = start; i < this._visibleViews.length; i++) {\n            const curr = this._visibleViews[i];\n            if (prev) {\n                this._calcMainAxisPosition(curr.group, prev.group, MagneticDirection.Footer)\n                this.adapter.layoutManager.layout(curr.group)\n            } else if (this.getVisibleMainAxisSize() < this.adapter.mainAxisSize) {\n                this._calcMainAxisPosition(curr.group, null, MagneticDirection.Footer)\n            }\n            prev = curr\n        }\n    }\n    /**\n     * 重置overflowHeader 使其保持在0的位置\n     */\n    private _resetOverflowHeader(group: Group<any>) {\n        if (!group) return this.overflowHeader = 0\n        var mainAxis = this.adapter.mainAxis\n        var anchor = group.anchorPoint[mainAxis]\n        anchor = this.adapter.multiplier == 1 ? 1 - anchor : anchor\n        var offset = group.position[mainAxis]\n        offset += group.size[mainAxis] * anchor * this.adapter.multiplier\n        this.overflowHeader = offset\n    }\n    /**\n    * 当item尺寸改变时 计算相对于content的头部溢出偏移量\n    */\n    private _calcOverflowHeader(group: Group<T>, centerIndex: number, visibleIndex: number) {\n        var zero = this.getVisibleIndexByGroupIndex(0)\n        if (-1 != zero) {\n            var header = this._visibleViews[zero]\n            return this._resetOverflowHeader(header.group)\n        }\n        var mainAxis = this.adapter.mainAxis\n        var anchor = group.anchorPoint[mainAxis]\n        anchor = this.adapter.multiplier == 1 ? 1 - anchor : anchor\n        var oldSize = group.oldSize[mainAxis]\n        var newSize = group.size[mainAxis]\n        var multiplier = this.adapter.multiplier\n        switch (this.stretchDirection) {\n            case StretchDirection.Header://✅\n                // 判断改变的item是否有被testNode覆盖 也就是说是否在范围内，如果不在则不用理会\n                // 判断旧坐标是否大于overflowHeader 大于说明有被覆盖\n                var oldOffset = group.oldPosition[mainAxis] + (oldSize * anchor) * multiplier\n                var ok = multiplier == 1 ? this.overflowHeader >= oldOffset : this.overflowHeader <= oldOffset\n                if (ok) {\n                    this.overflowHeader += (newSize - oldSize) * multiplier\n                }\n                break\n            case StretchDirection.Footer://✅\n                var oldOffset = group.oldPosition[mainAxis] + (oldSize * anchor) * multiplier\n                var ok = multiplier == 1 ? this.overflowHeader >= oldOffset : this.overflowHeader <= oldOffset\n                if (ok) {\n                } else {\n                    this.overflowHeader -= (newSize - oldSize) * multiplier\n                }\n                break\n            case StretchDirection.Center://✅\n                var oldOffset = group.oldPosition[mainAxis] + (oldSize * anchor) * multiplier\n                var ok = multiplier == 1 ? this.overflowHeader >= oldOffset : this.overflowHeader <= oldOffset\n                if (ok) {\n                    this.overflowHeader += (newSize - oldSize) * 0.5 * multiplier\n                } else {\n                    this.overflowHeader -= (newSize - oldSize) * 0.5 * multiplier\n                }\n                break\n            case StretchDirection.Auto://✅\n                var oldOffset = group.oldPosition[mainAxis] + (oldSize * anchor) * multiplier\n                var ok = multiplier == 1 ? this.overflowHeader >= oldOffset : this.overflowHeader <= oldOffset\n                if (centerIndex <= visibleIndex) {\n                    oldOffset = group.oldPosition[mainAxis] + (oldSize * anchor) * multiplier\n                    ok = multiplier == -1 ? this.overflowHeader >= oldOffset : this.overflowHeader <= oldOffset\n                }\n                if (ok) {\n                    if (centerIndex <= visibleIndex) {\n                        this.overflowHeader -= (newSize - oldSize) * multiplier\n                    } else {\n                        this.overflowHeader += (newSize - oldSize) * multiplier\n                    }\n                }\n                break\n        }\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_lateUpdate(deltaTime: number) {\n        if (this._isFill) {\n            this._isFill = false\n            this._forceFill()\n        }\n        this.emit(Event.ON_LATEUPDATE, deltaTime)\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_viewChanged(view: View, oldMainAxisSize: number) {\n        var cross = view.group.size[this.adapter.mainAxis] - oldMainAxisSize\n        this.virtualSize += cross\n        var visibleIndex = this.getVisibleIndexByGroupIndex(view.index)\n        var centerIndex = -1\n        if (this.getVisibleMainAxisSize() < this.adapter.mainAxisSize || this.stretchDirection == StretchDirection.Footer) {\n            // 以当前改变的内容为基础 向上尾部延伸\n            let prev = visibleIndex - 1\n            if (!this._visibleViews[prev]) {\n                this.adapter.layoutManager.layout(view.group)\n            }\n            this._stretchToFooter(prev, visibleIndex)\n        } else if (this.stretchDirection == StretchDirection.Header) {\n            // 以当前改变的内容为基础 向上头部延伸\n            let prev = visibleIndex + 1\n            if (!this._visibleViews[prev]) {\n                this.adapter.layoutManager.layout(view.group)\n            }\n            this._stretchToHeader(prev, visibleIndex)\n        } else if (this.stretchDirection == StretchDirection.Center) {\n            this.adapter.layoutManager.layout(view.group)\n            this._stretchToHeader(visibleIndex, visibleIndex - 1)\n            this._stretchToFooter(visibleIndex, visibleIndex + 1)\n        } else {\n            centerIndex = this.adapter.centerManager.getCenterVisibleIndex()\n            if (-1 != centerIndex) {\n                var center = this._visibleViews[centerIndex]\n                this.adapter.layoutManager.layout(center.group)\n                this._stretchToHeader(centerIndex, centerIndex - 1)\n                this._stretchToFooter(centerIndex, centerIndex + 1)\n            } else {\n                throw Error(\"找不到中心索引\" + view.index)\n            }\n\n        }\n        // 尺寸改变时 修复百分比\n        this._calcOverflowHeader(view.group, centerIndex, visibleIndex)\n        if (this.magneticSizeChanges) {\n            this._calcMagnetic()\n        }\n        this._isFill = true\n        this.emit(Event.ON_CHANGED_VIRTUALSIZE)\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_getHolder(model: IModel<T>): Holder<T, ScrollAdapter> {\n        var holder = this._getHolderFromDisableHolders(model)\n        if (!holder) {\n            var prefab = this.adapter.getPrefab(model.data)\n            var node = cc.instantiate(prefab) as cc.Node\n            holder = this.adapter.getHolder(node, model.code)\n        }\n        holder.node.parent = this.adapter.scrollManager.getLayerNode(model.element.layer)\n        return holder\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_updateVisibleView(index: number) {\n        // 延迟刷新，取最小影响行数\n        this._onModelChangeBefore()\n        this._updateGroups(index)\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_getGroupFooterBoundary(group: Group<T>) {\n        if (!group) return 0\n        var anchor = group.anchorPoint[this.adapter.mainAxis]\n        anchor = this.adapter.multiplier == 1 ? anchor : 1 - anchor\n        var value = group.position[this.adapter.mainAxis]\n        value -= (group.size[this.adapter.mainAxis] * anchor) * this.adapter.multiplier\n        value += this.adapter.scrollManager.contentPosition\n        return value\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_getGroupHeaderBoundary(group: Group<T>) {\n        if (!group) return 0\n        var anchor = group.anchorPoint[this.adapter.mainAxis]\n        anchor = this.adapter.multiplier == 1 ? 1 - anchor : anchor\n        var value = group.position[this.adapter.mainAxis]\n            + this.adapter.scrollManager.contentPosition\n            + (anchor * group.size[this.adapter.mainAxis]) * this.adapter.multiplier\n        return value\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_getInitHeaderSize(group: Group<T>) {\n        if (!group) return 0\n        var anchor = group.anchorPoint[this.adapter.mainAxis]\n        anchor = this.adapter.multiplier == 1 ? 1 - anchor : anchor\n        var value = -group.position[this.adapter.mainAxis] * this.adapter.multiplier\n        value -= group.size[this.adapter.mainAxis] * anchor\n        value -= this.adapter.scrollManager.contentPosition * this.adapter.multiplier\n        value = this.adapter.mainAxisSize - value\n        return value\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_getInitFooterSize(group: Group<T>) {\n        if (!group) return 0\n        var anchor = group.anchorPoint[this.adapter.mainAxis]\n        anchor = this.adapter.multiplier == 1 ? anchor : 1 - anchor\n        var value = -group.position[this.adapter.mainAxis] * this.adapter.multiplier\n        value += group.size[this.adapter.mainAxis] * anchor\n        value -= this.adapter.scrollManager.contentPosition * this.adapter.multiplier\n        return value\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_accumulationSize(index: number) {\n        var group = this._groups[index]\n        if (!group) return 0\n        return group.size[this.adapter.mainAxis] + this.spacing\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_convertSizeToFooterPosition(totalSize: number, group: Group<T>) {\n        var anchor = group.anchorPoint[this.adapter.mainAxis]\n        anchor = this.adapter.multiplier == 1 ? anchor : 1 - anchor\n        var size = group.size[this.adapter.mainAxis] * anchor\n\n        var value = -this.adapter.scrollManager.contentPosition\n        value -= (this.adapter.multiplier * totalSize - this.adapter.multiplier * size)\n        return value\n    }\n    /** @deprecated 内部方法，调用会爆炸💥 */\n    public internal_convertSizeToHeaderPosition(totalSize: number, group: Group<T>) {\n        var anchor = group.anchorPoint[this.adapter.mainAxis]\n        anchor = this.adapter.multiplier == 1 ? 1 - anchor : anchor\n        var size = group.size[this.adapter.mainAxis] * anchor\n\n        var value = this.adapter.multiplier * totalSize - this.adapter.multiplier * size\n        value -= this.adapter.multiplier * this.adapter.mainAxisSize\n        value -= this.adapter.scrollManager.contentPosition\n        return value\n    }\n    // public\n    public getGroup(index: number) {\n        return this._groups[index]\n    }\n    public getVisibleView(index: number) {\n        return this._visibleViews[index]\n    }\n    public getVisibleMainAxisSize(): number {\n        if (this._visibleViews.length == 0) return 0\n        var size = 0\n        var xy = this.adapter.mainAxis\n        for (let i = 0, len = this._visibleViews.length; i < len; i++) {\n            const view = this._visibleViews[i];\n            if (view.group) {\n                size += view.group.size[xy] + this.spacing\n            }\n        }\n        size -= this.spacing\n        return size\n    }\n    public getGroupIndexByModelIndex(modelIndex: number) {\n        for (let i = 0, len = this._groups.length; i < len; i++) {\n            const group = this._groups[i]\n            var index = group.findModelIndex(modelIndex)\n            if (-1 != index) return i\n        }\n        return -1\n    }\n\n    public getVisibleIndexByGroupIndex(index: number) {\n        return this._visibleViews.findIndex(view => view.index == index)\n    }\n    public getNextFixedHolders(index: number) {\n        var list = []\n        var start = this.getVisibleIndexByGroupIndex(index)\n        for (let i = start + 1, len = this._visibleViews.length; i < len; i++) {\n            const view = this._visibleViews[i]\n            if (view.index == index) continue\n            if (view.group.isFixed) {\n                list = view.getFixedHolders()\n                break\n            }\n        }\n        return list\n    }\n    public getMagneticOffset() {\n        if (!this.magnetic) {\n            return 0\n        }\n        var direction = this.adapter.isHorizontal ? -this.adapter.multiplier : this.adapter.multiplier\n        if (this.magneticDirection == MagneticDirection.Footer) {\n            if (!this.footer) {\n                return this.adapter.mainAxisSize * direction\n            }\n            var value = Math.max(0, this.adapter.mainAxisSize - this.adapter.mainAxisPadding - this.getVisibleMainAxisSize()) * direction\n            return value\n        }\n        return 0\n    }\n}\n"]}