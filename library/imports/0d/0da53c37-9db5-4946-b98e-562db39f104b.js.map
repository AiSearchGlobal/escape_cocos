{"version":3,"sources":["assets/script/userData/GameDataCenter.ts"],"names":[],"mappings":";;;;;;AACA,sEAAqE;AACrE,gEAAwD;AACxD,6CAAwC;AACxC,+CAA0C;AAC1C,iDAA4C;AAC5C,mDAA8C;AAE9C;IAUI;QATQ,YAAO,GAAsB,EAAE,CAAC;QAExC,iBAAY,GAAiB,IAAI,CAAC;QAClC,gBAAW,GAAgB,IAAI,CAAC;QAChC,kBAAa,GAAkB,IAAI,CAAC;QACpC,mBAAc,GAAmB,IAAI,CAAC;QAKlC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;IACnC,CAAC;IAED,iCAAQ,GAAR,UAA+B,CAAe;QAC1C,IAAI,GAAG,GAAG,mCAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,OAAO,GAAG,CAAC;IACf,CAAC;IAED,8BAAK,GAAL;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,CAAC;YAClB,CAAC,CAAC,KAAK,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAU,GAAV;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,sBAAY,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,qBAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAa,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,wBAAc,CAAC,CAAC;QAEpD,cAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACrC,cAAE,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;QACvC,cAAE,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;IAC7C,CAAC;IACL,qBAAC;AAAD,CApCA,AAoCC,IAAA;AAED,kBAAe,IAAI,cAAc,EAAE,CAAC;AACnC,MAAc,CAAC,cAAc,GAAG,cAAc,CAAC","file":"","sourceRoot":"/","sourcesContent":["import IDataModel from \"../framework/model/IDataModel\";\nimport { SingletonFactory } from \"../framework/lib/SingletonFactory\";\nimport { VM } from './../framework/component/ViewModel';\nimport SocketModel from \"./SocketModel\";\nimport AccountModel from \"./AccountModel\";\nimport RoomInfoModel from \"./RoomInfoModel\";\nimport RoomChoseModel from \"./RoomChoseModel\";\n\nclass GameDataCenter {\n    private _tModel: Array<IDataModel> = [];\n\n    accountModel: AccountModel = null;\n    socketModel: SocketModel = null;\n    roomInfoModel: RoomInfoModel = null;\n    roomChoseModel: RoomChoseModel = null;\n\n    public static instance;\n\n    constructor() {\n        GameDataCenter.instance = this;\n    }\n\n    newModel<T extends IDataModel>(c: { new(): T }): T {\n        let obj = SingletonFactory.getInstance(c);\n        this._tModel.push(obj);\n        return obj;\n    }\n\n    clear() {\n        this._tModel.forEach(m => {\n            m.clear();\n        });\n    }\n\n    initModule() {\n        this.accountModel = this.newModel(AccountModel);\n        this.socketModel = this.newModel(SocketModel);\n        this.roomInfoModel = this.newModel(RoomInfoModel);\n        this.roomChoseModel = this.newModel(RoomChoseModel);\n\n        VM.add(this.accountModel, 'account');\n        VM.add(this.roomInfoModel, 'roomInfo');\n        VM.add(this.roomChoseModel, 'roomChose');\n    }\n}\n\nexport default new GameDataCenter();\n(window as any).GameDataCenter = GameDataCenter;"]}