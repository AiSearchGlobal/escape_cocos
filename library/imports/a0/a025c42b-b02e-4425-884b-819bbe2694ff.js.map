{"version":3,"sources":["assets/script/framework/component/VMListViewCtrl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Log } from \"../../utils/Log\";\nimport EventMng from \"../manager/EventMng\";\n\n\nconst { ccclass, menu, property } = cc._decorator;\n/**\n *  [VM-ListViewCtrl]\n * 将该组件绑定到scrollView上\n * 竖屏滑块，content不需要添加layout，可显示无限条数据\n * 获取到数据后调用initialize渲染\n * 小预置体需要有initUI方法，供该组件调用刷新数据\n */\n@ccclass\n@menu(\"ModelViewer/VM-ListViewCtrl(竖滑块)\")\nexport default class VMListViewCtrl extends cc.Component {\n\t@property(cc.Prefab)\n\titemTemplate: cc.Prefab = null;\n\t@property(cc.ScrollView)\n\tscrollView: cc.ScrollView = null;\n\t@property(cc.Integer)\n\tspawnCount: number = 20; // how many items we actually spawn\n\t@property(cc.Integer)\n\tspacing: number = 10;    // space between each item\n\t@property(cc.Integer)\n\tbufferZone: number = 1600; // when item is away from bufferZone, we relocate it\n\n\tprivate content: cc.Node;\n\tprivate items: Array<any> = [];\t// array to store spawned items\n\tprivate updateTimer: number = 0;\n\tprivate updateInterval: number = 0.2;\n\tprivate lastContentPosY: number = 0;\t// use this variable to detect if we are scrolling up or down\n\tprivate dataList: Array<any> = [];\t//后台返回数据\n\tprivate totalCount: number;\n\tprivate itemTemplateName: string;\t//item预制件脚本名字\n    private _spawnCount: number;\n\n\tonEnable(){\n        this._spawnCount = this.spawnCount;\n\t}\n\n\tonDestroy(){\n\t}\n\n\tonLoad() {\n    \tthis.content = this.scrollView.content;\n\t\tthis.itemTemplateName  = this.itemTemplate.name.replace(this.itemTemplate.name[0], `UI${this.itemTemplate.name[0].toUpperCase()}`)\n\t}\n\n    //初始话滑块\n\tinitialize(dataList: Array<any>){\n\t\tthis.dataList = dataList;\n\t\tthis.totalCount = dataList.length;\n\n\t\tthis._spawnCount = Math.min(this.totalCount, this._spawnCount);\n        this.content.removeAllChildren();\n        this.items = [];\n\n        this.content.height = this.totalCount * (this.itemTemplate.data.height + this.spacing) + this.spacing; // get total content height\n\t\tfor (let i = 0; i < this._spawnCount; ++i) { // spawn items, we only need to do this once\n    \t\tlet item = cc.instantiate(this.itemTemplate);\n    \t\tthis.content.addChild(item);\n\t\t\titem[\"itemID\"] = i;\n\t\t\titem.x = 0;\n    \t\titem.y = -item.height * (0.5 + i) - this.spacing * (i + 1);\n\n    \t\titem.getComponent(this.itemTemplateName).initUI(dataList[i]);\n            this.items.push(item);\n    \t}\n    }\n\n\tgetPositionInView(item) { // get item position in scrollview's node space\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    }\n\n\tupdate(dt: number) {\n        this.updateTimer += dt;\n        if (this.updateTimer < this.updateInterval) return; // we don't need to do the math every frame\n        this.updateTimer = 0;\n        let items = this.items;\n        let buffer = this.bufferZone;\n        let isDown = this.scrollView.content.y < this.lastContentPosY; // scrolling direction\n        let offset = (this.itemTemplate.data.height + this.spacing) * items.length;\n        for (let i = 0; i < items.length; ++i) {\n            let viewPos = this.getPositionInView(items[i]);\n            if (isDown) {\n                // if away from buffer zone and not reaching top of content\n                if (viewPos.y < -buffer && items[i].y + offset < 0) {\n                    items[i].y = items[i].y + offset;\n                    let item = items[i].getComponent(this.itemTemplateName);\n                    let itemId = items[i].itemID - items.length;\n                    items[i].itemID = itemId\n                    item.initUI(this.dataList[itemId]);\n                }\n            } else {\n                // if away from buffer zone and not reaching bottom of content\n                if (viewPos.y > buffer && items[i].y - offset > -this.content.height) {\n                    items[i].y = items[i].y - offset;\n                    let item = items[i].getComponent(this.itemTemplateName);\n                    let itemId = items[i].itemID + items.length;\n                    items[i].itemID = itemId\n                    item.initUI(this.dataList[itemId]);\n                }\n            }\n        }\n        // update lastContentPosY\n        this.lastContentPosY = this.scrollView.content.y;\n    }\n\n\tscrollEvent(sender, event) {\n        switch(event) {\n            case 0: \n                Log.log(\"Scroll to Top\"); \n                break;\n            case 1: \n                Log.log(\"Scroll to Bottom\"); \n                break;\n            case 2: \n                Log.log(\"Scroll to Left\"); \n                break;\n            case 3: \n                Log.log(\"Scroll to Right\"); \n                break;\n            case 4: \n                Log.log(\"Scrolling\"); \n                break;\n            case 5: \n                Log.log(\"Bounce Top\"); \n                break;\n            case 6: \n                Log.log(\"Bounce bottom\"); \n                break;\n            case 7: \n                Log.log(\"Bounce left\"); \n                break;\n            case 8: \n                Log.log(\"Bounce right\"); \n                break;\n            case 9: \n                Log.log(\"Auto scroll ended\"); \n                break;\n        }\n    }\n\n\taddItem() {\n        this.content.height = (this.totalCount + 1) * (this.itemTemplate.data.height + this.spacing) + this.spacing; // get total content height\n        this.totalCount = this.totalCount + 1;\n    }\n\n    removeItem() {\n        if (this.totalCount - 1 < 30) {\n            cc.error(\"can't remove item less than 30!\");\n            return;\n        }\n\n        this.content.height = (this.totalCount - 1) * (this.itemTemplate.data.height + this.spacing) + this.spacing; // get total content height\n        this.totalCount = this.totalCount - 1;\n\n        this.moveBottomItemToTop();\n    }\n\n\tmoveBottomItemToTop () {\n        let offset = (this.itemTemplate.data.height + this.spacing) * this.items.length;\n        let length = this.items.length;\n        let item = this.getItemAtBottom();\n\n        // whether need to move to top\n        if (item.y + offset < 0) {\n            item.y = item.y + offset;\n            let itemComp = item.getComponent('Item');\n            let itemId = itemComp.itemID - length;\n            itemComp.updateItem(itemId);\n        }\n    }\n\n    getItemAtBottom () {\n        let item = this.items[0];\n        for (let i = 1; i < this.items.length; ++i) {\n            if (item.y > this.items[i].y) {\n                item = this.items[i];\n            }\n        }\n        return item;\n    }\n\n    scrollToFixedPosition() {\n        this.scrollView.scrollToOffset(cc.v2(0, 500), 2);\n    }\n}"]}