{"version":3,"sources":["assets/script/framework/behavior/BhvRollNumber.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/*\n * @Author: wss \n * @Date: 2019-04-17 16:33:34 \n * @Last Modified by: wss\n * @Last Modified time: 2019-04-23 00:24:50\n */\n\nconst {ccclass, property, menu} = cc._decorator;\n\nenum VALUE_TYPE {\n    /**整数模式,只会以整数处理 */\n    INTEGER,\n    /**两位小数模式,最终结果保留两位小数 0.00 */\n    FIXED_2,\n    /**计时器模式,以计时器格式变动 00:00 */\n    TIMER,\n    /**百分比模式 (百分比结果 基于小数,因此初始值必须为小数)*/\n    PERCENTAGE,\n    /*缩写单位模式KMBT */\n    KMBT_FIXED2,\n    /**自定义模式 (通过传入的函数,进行自定义) */\n    CUSTOMER\n}\n\n/**\n * [滚动数字] ver 0.5.0\n * 将会使用 lerp 自动滚动数字到目标数值\n */\n@ccclass\n@menu(\"添加特殊行为/UI/Roll Number (滚动数字)\")\nexport default class BhvRollNumber extends cc.Component {\n\n    @property({\n        type:cc.Label,\n        tooltip:'需要滚动的 Label 组件,如果不进行设置，就会从自己的节点自动查找'\n    })\n    label:cc.Label = null;\n\n    @property({\n        tooltip:'当前的滚动值(开始的滚动值)'\n    })\n    value:number = 0;\n\n    @property({\n        tooltip:'是否显示正负符号'\n    })\n    showPlusSymbol:boolean = false;\n\n    @property({\n        tooltip:'滚动的目标值'\n    })\n    public get targetValue() : number {\n        return this._targetValue;\n    }\n    public set targetValue(v : number) {\n        this._targetValue = v;\n        this.scroll();//数据变动了就开始滚动\n    }\n    @property\n    private _targetValue : number = 100;\n    \n    \n    /** 滚动的线性差值 0 ~ 1 */\n    @property({\n        tooltip:'滚动的线性差值',\n        step:0.01,\n        max:1,\n        min:0\n    })\n    lerp = 0.1;\t  \n\n    @property({\n        tooltip:'是否在开始时就播放'\n    })\n    private playAtStart:boolean = true;\n\n    @property({\n        tooltip:'在滚动之前会等待几秒',\n        step:0.1,\n        max:1,\n        min:0\n    })\n    private runWaitTimer:number = 0;\n\n    @property({\n        type:cc.Enum(VALUE_TYPE),\n        tooltip:'是否在开始时就播放'\n    })\n    private valueType:VALUE_TYPE = VALUE_TYPE.INTEGER;\n\n    /**自定义string 处理函数 */\n    private _custom_callback:(curValue:number,targetValue:number) => string = null;\n    \n\n    private isScrolling:boolean = false;   \n\n    private _lastLabelText:string  = '';\n\n    //BhvRollNumber\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        if(this.label == undefined){\n            this.label = this.node.getComponent(cc.Label);\n        }\n\n        if(this.playAtStart){\n            this.updateLabel();\n            this.scroll();\n        }\n    }\n\n\n    /**开始滚动数字 */\n    scroll(){\n        if(this.isScrolling)return;//已经在滚动了就返回\n        if(this.runWaitTimer>0){\n            this.scheduleOnce(()=>{\n                this.isScrolling = true;\n            },this.runWaitTimer);\n        }else{\n            this.isScrolling = true;\n        }\n       \n    }\n\n    /**停止滚动数字 */\n    stop(){\n        this.value = this.targetValue;\n        this.isScrolling = false;\n        this.updateLabel();\n    }\n\n    /**初始化数值,不填写则全部按默认值处理 */\n    init(value?:number,target?:number,lerp?:number){\n        this.targetValue = target||0;\n        this.value = value||0;\n        this.lerp = lerp||0.1;\n    }\n\n    /**滚动到指定数字 */\n    scrollTo(target?:number){\n        if(target === null || target === undefined)return;\n        this.targetValue = target;\n    }\n\n    /** 更新文本 */\n    updateLabel(){\n        let value  = this.value;\n        let string = '';\n\n        switch (this.valueType) {\n            case VALUE_TYPE.INTEGER://最终显示整数类型\n                string = Math.round(value) + '';\n                break;\n            case VALUE_TYPE.FIXED_2://最终显示两位小数类型\n                string = value.toFixed(2);\n                break;\n            case VALUE_TYPE.TIMER: //最终显示 计时器类型\n                string = parseTimer(value);\n                break;\n            case VALUE_TYPE.PERCENTAGE: //最终显示 百分比\n                string = Math.round(value*100) +'%';\n                break;\n            case VALUE_TYPE.KMBT_FIXED2: //长单位缩放,只计算到 KMBT\n                if(value>=Number.MAX_VALUE){\n                    string = 'MAX';\n                }else if(value > 1000000000000){\n                    string =  (value/1000000000000).toFixed(2)+'T';\n                }else if(value >1000000000){\n                    string =  (value/1000000000).toFixed(2)+'B';\n                }else if(value >1000000){\n                    string =  (value/1000000).toFixed(2)+'M';\n                }else if(value >1000){\n                    string =  (value/1000).toFixed(2)+\"K\";\n                }else{\n                    string = Math.round(value).toString();\n                }\n                break;\n            case VALUE_TYPE.CUSTOMER: //自定义设置模式 (通过给定的自定义函数..处理)\n                if(this._custom_callback){\n                    string = this._custom_callback(this.value,this.targetValue)\n                }\n                break;\n            default:\n                break;\n        }\n\n        //显示正负符号\n\n        if(this.showPlusSymbol){\n            if(value>0){\n                string ='+'+string;\n            }else if(value<0){\n                string ='-'+string;\n            }\n\n        }\n\n\n       \n        if(this.label){\n            if(string === this.label.string)return; //保证效率,如果上次赋值过,就不重复赋值\n            this.label.string = string;\n        }\n    }\n\n    update (dt) {\n        if(this.isScrolling == false)return;\n        this.value = cc.misc.lerp(this.value,this.targetValue,this.lerp);\n        this.updateLabel();\n        if(Math.abs(this.value - this.targetValue)<=0.0001){\n            this.value = this.targetValue;\n            this.isScrolling =  false;\n            //this.node.emit('roll-hit-target');//滚动数字击中了目标\n            return;\n        }\n    }\n    \n}\n\n/** 时间格式转换 */\nfunction parseTimer(timer:number =0,isFullTimer:boolean = true){\n    let t:number = Math.floor(timer);\n    let hours:number = Math.floor( t/3600);\n    let mins:number =  Math.floor( (t%3600)/60);\n    let secs:number =  t%60;\n    let m = ''+mins;\n    let s = ''+secs;\n    if(secs<10)s = '0'+secs;\n    \n    //full timer 按小时算,无论有没有小时\n    if(isFullTimer){\n        if(mins<10) m = '0' + mins;\n        return  hours+':'+m+':'+s;\n    }else{\n        m = ''+ (mins +hours*60);\n        if(mins<10) m = '0' + mins;\n        return m+':'+s;\n    }\n}"]}